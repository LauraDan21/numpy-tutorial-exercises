{"telemetry_id":"g3tporrqluyngbnk","slug":"numpy-exercises","agent":"vscode","tutorial_started_at":1742480517285,"steps":[{"slug":"000-welcome","position":0,"files":[{"path":".learn/exercises/000-welcome/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/000-welcome/README.md","name":"README.md","hidden":true}],"ai_interactions":[],"compilations":[{"stderr":"","stdout":"WzAuMzcxNTEyNDggMC40OTY5MjcyMiAwLjc1MzQzMjk4XQo=","signal":null,"memoryUsage":524288,"cpuUsage":7489,"starting_at":1742486342545,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgojIGFyciA9IG5wLmFycmF5KFsxLDIsMCwwLDQsMF0pCiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKQojIHByaW50KGluZGV4ZXMpCgojIGFyciA9IG5wLmV5ZSgzKQojIHByaW50KGFycikKCmFyciA9IG5wLnJhbmRvbS5yYW5kb20oMykKcHJpbnQoYXJyKQoK","ended_at":1742486342703,"exit_code":0}],"tests":[],"is_testeable":false},{"slug":"001-create-entry-file","position":1,"files":[{"path":".learn/exercises/001-create-entry-file/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/001-create-entry-file/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/001-create-entry-file/test.py","name":"test.py","hidden":true}],"ai_interactions":[],"compilations":[],"tests":[{"starting_at":1742480592258,"ended_at":1742480592718,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvbnVtcHktdHV0b3JpYWwtZXhlcmNpc2VzCnBsdWdpbnM6IHRlc3Rkb3gtMy4xLjAKY29sbGVjdGVkIDEgaXRlbQoKLmxlYXJuL2V4ZXJjaXNlcy8wMDEtY3JlYXRlLWVudHJ5LWZpbGUvdGVzdC5weSAbWzMxbUYbWzBtG1szMW0gICAgICAgICAgICAgICAgICAgICAgICAgWzEwMCVdG1swbQoKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gRkFJTFVSRVMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KG1szMW0bWzFtX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXyB0ZXN0X2ZpbGVfZXhpc3RzIF9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18bWzBtCgogICAgQHB5dGVzdC5tYXJrLml0KCdUaGUgYXBwLnB5IGZpbGUgc2hvdWxkIGV4aXN0IG9uIHRoZSByb290IG9mIHRoZSBwcm9qZWN0JykKICAgIGRlZiB0ZXN0X2ZpbGVfZXhpc3RzKCk6Cj4gICAgICAgYXNzZXJ0IG9zLnBhdGguZXhpc3RzKCJhcHAucHkiKSA9PSBUcnVlChtbMW0bWzMxbUUgICAgICAgQXNzZXJ0aW9uRXJyb3I6IGFzc2VydCBGYWxzZSA9PSBUcnVlG1swbQobWzFtG1szMW1FICAgICAgICArICB3aGVyZSBGYWxzZSA9IDxmdW5jdGlvbiBleGlzdHMgYXQgMHg3NzM5OGE3MTFmMzA+KCdhcHAucHknKRtbMG0KG1sxbRtbMzFtRSAgICAgICAgKyAgICB3aGVyZSA8ZnVuY3Rpb24gZXhpc3RzIGF0IDB4NzczOThhNzExZjMwPiA9IDxtb2R1bGUgJ3Bvc2l4cGF0aCcgZnJvbSAnL3Vzci9sb2NhbC9saWIvcHl0aG9uMy4xMC9wb3NpeHBhdGgucHknPi5leGlzdHMbWzBtChtbMW0bWzMxbUUgICAgICAgICsgICAgICB3aGVyZSA8bW9kdWxlICdwb3NpeHBhdGgnIGZyb20gJy91c3IvbG9jYWwvbGliL3B5dGhvbjMuMTAvcG9zaXhwYXRoLnB5Jz4gPSBvcy5wYXRoG1swbQoKG1sxbRtbMzFtLmxlYXJuL2V4ZXJjaXNlcy8wMDEtY3JlYXRlLWVudHJ5LWZpbGUvdGVzdC5weRtbMG06NjogQXNzZXJ0aW9uRXJyb3IKG1szNm0bWzFtPT09PT09PT09PT09PT09PT09PT09PT09PT09IHNob3J0IHRlc3Qgc3VtbWFyeSBpbmZvID09PT09PT09PT09PT09PT09PT09PT09PT09PT0bWzBtChtbMzFtRkFJTEVEG1swbSAubGVhcm4vZXhlcmNpc2VzLzAwMS1jcmVhdGUtZW50cnktZmlsZS90ZXN0LnB5OjobWzFtdGVzdF9maWxlX2V4aXN0cxtbMG0gLSBBc3NlcnRpb25FcnJvcjogYXNzZXJ0IEZhbHNlID09IFRydWUKG1szMW09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gG1szMW0bWzFtMSBmYWlsZWQbWzBtG1szMW0gaW4gMC4wM3MbWzBtG1szMW0gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PRtbMG0K","stderr":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvbnVtcHktdHV0b3JpYWwtZXhlcmNpc2VzCnBsdWdpbnM6IHRlc3Rkb3gtMy4xLjAKY29sbGVjdGVkIDEgaXRlbQoKLmxlYXJuL2V4ZXJjaXNlcy8wMDEtY3JlYXRlLWVudHJ5LWZpbGUvdGVzdC5weSAbWzMxbUYbWzBtG1szMW0gICAgICAgICAgICAgICAgICAgICAgICAgWzEwMCVdG1swbQoKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gRkFJTFVSRVMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KG1szMW0bWzFtX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXyB0ZXN0X2ZpbGVfZXhpc3RzIF9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18bWzBtCgogICAgQHB5dGVzdC5tYXJrLml0KCdUaGUgYXBwLnB5IGZpbGUgc2hvdWxkIGV4aXN0IG9uIHRoZSByb290IG9mIHRoZSBwcm9qZWN0JykKICAgIGRlZiB0ZXN0X2ZpbGVfZXhpc3RzKCk6Cj4gICAgICAgYXNzZXJ0IG9zLnBhdGguZXhpc3RzKCJhcHAucHkiKSA9PSBUcnVlChtbMW0bWzMxbUUgICAgICAgQXNzZXJ0aW9uRXJyb3I6IGFzc2VydCBGYWxzZSA9PSBUcnVlG1swbQobWzFtG1szMW1FICAgICAgICArICB3aGVyZSBGYWxzZSA9IDxmdW5jdGlvbiBleGlzdHMgYXQgMHg3NzM5OGE3MTFmMzA+KCdhcHAucHknKRtbMG0KG1sxbRtbMzFtRSAgICAgICAgKyAgICB3aGVyZSA8ZnVuY3Rpb24gZXhpc3RzIGF0IDB4NzczOThhNzExZjMwPiA9IDxtb2R1bGUgJ3Bvc2l4cGF0aCcgZnJvbSAnL3Vzci9sb2NhbC9saWIvcHl0aG9uMy4xMC9wb3NpeHBhdGgucHknPi5leGlzdHMbWzBtChtbMW0bWzMxbUUgICAgICAgICsgICAgICB3aGVyZSA8bW9kdWxlICdwb3NpeHBhdGgnIGZyb20gJy91c3IvbG9jYWwvbGliL3B5dGhvbjMuMTAvcG9zaXhwYXRoLnB5Jz4gPSBvcy5wYXRoG1swbQoKG1sxbRtbMzFtLmxlYXJuL2V4ZXJjaXNlcy8wMDEtY3JlYXRlLWVudHJ5LWZpbGUvdGVzdC5weRtbMG06NjogQXNzZXJ0aW9uRXJyb3IKG1szNm0bWzFtPT09PT09PT09PT09PT09PT09PT09PT09PT09IHNob3J0IHRlc3Qgc3VtbWFyeSBpbmZvID09PT09PT09PT09PT09PT09PT09PT09PT09PT0bWzBtChtbMzFtRkFJTEVEG1swbSAubGVhcm4vZXhlcmNpc2VzLzAwMS1jcmVhdGUtZW50cnktZmlsZS90ZXN0LnB5OjobWzFtdGVzdF9maWxlX2V4aXN0cxtbMG0gLSBBc3NlcnRpb25FcnJvcjogYXNzZXJ0IEZhbHNlID09IFRydWUKG1szMW09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gG1szMW0bWzFtMSBmYWlsZWQbWzBtG1szMW0gaW4gMC4wM3MbWzBtG1szMW0gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PRtbMG0KLAoKICAgCiAgICAgICAgICAbWzMxbVlvdXIgY29kZSBtdXN0IHRvIGNvbXBseSB3aXRoIHRoZSBmb2xsb3dpbmcgdGVzdHM6G1szOW0gCgogICAgIBtbMzFtG1sxbXggKGZhaWwpG1syMm0bWzM5bSAwLiAbWzM3bVRoZSBhcHAucHkgZmlsZSBzaG91bGQgZXhpc3Qgb24gdGhlIHJvb3Qgb2YgdGhlIHByb2plY3QbWzM5bSAKCg==","exit_code":1},{"starting_at":1742480620725,"ended_at":1742480622262,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvbnVtcHktdHV0b3JpYWwtZXhlcmNpc2VzCnBsdWdpbnM6IHRlc3Rkb3gtMy4xLjAKY29sbGVjdGVkIDEgaXRlbQoKLmxlYXJuL2V4ZXJjaXNlcy8wMDEtY3JlYXRlLWVudHJ5LWZpbGUvdGVzdC5weSAbWzMybS4bWzBtG1szMm0gICAgICAgICAgICAgICAgICAgICAgICAgWzEwMCVdG1swbQoKG1szMm09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gG1szMm0bWzFtMSBwYXNzZWQbWzBtG1szMm0gaW4gMC4wMnMbWzBtG1szMm0gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PRtbMG0K","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1742480588863,"completed_at":1742480622262},{"slug":"002-import-numpy","position":2,"files":[{"path":".learn/exercises/002-import-numpy/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/002-import-numpy/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/002-import-numpy/solution.hide.py","name":"solution.hide.py","hidden":true},{"path":".learn/exercises/002-import-numpy/test.py","name":"test.py","hidden":true}],"ai_interactions":[],"compilations":[],"tests":[{"starting_at":1742480637060,"source_code":"aW1wb3J0IG51bXB5IGFzIG5w","ended_at":1742480637378,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvbnVtcHktdHV0b3JpYWwtZXhlcmNpc2VzCnBsdWdpbnM6IHRlc3Rkb3gtMy4xLjAKY29sbGVjdGVkIDEgaXRlbQoKLmxlYXJuL2V4ZXJjaXNlcy8wMDItaW1wb3J0LW51bXB5L3Rlc3QucHkgG1szMm0uG1swbRtbMzJtICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgWzEwMCVdG1swbQoKG1szMm09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gG1szMm0bWzFtMSBwYXNzZWQbWzBtG1szMm0gaW4gMC4wMXMbWzBtG1szMm0gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PRtbMG0K","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1742480623897,"completed_at":1742480637378},{"slug":"003-numpy-version","position":3,"files":[{"path":".learn/exercises/003-numpy-version/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/003-numpy-version/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/003-numpy-version/solution.hide.py","name":"solution.hide.py","hidden":true},{"path":".learn/exercises/003-numpy-version/test.py","name":"test.py","hidden":true}],"ai_interactions":[],"compilations":[],"tests":[{"starting_at":1742480675324,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCnByaW50KG5wLl9fdmVyc2lvbl9fKQpucC5zaG93X2NvbmZpZygp","ended_at":1742480675782,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvbnVtcHktdHV0b3JpYWwtZXhlcmNpc2VzCnBsdWdpbnM6IHRlc3Rkb3gtMy4xLjAKY29sbGVjdGVkIDIgaXRlbXMKCi5sZWFybi9leGVyY2lzZXMvMDAzLW51bXB5LXZlcnNpb24vdGVzdC5weSAbWzMybS4bWzBtG1szMm0uG1swbRtbMzJtICAgICAgICAgICAgICAgICAgICAgICAgICAgIFsxMDAlXRtbMG0KChtbMzJtPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IBtbMzJtG1sxbTIgcGFzc2VkG1swbRtbMzJtIGluIDAuMTZzG1swbRtbMzJtID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0bWzBtCg==","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1742480638630,"completed_at":1742480675782},{"slug":"004-your-first-vector","position":4,"files":[{"path":".learn/exercises/004-your-first-vector/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/004-your-first-vector/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/004-your-first-vector/solution.hide.py","name":"solution.hide.py","hidden":true},{"path":".learn/exercises/004-your-first-vector/test.py","name":"test.py","hidden":true}],"ai_interactions":[],"compilations":[{"stderr":"","stdout":"MS4yNC4yCm9wZW5ibGFzNjRfX2luZm86CiAgICBsaWJyYXJpZXMgPSBbJ29wZW5ibGFzNjRfJywgJ29wZW5ibGFzNjRfJ10KICAgIGxpYnJhcnlfZGlycyA9IFsnL3Vzci9sb2NhbC9saWInXQogICAgbGFuZ3VhZ2UgPSBjCiAgICBkZWZpbmVfbWFjcm9zID0gWygnSEFWRV9DQkxBUycsIE5vbmUpLCAoJ0JMQVNfU1lNQk9MX1NVRkZJWCcsICc2NF8nKSwgKCdIQVZFX0JMQVNfSUxQNjQnLCBOb25lKV0KICAgIHJ1bnRpbWVfbGlicmFyeV9kaXJzID0gWycvdXNyL2xvY2FsL2xpYiddCmJsYXNfaWxwNjRfb3B0X2luZm86CiAgICBsaWJyYXJpZXMgPSBbJ29wZW5ibGFzNjRfJywgJ29wZW5ibGFzNjRfJ10KICAgIGxpYnJhcnlfZGlycyA9IFsnL3Vzci9sb2NhbC9saWInXQogICAgbGFuZ3VhZ2UgPSBjCiAgICBkZWZpbmVfbWFjcm9zID0gWygnSEFWRV9DQkxBUycsIE5vbmUpLCAoJ0JMQVNfU1lNQk9MX1NVRkZJWCcsICc2NF8nKSwgKCdIQVZFX0JMQVNfSUxQNjQnLCBOb25lKV0KICAgIHJ1bnRpbWVfbGlicmFyeV9kaXJzID0gWycvdXNyL2xvY2FsL2xpYiddCm9wZW5ibGFzNjRfX2xhcGFja19pbmZvOgogICAgbGlicmFyaWVzID0gWydvcGVuYmxhczY0XycsICdvcGVuYmxhczY0XyddCiAgICBsaWJyYXJ5X2RpcnMgPSBbJy91c3IvbG9jYWwvbGliJ10KICAgIGxhbmd1YWdlID0gYwogICAgZGVmaW5lX21hY3JvcyA9IFsoJ0hBVkVfQ0JMQVMnLCBOb25lKSwgKCdCTEFTX1NZTUJPTF9TVUZGSVgnLCAnNjRfJyksICgnSEFWRV9CTEFTX0lMUDY0JywgTm9uZSksICgnSEFWRV9MQVBBQ0tFJywgTm9uZSldCiAgICBydW50aW1lX2xpYnJhcnlfZGlycyA9IFsnL3Vzci9sb2NhbC9saWInXQpsYXBhY2tfaWxwNjRfb3B0X2luZm86CiAgICBsaWJyYXJpZXMgPSBbJ29wZW5ibGFzNjRfJywgJ29wZW5ibGFzNjRfJ10KICAgIGxpYnJhcnlfZGlycyA9IFsnL3Vzci9sb2NhbC9saWInXQogICAgbGFuZ3VhZ2UgPSBjCiAgICBkZWZpbmVfbWFjcm9zID0gWygnSEFWRV9DQkxBUw==","signal":"SIGTERM","memoryUsage":524288,"cpuUsage":6267,"errorType":"run-time","starting_at":1742480718012,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCnByaW50KG5wLl9fdmVyc2lvbl9fKQpucC5zaG93X2NvbmZpZygpCgp2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQpwcmludCh2ZWN0b3JfbnVsbCk=","ended_at":1742480718178,"exit_code":null},{"stderr":"","stdout":"WzAuIDAuIDAuIDAuIDAuIDAuIDAuIDAuIDAuIDAuXQo=","signal":null,"memoryUsage":524288,"cpuUsage":7057,"starting_at":1742480732131,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKdmVjdG9yX251bGwgPSBucC56ZXJvcygxMCkKcHJpbnQodmVjdG9yX251bGwp","ended_at":1742480732369,"exit_code":0}],"tests":[{"starting_at":1742480715235,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCnByaW50KG5wLl9fdmVyc2lvbl9fKQpucC5zaG93X2NvbmZpZygpCgp2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQpwcmludCh2ZWN0b3JfbnVsbCk=","ended_at":1742480715640,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvbnVtcHktdHV0b3JpYWwtZXhlcmNpc2VzCnBsdWdpbnM6IHRlc3Rkb3gtMy4xLjAKY29sbGVjdGVkIDMgaXRlbXMKCi5sZWFybi9leGVyY2lzZXMvMDA0LXlvdXItZmlyc3QtdmVjdG9yL3Rlc3QucHkgG1szMm0uG1swbRtbMzJtLhtbMG0bWzMybS4bWzBtG1szMm0gICAgICAgICAgICAgICAgICAgICAgIFsxMDAlXRtbMG0KChtbMzJtPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IBtbMzJtG1sxbTMgcGFzc2VkG1swbRtbMzJtIGluIDAuMDlzG1swbRtbMzJtID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0bWzBtCg==","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1742480677073,"completed_at":1742480715640},{"slug":"005-array-memory-size","position":5,"files":[{"path":".learn/exercises/005-array-memory-size/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/005-array-memory-size/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/005-array-memory-size/solution.hide.py","name":"solution.hide.py","hidden":true},{"path":".learn/exercises/005-array-memory-size/test.py","name":"test.py","hidden":true}],"ai_interactions":[],"compilations":[{"stderr":"","stdout":"OAo=","signal":null,"memoryUsage":524288,"cpuUsage":5853,"starting_at":1742480805714,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKdmVjdG9yX251bGwgPSBucC56ZXJvcygxMCkKcHJpbnQodmVjdG9yX251bGwuaXRlbXNpemUpCgo=","ended_at":1742480805888,"exit_code":0},{"stderr":"","stdout":"OAo=","signal":null,"memoryUsage":524288,"cpuUsage":9014,"starting_at":1742480806955,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKdmVjdG9yX251bGwgPSBucC56ZXJvcygxMCkKcHJpbnQodmVjdG9yX251bGwuaXRlbXNpemUpCgo=","ended_at":1742480807141,"exit_code":0},{"stderr":"","stdout":"WzAuIDAuIDAuIDAuIDAuIDAuIDAuIDAuIDAuIDAuXQo4MAo=","signal":null,"memoryUsage":524288,"cpuUsage":7637,"starting_at":1742480899394,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKdmVjdG9yX251bGwgPSBucC56ZXJvcygxMCkKcHJpbnQodmVjdG9yX251bGwpCgphbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCnByaW50KGFtb3VudF9vZl9tZW1vcnkpCg==","ended_at":1742480899571,"exit_code":0}],"tests":[{"starting_at":1742480901912,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKdmVjdG9yX251bGwgPSBucC56ZXJvcygxMCkKcHJpbnQodmVjdG9yX251bGwpCgphbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCnByaW50KGFtb3VudF9vZl9tZW1vcnkpCg==","ended_at":1742480902302,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvbnVtcHktdHV0b3JpYWwtZXhlcmNpc2VzCnBsdWdpbnM6IHRlc3Rkb3gtMy4xLjAKY29sbGVjdGVkIDQgaXRlbXMKCi5sZWFybi9leGVyY2lzZXMvMDA1LWFycmF5LW1lbW9yeS1zaXplL3Rlc3QucHkgG1szMm0uG1swbRtbMzJtLhtbMG0bWzMybS4bWzBtG1szMm0uG1swbRtbMzJtICAgICAgICAgICAgICAgICAgICAgIFsxMDAlXRtbMG0KChtbMzJtPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IBtbMzJtG1sxbTQgcGFzc2VkG1swbRtbMzJtIGluIDAuMDlzG1swbRtbMzJtID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0bWzBtCg==","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1742480735069,"completed_at":1742480902302},{"slug":"006-numpy-documentation","position":6,"files":[{"path":".learn/exercises/006-numpy-documentation/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/006-numpy-documentation/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/006-numpy-documentation/solution.hide.py","name":"solution.hide.py","hidden":true},{"path":".learn/exercises/006-numpy-documentation/test.py","name":"test.py","hidden":true}],"ai_interactions":[],"compilations":[{"stderr":"","stdout":"WzAuIDAuIDAuIDAuIDAuIDAuIDAuIDAuIDAuIDAuXQo4MApTaWduZWQgaW50ZWdlciB0eXBlLCBjb21wYXRpYmxlIHdpdGggUHl0aG9uIGBpbnRgIGFuZCBDIGBgbG9uZ2BgLgoKOkNoYXJhY3RlciBjb2RlOiBgYCdsJ2BgCjpDYW5vbmljYWwgbmFtZTogYG51bXB5LmludF9gCjpBbGlhcyBvbiB0aGlzIHBsYXRmb3JtIChMaW51eCB4ODZfNjQpOiBgbnVtcHkuaW50NjRgOiA2NC1iaXQgc2lnbmVkIGludGVnZXIgKGBgLTlfMjIzXzM3Ml8wMzZfODU0Xzc3NV84MDhgYCB0byBgYDlfMjIzXzM3Ml8wMzZfODU0Xzc3NV84MDdgYCkuCjpBbGlhcyBvbiB0aGlzIHBsYXRmb3JtIChMaW51eCB4ODZfNjQpOiBgbnVtcHkuaW50cGA6IFNpZ25lZCBpbnRlZ2VyIGxhcmdlIGVub3VnaCB0byBmaXQgcG9pbnRlciwgY29tcGF0aWJsZSB3aXRoIEMgYGBpbnRwdHJfdGBgLgo=","signal":null,"memoryUsage":524288,"cpuUsage":7833,"starting_at":1742480933047,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKdmVjdG9yX251bGwgPSBucC56ZXJvcygxMCkKcHJpbnQodmVjdG9yX251bGwpCgphbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCnByaW50KGFtb3VudF9vZl9tZW1vcnkpCgpucC5pbmZvKG5wLmFkZCgyLDMpKQ==","ended_at":1742480933284,"exit_code":0}],"tests":[{"starting_at":1742480941943,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKdmVjdG9yX251bGwgPSBucC56ZXJvcygxMCkKcHJpbnQodmVjdG9yX251bGwpCgphbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCnByaW50KGFtb3VudF9vZl9tZW1vcnkpCgpucC5pbmZvKG5wLmFkZCgyLDMpKQ==","ended_at":1742480942321,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvbnVtcHktdHV0b3JpYWwtZXhlcmNpc2VzCnBsdWdpbnM6IHRlc3Rkb3gtMy4xLjAKY29sbGVjdGVkIDIgaXRlbXMKCi5sZWFybi9leGVyY2lzZXMvMDA2LW51bXB5LWRvY3VtZW50YXRpb24vdGVzdC5weSAbWzMybS4bWzBtG1szMm0uG1swbRtbMzJtICAgICAgICAgICAgICAgICAgICAgIFsxMDAlXRtbMG0KChtbMzJtPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IBtbMzJtG1sxbTIgcGFzc2VkG1swbRtbMzJtIGluIDAuMDhzG1swbRtbMzJtID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0bWzBtCg==","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1742480904226,"completed_at":1742480942321},{"slug":"007-change-vector-values","position":7,"files":[{"path":".learn/exercises/007-change-vector-values/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/007-change-vector-values/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/007-change-vector-values/solution.hide.py","name":"solution.hide.py","hidden":true},{"path":".learn/exercises/007-change-vector-values/test.py","name":"test.py","hidden":true}],"ai_interactions":[],"compilations":[{"stderr":"","stdout":"WzAuIDAuIDAuIDAuIDAuIDAuIDAuIDAuIDAuIDAuXQo=","signal":null,"memoryUsage":524288,"cpuUsage":6188,"starting_at":1742481101486,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKdmVjdG9yX251bGwgPSBucC56ZXJvcygxMCkKcHJpbnQodmVjdG9yX251bGwpCgojIGFtb3VudF9vZl9tZW1vcnkgPSB2ZWN0b3JfbnVsbC5zaXplICogdmVjdG9yX251bGwuaXRlbXNpemUKIyBwcmludChhbW91bnRfb2ZfbWVtb3J5KQoKIyBucC5pbmZvKG5wLmFkZCgyLDMpKQoKdmVjdG9yX251bGxbNF0gPSAx","ended_at":1742481101659,"exit_code":0},{"stderr":"","stdout":"WzAuIDAuIDAuIDAuIDAuIDAuIDAuIDAuIDAuIDAuXQoxLjAK","signal":null,"memoryUsage":524288,"cpuUsage":7559,"starting_at":1742481135889,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKdmVjdG9yX251bGwgPSBucC56ZXJvcygxMCkKcHJpbnQodmVjdG9yX251bGwpCgojIGFtb3VudF9vZl9tZW1vcnkgPSB2ZWN0b3JfbnVsbC5zaXplICogdmVjdG9yX251bGwuaXRlbXNpemUKIyBwcmludChhbW91bnRfb2ZfbWVtb3J5KQoKIyBucC5pbmZvKG5wLmFkZCgyLDMpKQoKdmVjdG9yX251bGxbNF0gPSAxCnByaW50KHZlY3Rvcl9udWxsWzRdKQ==","ended_at":1742481136066,"exit_code":0},{"stderr":"","stdout":"WzAuIDAuIDAuIDAuIDAuIDAuIDAuIDAuIDAuIDAuXQoxLjAK","signal":null,"memoryUsage":524288,"cpuUsage":8850,"starting_at":1742481141086,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKdmVjdG9yX251bGwgPSBucC56ZXJvcygxMCkKcHJpbnQodmVjdG9yX251bGwpCgojIGFtb3VudF9vZl9tZW1vcnkgPSB2ZWN0b3JfbnVsbC5zaXplICogdmVjdG9yX251bGwuaXRlbXNpemUKIyBwcmludChhbW91bnRfb2ZfbWVtb3J5KQoKIyBucC5pbmZvKG5wLmFkZCgyLDMpKQoKdmVjdG9yX251bGxbNF0gPSAxCnByaW50KHZlY3Rvcl9udWxsWzRdKQ==","ended_at":1742481141273,"exit_code":0},{"stderr":"","stdout":"WzAuIDAuIDAuIDAuIDAuIDAuIDAuIDAuIDAuIDAuXQpbMC4gMC4gMC4gMC4gMS4gMC4gMC4gMC4gMC4gMC5dCg==","signal":null,"memoryUsage":524288,"cpuUsage":7290,"starting_at":1742481167227,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKdmVjdG9yX251bGwgPSBucC56ZXJvcygxMCkKcHJpbnQodmVjdG9yX251bGwpCgojIGFtb3VudF9vZl9tZW1vcnkgPSB2ZWN0b3JfbnVsbC5zaXplICogdmVjdG9yX251bGwuaXRlbXNpemUKIyBwcmludChhbW91bnRfb2ZfbWVtb3J5KQoKIyBucC5pbmZvKG5wLmFkZCgyLDMpKQoKdmVjdG9yX251bGxbNF0gPSAxCnByaW50KHZlY3Rvcl9udWxsKQ==","ended_at":1742481167397,"exit_code":0}],"tests":[{"starting_at":1742481178109,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKdmVjdG9yX251bGwgPSBucC56ZXJvcygxMCkKcHJpbnQodmVjdG9yX251bGwpCgojIGFtb3VudF9vZl9tZW1vcnkgPSB2ZWN0b3JfbnVsbC5zaXplICogdmVjdG9yX251bGwuaXRlbXNpemUKIyBwcmludChhbW91bnRfb2ZfbWVtb3J5KQoKIyBucC5pbmZvKG5wLmFkZCgyLDMpKQoKdmVjdG9yX251bGxbNF0gPSAxCnByaW50KHZlY3Rvcl9udWxsKQ==","ended_at":1742481178493,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvbnVtcHktdHV0b3JpYWwtZXhlcmNpc2VzCnBsdWdpbnM6IHRlc3Rkb3gtMy4xLjAKY29sbGVjdGVkIDMgaXRlbXMKCi5sZWFybi9leGVyY2lzZXMvMDA3LWNoYW5nZS12ZWN0b3ItdmFsdWVzL3Rlc3QucHkgG1szMm0uG1swbRtbMzJtLhtbMG0bWzMybS4bWzBtG1szMm0gICAgICAgICAgICAgICAgICAgIFsxMDAlXRtbMG0KChtbMzJtPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IBtbMzJtG1sxbTMgcGFzc2VkG1swbRtbMzJtIGluIDAuMDhzG1swbRtbMzJtID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0bWzBtCg==","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1742480944762,"completed_at":1742481178493},{"slug":"008-vector-ranging-values","position":8,"files":[{"path":".learn/exercises/008-vector-ranging-values/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/008-vector-ranging-values/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/008-vector-ranging-values/solution.hide.py","name":"solution.hide.py","hidden":true},{"path":".learn/exercises/008-vector-ranging-values/test.py","name":"test.py","hidden":true}],"ai_interactions":[],"compilations":[{"stderr":"","stdout":"WzEwIDExIDEyIDEzIDE0IDE1IDE2IDE3IDE4IDE5IDIwIDIxIDIyIDIzIDI0IDI1IDI2IDI3IDI4IDI5IDMwIDMxIDMyIDMzCiAzNCAzNSAzNiAzNyAzOCAzOSA0MCA0MSA0MiA0MyA0NCA0NSA0NiA0NyA0OF0K","signal":null,"memoryUsage":524288,"cpuUsage":5270,"starting_at":1742481307486,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgp2ZWN0b3IgPSBucC5hcmFuZ2UoMTAsNDkpCnByaW50KHZlY3RvcikK","ended_at":1742481307657,"exit_code":0},{"stderr":"","stdout":"WzEwIDExIDEyIDEzIDE0IDE1IDE2IDE3IDE4IDE5IDIwIDIxIDIyIDIzIDI0IDI1IDI2IDI3IDI4IDI5IDMwIDMxIDMyIDMzCiAzNCAzNSAzNiAzNyAzOCAzOSA0MCA0MSA0MiA0MyA0NCA0NSA0NiA0NyA0OCA0OV0K","signal":null,"memoryUsage":524288,"cpuUsage":6638,"starting_at":1742481318771,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgp2ZWN0b3IgPSBucC5hcmFuZ2UoMTAsNTApCnByaW50KHZlY3RvcikK","ended_at":1742481318939,"exit_code":0},{"stderr":"","stdout":"WzEwIDEzIDE2IDE5IDIyIDI1IDI4IDMxIDM0IDM3IDQwIDQzIDQ2IDQ5XQo=","signal":null,"memoryUsage":524288,"cpuUsage":6795,"starting_at":1742481363432,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgp2ZWN0b3IgPSBucC5hcmFuZ2UoMTAsNTAsMykKcHJpbnQodmVjdG9yKQo=","ended_at":1742481363595,"exit_code":0}],"tests":[{"starting_at":1742481388420,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgp2ZWN0b3IgPSBucC5hcmFuZ2UoMTAsNTApCnByaW50KHZlY3RvcikK","ended_at":1742481388794,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvbnVtcHktdHV0b3JpYWwtZXhlcmNpc2VzCnBsdWdpbnM6IHRlc3Rkb3gtMy4xLjAKY29sbGVjdGVkIDMgaXRlbXMKCi5sZWFybi9leGVyY2lzZXMvMDA4LXZlY3Rvci1yYW5naW5nLXZhbHVlcy90ZXN0LnB5IBtbMzJtLhtbMG0bWzMybS4bWzBtG1szMm0uG1swbRtbMzJtICAgICAgICAgICAgICAgICAgIFsxMDAlXRtbMG0KChtbMzJtPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IBtbMzJtG1sxbTMgcGFzc2VkG1swbRtbMzJtIGluIDAuMDlzG1swbRtbMzJtID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0bWzBtCg==","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1742481180006,"completed_at":1742481388794},{"slug":"009-reverse-vector","position":9,"files":[{"path":".learn/exercises/009-reverse-vector/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/009-reverse-vector/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/009-reverse-vector/solution.hide.py","name":"solution.hide.py","hidden":true},{"path":".learn/exercises/009-reverse-vector/test.py","name":"test.py","hidden":true}],"ai_interactions":[],"compilations":[{"stderr":"","stdout":"WzkgOCA3IDYgNSA0IDMgMiAxIDBdCg==","signal":null,"memoryUsage":524288,"cpuUsage":5716,"starting_at":1742481725025,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgp2ZWN0b3IgPSBucC5hcnJheShbMCwxLDIsMyw0LDUsNiw3LDgsOV0pCgppbnZlcnRlZF92ZWN0b3IgPSB2ZWN0b3JbOjotMV0KcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKCgo=","ended_at":1742481725203,"exit_code":0}],"tests":[{"starting_at":1742481730949,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgp2ZWN0b3IgPSBucC5hcnJheShbMCwxLDIsMyw0LDUsNiw3LDgsOV0pCgppbnZlcnRlZF92ZWN0b3IgPSB2ZWN0b3JbOjotMV0KcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKCgo=","ended_at":1742481731335,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvbnVtcHktdHV0b3JpYWwtZXhlcmNpc2VzCnBsdWdpbnM6IHRlc3Rkb3gtMy4xLjAKY29sbGVjdGVkIDQgaXRlbXMKCi5sZWFybi9leGVyY2lzZXMvMDA5LXJldmVyc2UtdmVjdG9yL3Rlc3QucHkgG1szMm0uG1swbRtbMzJtLhtbMG0bWzMybS4bWzBtG1szMm0uG1swbRtbMzJtICAgICAgICAgICAgICAgICAgICAgICAgIFsxMDAlXRtbMG0KChtbMzJtPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IBtbMzJtG1sxbTQgcGFzc2VkG1swbRtbMzJtIGluIDAuMDlzG1swbRtbMzJtID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0bWzBtCg==","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1742481395883,"completed_at":1742481731336},{"slug":"010-matrix-with-ranging-values","position":10,"files":[{"path":".learn/exercises/010-matrix-with-ranging-values/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/010-matrix-with-ranging-values/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/010-matrix-with-ranging-values/solution.hide.py","name":"solution.hide.py","hidden":true},{"path":".learn/exercises/010-matrix-with-ranging-values/test.py","name":"test.py","hidden":true}],"ai_interactions":[],"compilations":[{"stderr":"VHJhY2ViYWNrIChtb3N0IHJlY2VudCBjYWxsIGxhc3QpOgogIEZpbGUgIi93b3Jrc3BhY2VzL251bXB5LXR1dG9yaWFsLWV4ZXJjaXNlcy9hcHAucHkiLCBsaW5lIDIzLCBpbiA8bW9kdWxlPgogICAgbWF0cml4ID0gbnAuYXJhbmdlKDAsOCkucmVzaGFwZSgoMywzKSkKVmFsdWVFcnJvcjogY2Fubm90IHJlc2hhcGUgYXJyYXkgb2Ygc2l6ZSA4IGludG8gc2hhcGUgKDMsMykK","stdout":"","signal":null,"memoryUsage":524288,"cpuUsage":6619,"errorType":"run-time","starting_at":1742482867520,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKbWF0cml4ID0gbnAuYXJhbmdlKDAsOCkucmVzaGFwZSgoMywzKSkKcHJpbnQobWF0cml4KQoKCgo=","ended_at":1742482867702,"exit_code":1},{"stderr":"","stdout":"W1swIDEgMl0KIFszIDQgNV0KIFs2IDcgOF1dCg==","signal":null,"memoryUsage":524288,"cpuUsage":6523,"starting_at":1742482884212,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKbWF0cml4ID0gbnAuYXJhbmdlKDkpLnJlc2hhcGUoKDMsMykpCnByaW50KG1hdHJpeCkKCgoK","ended_at":1742482884389,"exit_code":0}],"tests":[{"starting_at":1742482892440,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKbWF0cml4ID0gbnAuYXJhbmdlKDkpLnJlc2hhcGUoKDMsMykpCnByaW50KG1hdHJpeCkKCgoK","ended_at":1742482892828,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvbnVtcHktdHV0b3JpYWwtZXhlcmNpc2VzCnBsdWdpbnM6IHRlc3Rkb3gtMy4xLjAKY29sbGVjdGVkIDMgaXRlbXMKCi5sZWFybi9leGVyY2lzZXMvMDEwLW1hdHJpeC13aXRoLXJhbmdpbmctdmFsdWVzL3Rlc3QucHkgG1szMm0uG1swbRtbMzJtLhtbMG0bWzMybS4bWzBtG1szMm0gICAgICAgICAgICAgIFsxMDAlXRtbMG0KChtbMzJtPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IBtbMzJtG1sxbTMgcGFzc2VkG1swbRtbMzJtIGluIDAuMDlzG1swbRtbMzJtID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0bWzBtCg==","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1742481734547,"completed_at":1742482892828},{"slug":"011-find-indices-of-non-zero-elements","position":11,"files":[{"path":".learn/exercises/011-find-indices-of-non-zero-elements/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/011-find-indices-of-non-zero-elements/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/011-find-indices-of-non-zero-elements/solution.hide.py","name":"solution.hide.py","hidden":true},{"path":".learn/exercises/011-find-indices-of-non-zero-elements/test.py","name":"test.py","hidden":true}],"ai_interactions":[],"compilations":[{"stderr":"VHJhY2ViYWNrIChtb3N0IHJlY2VudCBjYWxsIGxhc3QpOgogIEZpbGUgIi93b3Jrc3BhY2VzL251bXB5LXR1dG9yaWFsLWV4ZXJjaXNlcy9hcHAucHkiLCBsaW5lIDI2LCBpbiA8bW9kdWxlPgogICAgYXJyID0gbnAubm9uemVybygpLmFycmF5KFsxLDIsMCwwLDQsMF0pCiAgRmlsZSAiPF9fYXJyYXlfZnVuY3Rpb25fXyBpbnRlcm5hbHM+IiwgbGluZSAxOTgsIGluIG5vbnplcm8KVHlwZUVycm9yOiBub256ZXJvKCkgbWlzc2luZyAxIHJlcXVpcmVkIHBvc2l0aW9uYWwgYXJndW1lbnQ6ICdhJwo=","stdout":"","signal":null,"memoryUsage":524288,"cpuUsage":7112,"errorType":"run-time","starting_at":1742483110361,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgphcnIgPSBucC5ub256ZXJvKCkuYXJyYXkoWzEsMiwwLDAsNCwwXSkKCgoK","ended_at":1742483110763,"exit_code":1},{"stderr":"VHJhY2ViYWNrIChtb3N0IHJlY2VudCBjYWxsIGxhc3QpOgogIEZpbGUgIi93b3Jrc3BhY2VzL251bXB5LXR1dG9yaWFsLWV4ZXJjaXNlcy9hcHAucHkiLCBsaW5lIDI2LCBpbiA8bW9kdWxlPgogICAgYXJyID0gbnAubm9uemVybygpLmFycmF5KFsxLDIsMCwwLDQsMF0pCiAgRmlsZSAiPF9fYXJyYXlfZnVuY3Rpb25fXyBpbnRlcm5hbHM+IiwgbGluZSAxOTgsIGluIG5vbnplcm8KVHlwZUVycm9yOiBub256ZXJvKCkgbWlzc2luZyAxIHJlcXVpcmVkIHBvc2l0aW9uYWwgYXJndW1lbnQ6ICdhJwo=","stdout":"","signal":null,"memoryUsage":393216,"cpuUsage":4986,"errorType":"run-time","starting_at":1742483179161,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgphcnIgPSBucC5ub256ZXJvKCkuYXJyYXkoWzEsMiwwLDAsNCwwXSkKcHJpbnQoYXJyKQoKCgo=","ended_at":1742483179342,"exit_code":1},{"stderr":"VHJhY2ViYWNrIChtb3N0IHJlY2VudCBjYWxsIGxhc3QpOgogIEZpbGUgIi93b3Jrc3BhY2VzL251bXB5LXR1dG9yaWFsLWV4ZXJjaXNlcy9hcHAucHkiLCBsaW5lIDI2LCBpbiA8bW9kdWxlPgogICAgYXJyID0gbnAubm9uemVybyhhcnIpLmFycmF5KFsxLDIsMCwwLDQsMF0pCk5hbWVFcnJvcjogbmFtZSAnYXJyJyBpcyBub3QgZGVmaW5lZAo=","stdout":"","signal":null,"memoryUsage":524288,"cpuUsage":8081,"errorType":"run-time","starting_at":1742483342308,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgphcnIgPSBucC5ub256ZXJvKGFycikuYXJyYXkoWzEsMiwwLDAsNCwwXSkKcHJpbnQoYXJyKQoKCgo=","ended_at":1742483342482,"exit_code":1},{"stderr":"","stdout":"KGFycmF5KFswLCAxLCA0XSksKQo=","signal":null,"memoryUsage":524288,"cpuUsage":7261,"starting_at":1742483419540,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgphcnIgPSBucC5hcnJheShbMSwyLDAsMCw0LDBdKQppbmRleGVzID0gbnAubm9uemVybyhhcnIpCnByaW50KGluZGV4ZXMpCgoKCg==","ended_at":1742483419712,"exit_code":0},{"stderr":"","stdout":"KGFycmF5KFswLCAxLCA0XSksKQo=","signal":null,"memoryUsage":524288,"cpuUsage":6882,"starting_at":1742483424579,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgphcnIgPSBucC5hcnJheShbMSwyLDAsMCw0LDBdKQppbmRleGVzID0gbnAubm9uemVybyhhcnIpCnByaW50KGluZGV4ZXMpCgoKCg==","ended_at":1742483424762,"exit_code":0}],"tests":[{"starting_at":1742483550545,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgphcnIgPSBucC5hcnJheShbMSwyLDAsMCw0LDBdKQppbmRleGVzID0gbnAubm9uemVybyhhcnIpCnByaW50KGluZGV4ZXMpCgoKCg==","ended_at":1742483550976,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvbnVtcHktdHV0b3JpYWwtZXhlcmNpc2VzCnBsdWdpbnM6IHRlc3Rkb3gtMy4xLjAKY29sbGVjdGVkIDQgaXRlbXMKCi5sZWFybi9leGVyY2lzZXMvMDExLWZpbmQtaW5kaWNlcy1vZi1ub24temVyby1lbGVtZW50cy90ZXN0LnB5IBtbMzJtLhtbMG0bWzMybS4bWzBtG1szMm0uG1swbRtbMzJtLhtbMG0bWzMybSAgICAgIFsxMDAlXRtbMG0KChtbMzJtPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IBtbMzJtG1sxbTQgcGFzc2VkG1swbRtbMzJtIGluIDAuMTFzG1swbRtbMzJtID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0bWzBtCg==","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1742482992689,"completed_at":1742483550976},{"slug":"012-identity-matrix","position":12,"files":[{"path":".learn/exercises/012-identity-matrix/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/012-identity-matrix/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/012-identity-matrix/solution.hide.py","name":"solution.hide.py","hidden":true},{"path":".learn/exercises/012-identity-matrix/test.py","name":"test.py","hidden":true}],"ai_interactions":[],"compilations":[{"stderr":"","stdout":"W1sxLiAwLiAwLl0KIFswLiAxLiAwLl0KIFswLiAwLiAxLl1dCg==","signal":null,"memoryUsage":524288,"cpuUsage":7518,"starting_at":1742483660979,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgojIGFyciA9IG5wLmFycmF5KFsxLDIsMCwwLDQsMF0pCiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKQojIHByaW50KGluZGV4ZXMpCgphcnIgPSBucC5leWUoMykKcHJpbnQoYXJyKQoKCgo=","ended_at":1742483661143,"exit_code":0},{"stderr":"","stdout":"W1sxLiAwLiAwLl0KIFswLiAxLiAwLl0KIFswLiAwLiAxLl1dCg==","signal":null,"memoryUsage":524288,"cpuUsage":8101,"starting_at":1742483663347,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgojIGFyciA9IG5wLmFycmF5KFsxLDIsMCwwLDQsMF0pCiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKQojIHByaW50KGluZGV4ZXMpCgphcnIgPSBucC5leWUoMykKcHJpbnQoYXJyKQoKCgo=","ended_at":1742483663510,"exit_code":0},{"stderr":"","stdout":"","signal":"SIGTERM","memoryUsage":524288,"cpuUsage":6434,"errorType":"run-time","starting_at":1742485840942,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgojIGFyciA9IG5wLmFycmF5KFsxLDIsMCwwLDQsMF0pCiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKQojIHByaW50KGluZGV4ZXMpCgphcnIgPSBucC5leWUoMykKcHJpbnQoYXJyKQoKCgo=","ended_at":1742485844028,"exit_code":null}],"tests":[{"starting_at":1742483665516,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgojIGFyciA9IG5wLmFycmF5KFsxLDIsMCwwLDQsMF0pCiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKQojIHByaW50KGluZGV4ZXMpCgphcnIgPSBucC5leWUoMykKcHJpbnQoYXJyKQoKCgo=","ended_at":1742483665884,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvbnVtcHktdHV0b3JpYWwtZXhlcmNpc2VzCnBsdWdpbnM6IHRlc3Rkb3gtMy4xLjAKY29sbGVjdGVkIDMgaXRlbXMKCi5sZWFybi9leGVyY2lzZXMvMDEyLWlkZW50aXR5LW1hdHJpeC90ZXN0LnB5IBtbMzJtLhtbMG0bWzMybS4bWzBtG1szMm0uG1swbRtbMzJtICAgICAgICAgICAgICAgICAgICAgICAgIFsxMDAlXRtbMG0KChtbMzJtPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IBtbMzJtG1sxbTMgcGFzc2VkG1swbRtbMzJtIGluIDAuMDhzG1swbRtbMzJtID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0bWzBtCg==","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1742483552333,"completed_at":1742483665884},{"slug":"013-random-values-array","position":13,"files":[{"path":".learn/exercises/013-random-values-array/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/013-random-values-array/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/013-random-values-array/solution.hide.py","name":"solution.hide.py","hidden":true},{"path":".learn/exercises/013-random-values-array/test.py","name":"test.py","hidden":true}],"ai_interactions":[],"compilations":[{"stderr":"","stdout":"WzAuMzIxMDIxODggMC45MzYzMzk3NyAwLjEwOTg5NTM0XQo=","signal":null,"memoryUsage":524288,"cpuUsage":5682,"starting_at":1742486365575,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgojIGFyciA9IG5wLmFycmF5KFsxLDIsMCwwLDQsMF0pCiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKQojIHByaW50KGluZGV4ZXMpCgojIGFyciA9IG5wLmV5ZSgzKQojIHByaW50KGFycikKCmFyciA9IG5wLnJhbmRvbS5yYW5kb20oMykKcHJpbnQoYXJyKQoK","ended_at":1742486365730,"exit_code":0}],"tests":[{"starting_at":1742485934570,"ended_at":1742485935202,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvbnVtcHktdHV0b3JpYWwtZXhlcmNpc2VzCnBsdWdpbnM6IHRlc3Rkb3gtMy4xLjAKY29sbGVjdGVkIDMgaXRlbXMKCi5sZWFybi9leGVyY2lzZXMvMDEzLXJhbmRvbS12YWx1ZXMtYXJyYXkvdGVzdC5weSAbWzMxbUYbWzBtG1szMm0uG1swbRtbMzFtRhtbMG0bWzMxbSAgICAgICAgICAgICAgICAgICAgIFsxMDAlXRtbMG0KCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IEZBSUxVUkVTID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ChtbMzFtG1sxbV9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXyB0ZXN0X3JhbmRvbSBfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fG1swbQoKICAgIEBweXRlc3QubWFyay5pdCgiWW91IGhhdmUgdG8gdXNlIHRoZSByYW5kb20oKSBtZXRob2QiKQogICAgZGVmIHRlc3RfcmFuZG9tKCk6CiAgICAgICAgcGF0aCA9IG9zLnBhdGguZGlybmFtZShvcy5wYXRoLmFic3BhdGgoJ2FwcC5weScpKSsnL2FwcC5weScKICAgICAgICB3aXRoIG9wZW4ocGF0aCwgJ3InKSBhcyBjb250ZW50X2ZpbGU6CiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50X2ZpbGUucmVhZCgpCiAgICAgICAgICAgIHJlZ2V4ID0gcmUuY29tcGlsZShyIlxzKnJhbmRvbVxzKlwoIikKPiAgICAgICAgICAgYXNzZXJ0IGJvb2wocmVnZXguc2VhcmNoKGNvbnRlbnQpKSA9PSBUcnVlChtbMW0bWzMxbUUgICAgICAgICAgIEFzc2VydGlvbkVycm9yOiBhc3NlcnQgRmFsc2UgPT0gVHJ1ZRtbMG0KG1sxbRtbMzFtRSAgICAgICAgICAgICsgIHdoZXJlIEZhbHNlID0gYm9vbChOb25lKRtbMG0KG1sxbRtbMzFtRSAgICAgICAgICAgICsgICAgd2hlcmUgTm9uZSA9IDxidWlsdC1pbiBtZXRob2Qgc2VhcmNoIG9mIHJlLlBhdHRlcm4gb2JqZWN0IGF0IDB4Nzc5Y2U3NGM2Y2UwPignaW1wb3J0IG51bXB5IGFzIG5wXG5cblxuIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKVxuIyBwcmludCh2ZWN0b3JfbnVsbClcblxuIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqLi4ubiMgYXJyID0gbnAuYXJyYXkoWzEsMiwwLDAsNCwwXSlcbiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKVxuIyBwcmludChpbmRleGVzKVxuXG5hcnIgPSBucC5leWUoMylcbnByaW50KGFycilcblxuXG5cbicpG1swbQobWzFtG1szMW1FICAgICAgICAgICAgKyAgICAgIHdoZXJlIDxidWlsdC1pbiBtZXRob2Qgc2VhcmNoIG9mIHJlLlBhdHRlcm4gb2JqZWN0IGF0IDB4Nzc5Y2U3NGM2Y2UwPiA9IHJlLmNvbXBpbGUoJ1xccypyYW5kb21cXHMqXFwoJykuc2VhcmNoG1swbQoKG1sxbRtbMzFtLmxlYXJuL2V4ZXJjaXNlcy8wMTMtcmFuZG9tLXZhbHVlcy1hcnJheS90ZXN0LnB5G1swbToxMTogQXNzZXJ0aW9uRXJyb3IKG1szMW0bWzFtX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18gdGVzdF9hcnJfdmFsdWUgX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18bWzBtCgpjYXBzeXMgPSA8X3B5dGVzdC5jYXB0dXJlLkNhcHR1cmVGaXh0dXJlIG9iamVjdCBhdCAweDc3OWNlNGE0M2UyMD4KCiAgICBAcHl0ZXN0Lm1hcmsuaXQoJ1RoZSBhcnJheSBzaG91bGQgaGF2ZSB0aHJlZSByYW5kb20gdmFsdWVzJykKICAgIGRlZiB0ZXN0X2Fycl92YWx1ZShjYXBzeXMpOgogICAgICAgIGZyb20gYXBwIGltcG9ydCBhcnIKICAgICAgICBzaXplID0gbnVtcHkuc2l6ZShhcnIpCj4gICAgICAgYXNzZXJ0IHNpemUgPT0gMwobWzFtG1szMW1FICAgICAgIGFzc2VydCA5ID09IDMbWzBtCgobWzFtG1szMW0ubGVhcm4vZXhlcmNpc2VzLzAxMy1yYW5kb20tdmFsdWVzLWFycmF5L3Rlc3QucHkbWzBtOjI0OiBBc3NlcnRpb25FcnJvcgobWzM2bRtbMW09PT09PT09PT09PT09PT09PT09PT09PT09PT0gc2hvcnQgdGVzdCBzdW1tYXJ5IGluZm8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PRtbMG0KG1szMW1GQUlMRUQbWzBtIC5sZWFybi9leGVyY2lzZXMvMDEzLXJhbmRvbS12YWx1ZXMtYXJyYXkvdGVzdC5weTo6G1sxbXRlc3RfcmFuZG9tG1swbSAtIEFzc2VydGlvbkVycm9yOiBhc3NlcnQgRmFsc2UgPT0gVHJ1ZQobWzMxbUZBSUxFRBtbMG0gLmxlYXJuL2V4ZXJjaXNlcy8wMTMtcmFuZG9tLXZhbHVlcy1hcnJheS90ZXN0LnB5OjobWzFtdGVzdF9hcnJfdmFsdWUbWzBtIC0gYXNzZXJ0IDkgPT0gMwobWzMxbT09PT09PT09PT09PT09PT09PT09PT09PT0gG1szMW0bWzFtMiBmYWlsZWQbWzBtLCAbWzMybTEgcGFzc2VkG1swbRtbMzFtIGluIDAuMTdzG1swbRtbMzFtID09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQo=","stderr":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvbnVtcHktdHV0b3JpYWwtZXhlcmNpc2VzCnBsdWdpbnM6IHRlc3Rkb3gtMy4xLjAKY29sbGVjdGVkIDMgaXRlbXMKCi5sZWFybi9leGVyY2lzZXMvMDEzLXJhbmRvbS12YWx1ZXMtYXJyYXkvdGVzdC5weSAbWzMxbUYbWzBtG1szMm0uG1swbRtbMzFtRhtbMG0bWzMxbSAgICAgICAgICAgICAgICAgICAgIFsxMDAlXRtbMG0KCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IEZBSUxVUkVTID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ChtbMzFtG1sxbV9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXyB0ZXN0X3JhbmRvbSBfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fG1swbQoKICAgIEBweXRlc3QubWFyay5pdCgiWW91IGhhdmUgdG8gdXNlIHRoZSByYW5kb20oKSBtZXRob2QiKQogICAgZGVmIHRlc3RfcmFuZG9tKCk6CiAgICAgICAgcGF0aCA9IG9zLnBhdGguZGlybmFtZShvcy5wYXRoLmFic3BhdGgoJ2FwcC5weScpKSsnL2FwcC5weScKICAgICAgICB3aXRoIG9wZW4ocGF0aCwgJ3InKSBhcyBjb250ZW50X2ZpbGU6CiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50X2ZpbGUucmVhZCgpCiAgICAgICAgICAgIHJlZ2V4ID0gcmUuY29tcGlsZShyIlxzKnJhbmRvbVxzKlwoIikKPiAgICAgICAgICAgYXNzZXJ0IGJvb2wocmVnZXguc2VhcmNoKGNvbnRlbnQpKSA9PSBUcnVlChtbMW0bWzMxbUUgICAgICAgICAgIEFzc2VydGlvbkVycm9yOiBhc3NlcnQgRmFsc2UgPT0gVHJ1ZRtbMG0KG1sxbRtbMzFtRSAgICAgICAgICAgICsgIHdoZXJlIEZhbHNlID0gYm9vbChOb25lKRtbMG0KG1sxbRtbMzFtRSAgICAgICAgICAgICsgICAgd2hlcmUgTm9uZSA9IDxidWlsdC1pbiBtZXRob2Qgc2VhcmNoIG9mIHJlLlBhdHRlcm4gb2JqZWN0IGF0IDB4Nzc5Y2U3NGM2Y2UwPignaW1wb3J0IG51bXB5IGFzIG5wXG5cblxuIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKVxuIyBwcmludCh2ZWN0b3JfbnVsbClcblxuIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqLi4ubiMgYXJyID0gbnAuYXJyYXkoWzEsMiwwLDAsNCwwXSlcbiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKVxuIyBwcmludChpbmRleGVzKVxuXG5hcnIgPSBucC5leWUoMylcbnByaW50KGFycilcblxuXG5cbicpG1swbQobWzFtG1szMW1FICAgICAgICAgICAgKyAgICAgIHdoZXJlIDxidWlsdC1pbiBtZXRob2Qgc2VhcmNoIG9mIHJlLlBhdHRlcm4gb2JqZWN0IGF0IDB4Nzc5Y2U3NGM2Y2UwPiA9IHJlLmNvbXBpbGUoJ1xccypyYW5kb21cXHMqXFwoJykuc2VhcmNoG1swbQoKG1sxbRtbMzFtLmxlYXJuL2V4ZXJjaXNlcy8wMTMtcmFuZG9tLXZhbHVlcy1hcnJheS90ZXN0LnB5G1swbToxMTogQXNzZXJ0aW9uRXJyb3IKG1szMW0bWzFtX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18gdGVzdF9hcnJfdmFsdWUgX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18bWzBtCgpjYXBzeXMgPSA8X3B5dGVzdC5jYXB0dXJlLkNhcHR1cmVGaXh0dXJlIG9iamVjdCBhdCAweDc3OWNlNGE0M2UyMD4KCiAgICBAcHl0ZXN0Lm1hcmsuaXQoJ1RoZSBhcnJheSBzaG91bGQgaGF2ZSB0aHJlZSByYW5kb20gdmFsdWVzJykKICAgIGRlZiB0ZXN0X2Fycl92YWx1ZShjYXBzeXMpOgogICAgICAgIGZyb20gYXBwIGltcG9ydCBhcnIKICAgICAgICBzaXplID0gbnVtcHkuc2l6ZShhcnIpCj4gICAgICAgYXNzZXJ0IHNpemUgPT0gMwobWzFtG1szMW1FICAgICAgIGFzc2VydCA5ID09IDMbWzBtCgobWzFtG1szMW0ubGVhcm4vZXhlcmNpc2VzLzAxMy1yYW5kb20tdmFsdWVzLWFycmF5L3Rlc3QucHkbWzBtOjI0OiBBc3NlcnRpb25FcnJvcgobWzM2bRtbMW09PT09PT09PT09PT09PT09PT09PT09PT09PT0gc2hvcnQgdGVzdCBzdW1tYXJ5IGluZm8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PRtbMG0KG1szMW1GQUlMRUQbWzBtIC5sZWFybi9leGVyY2lzZXMvMDEzLXJhbmRvbS12YWx1ZXMtYXJyYXkvdGVzdC5weTo6G1sxbXRlc3RfcmFuZG9tG1swbSAtIEFzc2VydGlvbkVycm9yOiBhc3NlcnQgRmFsc2UgPT0gVHJ1ZQobWzMxbUZBSUxFRBtbMG0gLmxlYXJuL2V4ZXJjaXNlcy8wMTMtcmFuZG9tLXZhbHVlcy1hcnJheS90ZXN0LnB5OjobWzFtdGVzdF9hcnJfdmFsdWUbWzBtIC0gYXNzZXJ0IDkgPT0gMwobWzMxbT09PT09PT09PT09PT09PT09PT09PT09PT0gG1szMW0bWzFtMiBmYWlsZWQbWzBtLCAbWzMybTEgcGFzc2VkG1swbRtbMzFtIGluIDAuMTdzG1swbRtbMzFtID09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQosCgogICAKICAgICAgICAgIBtbMzFtWW91ciBjb2RlIG11c3QgdG8gY29tcGx5IHdpdGggdGhlIGZvbGxvd2luZyB0ZXN0czobWzM5bSAKCiAgICAgG1szMW0bWzFteCAoZmFpbCkbWzIybRtbMzltIDAuIBtbMzdtWW91IGhhdmUgdG8gdXNlIHRoZSByYW5kb20oKSBtZXRob2QbWzM5bQogICAgIBtbMzFtG1sxbXggKGZhaWwpG1syMm0bWzM5bSAxLiAbWzM3bVRoZSBhcnJheSBzaG91bGQgaGF2ZSB0aHJlZSByYW5kb20gdmFsdWVzG1szOW0gCgo=","exit_code":1}],"is_testeable":true,"opened_at":1742483667279},{"slug":"014-minimum-and-maximum","position":14,"files":[{"path":".learn/exercises/014-minimum-and-maximum/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/014-minimum-and-maximum/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/014-minimum-and-maximum/solution.hide.py","name":"solution.hide.py","hidden":true},{"path":".learn/exercises/014-minimum-and-maximum/test.py","name":"test.py","hidden":true}],"ai_interactions":[],"compilations":[{"stderr":"","stdout":"MC45MTYzNjY2OTk5MjUxMTAzCg==","signal":null,"memoryUsage":524288,"cpuUsage":6762,"starting_at":1742486483733,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgojIGFyciA9IG5wLmFycmF5KFsxLDIsMCwwLDQsMF0pCiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKQojIHByaW50KGluZGV4ZXMpCgojIGFyciA9IG5wLmV5ZSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgzKQojIHByaW50KGFycikKCmFyciA9IG5wLnJhbmRvbS5yYW5kb20oMTApCnByaW50KG5wLm1heChhcnIpKQoK","ended_at":1742486483919,"exit_code":0},{"stderr":"","stdout":"MC44NjQ5NDc2OTU5NzI5Mjk0Cg==","signal":null,"memoryUsage":524288,"cpuUsage":6559,"starting_at":1742486485951,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgojIGFyciA9IG5wLmFycmF5KFsxLDIsMCwwLDQsMF0pCiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKQojIHByaW50KGluZGV4ZXMpCgojIGFyciA9IG5wLmV5ZSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgzKQojIHByaW50KGFycikKCmFyciA9IG5wLnJhbmRvbS5yYW5kb20oMTApCnByaW50KG5wLm1heChhcnIpKQoK","ended_at":1742486486104,"exit_code":0}],"tests":[{"starting_at":1742486523602,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgojIGFyciA9IG5wLmFycmF5KFsxLDIsMCwwLDQsMF0pCiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKQojIHByaW50KGluZGV4ZXMpCgojIGFyciA9IG5wLmV5ZSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgzKQojIHByaW50KGFycikKCmFyciA9IG5wLnJhbmRvbS5yYW5kb20oMTApCnByaW50KG5wLm1heChhcnIpKQoK","ended_at":1742486523958,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvbnVtcHktdHV0b3JpYWwtZXhlcmNpc2VzCnBsdWdpbnM6IHRlc3Rkb3gtMy4xLjAKY29sbGVjdGVkIDMgaXRlbXMKCi5sZWFybi9leGVyY2lzZXMvMDE0LW1pbmltdW0tYW5kLW1heGltdW0vdGVzdC5weSAbWzMybS4bWzBtG1szMm0uG1swbRtbMzJtLhtbMG0bWzMybSAgICAgICAgICAgICAgICAgICAgIFsxMDAlXRtbMG0KChtbMzJtPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IBtbMzJtG1sxbTMgcGFzc2VkG1swbRtbMzJtIGluIDAuMDhzG1swbRtbMzJtID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0bWzBtCg==","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1742486392368,"completed_at":1742486523958},{"slug":"015-mean-value","position":15,"files":[{"path":".learn/exercises/015-mean-value/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/015-mean-value/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/015-mean-value/solution.hide.py","name":"solution.hide.py","hidden":true},{"path":".learn/exercises/015-mean-value/test.py","name":"test.py","hidden":true}],"ai_interactions":[],"compilations":[{"stderr":"","stdout":"MC40NzY3NzgzNjgyMjQ4OTY5Cg==","signal":null,"memoryUsage":524288,"cpuUsage":7789,"starting_at":1742486612313,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgojIGFyciA9IG5wLmFycmF5KFsxLDIsMCwwLDQsMF0pCiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKQojIHByaW50KGluZGV4ZXMpCgojIGFyciA9IG5wLmV5ZSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tYXgoYXJyKSkKCmFyciA9IG5wLnJhbmRvbS5yYW5kb20oMTApCnByaW50KG5wLm1lYW4oYXJyKSkK","ended_at":1742486612495,"exit_code":0}],"tests":[{"starting_at":1742486661081,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgojIGFyciA9IG5wLmFycmF5KFsxLDIsMCwwLDQsMF0pCiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKQojIHByaW50KGluZGV4ZXMpCgojIGFyciA9IG5wLmV5ZSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tYXgoYXJyKSkKCmFyciA9IG5wLnJhbmRvbS5yYW5kb20oMTApCnByaW50KG5wLm1lYW4oYXJyKSkK","ended_at":1742486661454,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvbnVtcHktdHV0b3JpYWwtZXhlcmNpc2VzCnBsdWdpbnM6IHRlc3Rkb3gtMy4xLjAKY29sbGVjdGVkIDQgaXRlbXMKCi5sZWFybi9leGVyY2lzZXMvMDE1LW1lYW4tdmFsdWUvdGVzdC5weSAbWzMybS4bWzBtG1szMm0uG1swbRtbMzJtLhtbMG0bWzMybS4bWzBtG1szMm0gICAgICAgICAgICAgICAgICAgICAgICAgICAgIFsxMDAlXRtbMG0KChtbMzJtPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IBtbMzJtG1sxbTQgcGFzc2VkG1swbRtbMzJtIGluIDAuMDhzG1swbRtbMzJtID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0bWzBtCg==","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1742486543405,"completed_at":1742486661454},{"slug":"016-array-border","position":16,"files":[{"path":".learn/exercises/016-array-border/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/016-array-border/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/016-array-border/solution.hide.py","name":"solution.hide.py","hidden":true},{"path":".learn/exercises/016-array-border/test.py","name":"test.py","hidden":true}],"ai_interactions":[{"starting_at":1742486958112,"student_message":"como  creo una matriz con unos","context":"---\n      # File name: README.es.md. Content: \n      `<!-- hide -->\n# Welcome to Numpy exercise tutorial\n\nPor <a href=\"https://twitter.com/alesanchezr\">@alesanchezr</a> y <a href=\"https://github.com/4geeksacademy/numpy-tutorial-exercises/graphs/contributors\">otros contibuyentes</a> en <a href=\"http://4geeksacademy.com/\">4Geeks Academy.</a><a href=\"https://www.4geeksacademy.com\"><img height=\"280\" align=\"right\" src=\"https://github.com/4geeksacademy/numpy-tutorial-exercises/blob/master/.learn/assets/numpy-badge.png?raw=true\"></a>\n<!-- endhide -->\n\nNumPy (y Pandas) son las librerías #1 para Machine Learning, no hay manera que puedas realizar cualquier cosa sin ellas.\n\nEste tutorial interactivo te va a ayudar a familiarizarte con ello, a dominar las funcionalidades más usadas y a ayudarte a limpiar tu primer set de datos. \n\n- Documentación de NumPy.\n- Vectores.\n- Matrices.\n- Valores aleatorios, Media.\n\n> Nota: Todo el tutorial es completamente 👆 interactivo, ✅ con corrección automática y 📹 videos tutoriales.\n\nEstos ejercicios fueron construidos en colaboración. ¡Te necesitamos! Si consigues algún error o falta de ortografía, por favor ayúdanos y repórtalos.\n\n<!-- hide -->\n## Instalación en un clic (recomendado)\n\nPuedes empezar estos ejercicios en pocos segundos haciendo clic en: [Abrir en Codespaces](https://codespaces.new/?repo=4GeeksAcademy/numpy-tutorial-exercises) (recomendado) o [Abrir en Gitpod](https://gitpod.io#https://github.com/4GeeksAcademy/numpy-tutorial-exercises.git).\n\n> Una vez ya tengas abierto VSCode, los ejercicios de LearnPack deberían empezar automáticamente; si esto no sucede puedes intentar empezar los ejercicios escribiendo este comando en tu terminal: `$ learnpack start`\n\n\n## Instalación local\n\n1. Clona o descarga este repositorio.\n\n2. Asegúrate de tener [LearnPack](https://learnpack.co) instalado, una versión de node.js 14 o superior y una versión de Python 3 o superior. Este es el comando para instalar LearnPack:\n\n```bash\n$ npm i @learnpack/learnpack -g && learnpack plugins:install @learnpack/python\n```\n\n3. Empieza el tutorial/ejercicios corriendo estos comandos en el mismo nivel donde se encuentra tu archivo learn.json:\n\n```bash\n$ pip3 install pytest==6.2.5 mock pytest-testdox toml numpy==1.24.2 pandas\n$ learnpack start\n```\n\n> Nota: Estos ejercicios tienen calificación automática. Los tests son muy rígidos y estrictos, mi recomendación es que no prestes demasiada atención a los tests y los uses solo como una sugerencia o podrías frustrarte.\n\n<!-- endhide -->\n\n## Colaboradores\n \nGracias a estas personas maravillosas ([emoji key](https://github.com/kentcdodds/all-contributors#emoji-key)):\n\n1. [Alejandro Sanchez (alesanchezr)](https://github.com/alesanchezr), contribución: (programador) 💻, (idea) 🤔, (build-tests) ⚠️, (pull-request-review) 👀, (build-tutorial) ✅, (documentación) 📖\n\n2. [Paolo (plucodev)](https://github.com/plucodev), contribución: (bug reports) 🐛, (programador) 💻, (traducción) 🌎\n\n3. [Marco Gómez (marcogonzalo)](https://github.com/marcogonzalo), contribution: (bug reports) 🐛, (traducción) 🌎\n\nEste proyecto sigue la especificación [all-contributors](https://github.com/kentcdodds/all-contributors).\n\n¡Todas las contribuciones son bienvenidas!\n`\n      ---\n      \n---\n      # File name: README.md. Content: \n      `<!-- hide -->\n# Welcome to Numpy exercise tutorial\n\nBy <a href=\"https://twitter.com/alesanchezr\">@alesanchezr</a> and <a href=\"https://github.com/4geeksacademy/numpy-tutorial-exercises/graphs/contributors\">other contributors</a> at <a href=\"http://4geeksacademy.com/\">4Geeks Academy.</a><a href=\"https://www.4geeksacademy.com\"><img height=\"280\" align=\"right\" src=\"https://github.com/4geeksacademy/numpy-tutorial-exercises/blob/master/.learn/assets/numpy-badge.png?raw=true\"></a>\n<!-- endhide -->\n\nNumPy (and Pandas) are the #1 libraries for Machine Learning, there is no way you can do anything without them. \n\nThis interactive tutorial will help you become familiar with it, master the most used functionalities, and help you clean up your first datasets.\n\n- NumPy documentation.\n- Vectors.\n- Matrixes.\n- Random, Mean Values.\n\n> Note: The entire tutorial is 👆 interactive, ✅ auto-graded and with 📹 video tutorials.\n\nThese exercises were built in collaboration; we need you! If you find any bugs or misspellings, please contribute and report them.\n\n<!-- hide -->\n\n## One click installation (recommended):\n\nYou can open these exercises in just a few seconds by clicking: [Open in Codespaces](https://codespaces.new/?repo=4GeeksAcademy/numpy-tutorial-exercises) (recommended) or [Open in Gitpod](https://gitpod.io#https://github.com/4GeeksAcademy/numpy-tutorial-exercises.git).\n\n> Once you have VSCode open the LearnPack exercises should start automatically. If exercises don't run automatically you can try typing on your terminal: `$ learnpack start`\n\n\n\n## Local Installation\n\n1. Clone or download this repository.\n\n2. Make sure you have [LearnPack](https://learnpack.co) installed, node.js version 14+, and Python version 3+. This is the command to install LearnPack:\n\n```bash\n$ npm i @learnpack/learnpack -g && learnpack plugins:install @learnpack/python\n```\n\n3. Start the tutorial/exercises by running the following commands at the same level where your learn.json file is:\n\n```bash\n$ pip3 install pytest==6.2.5 mock pytest-testdox toml numpy==1.24.2 pandas\n$ learnpack start\n```\n\n> Note: The exercises have automatic grading, but it's very rigid and strict, my recommendation is to not take the tests too serious and use them only as a suggestion, or you may get frustrated.\n\n<!-- endhide -->\n\n\n## Contributors\n\nThanks to these wonderful people ([emoji key](https://github.com/kentcdodds/all-contributors#emoji-key)):\n\n1. [Alejandro Sanchez (alesanchezr)](https://github.com/alesanchezr), contribution: (coder) 💻, (idea) 🤔, (build-tests) ⚠️, (pull-request-review) 👀, (build-tutorial) ✅, (documentation) 📖\n\n2. [Paolo (plucodev)](https://github.com/plucodev), contribution: (bug reports) 🐛, (coder) 💻, (translation) 🌎\n\n3. [Ricardo Rodriguez (RickRodriguez8080)](https://github.com/RickRodriguez8080) contribution: (build-tutorial) ✅, (documentation) 📖\n\nThis project follows the [all-contributors](https://github.com/kentcdodds/all-contributors) specifications. \n\nContributions of any kind are welcome!\n`\n      ---\n      \n---\n      # File name: solution.hide.py. Content: \n      `{\"message\":\"File not found: + undefined\",\"status\":500,\"type\":null}`\n      ---\n      \n---\n      # File name: test.py. Content: \n      `import pytest\nimport os\nimport numpy\n\n@pytest.mark.it(\"You have to use the ones() method\")\ndef test_random():\n    f = open('app.py')\n    content = f.read()\n    assert \"ones(\" in content\n\n@pytest.mark.it('The output should be the expected matrix')\ndef test_print(capsys):\n    import app\n    captured = capsys.readouterr()\n    assert captured.out == '[[1. 1. 1. 1. 1.]\\n [1. 0. 0. 0. 1.]\\n [1. 0. 0. 0. 1.]\\n [1. 0. 0. 0. 1.]\\n [1. 1. 1. 1. 1.]]\\n'\n`\n      ---\n      \n      ---This is the current exercise instructions:\n      # `016` Array Border\n\n## 📝 Instrucciones:\n\n1. Crea una matriz con todos los valores iguales a uno (1).\n\n2. Agrega cero (0) a todos los valores que se encuentran en el centro de la matriz.\n\n3. Imprime la matriz en la consola.\n\n## 💻 Resultado Esperado\n\n```bash\n[[1. 1. 1. 1. 1.]\n [1. 0. 0. 0. 1.]\n [1. 0. 0. 0. 1.]\n [1. 0. 0. 0. 1.]\n [1. 1. 1. 1. 1.]]\n```\n\n## 💡 Pistas:\n\n+ El método `np.ones()` Crea una matriz con todos los valores igual a uno (1). Puedes aprender más sobre este método en este link: https://numpy.org/doc/stable/reference/generated/numpy.ones.html.\n\n+ Si quieres modificar todos los valores del centro (Es decir, todos menos los bordes), puedes hacerlo de esta manera: `matrix[1:-1,1:-1] = \"new_value\"`\n\n      ---\n      \n      <MANDATORY FOR AI: The user's set up the application in \"es\" language, give your feedback in \"es\" language, please.>\n\n      \nSome tests didn't passed, these are the tests logs: ============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-7.3.1, pluggy-1.0.0\nrootdir: /workspaces/numpy-tutorial-exercises\nplugins: testdox-3.1.0\ncollected 2 items\n\n.learn/exercises/016-array-border/test.py FF                             [100%]\n\n=================================== FAILURES ===================================\n_________________________________ test_random __________________________________\n\n    @pytest.mark.it(\"You have to use the ones() method\")\n    def test_random():\n        f = open('app.py')\n        content = f.read()\n>       assert \"ones(\" in content\nE       AssertionError: assert 'ones(' in 'import numpy as np\\n\\n\\n# vector_null = np.zeros(10)\\n# print(vector_null)\\n\\n# amount_of_memory = vector_null.size *...n\\n# arr = np.random.random(10)\\n# print(np.max(arr))\\n\\n# arr = np.random.random(10)\\n# print(np.mean(arr))\\n\\n\\n\\n\\n'\n\n.learn/exercises/016-array-border/test.py:9: AssertionError\n__________________________________ test_print __________________________________\n\ncapsys = <_pytest.capture.CaptureFixture object at 0x7ee15d3f7730>\n\n    @pytest.mark.it('The output should be the expected matrix')\n    def test_print(capsys):\n        import app\n        captured = capsys.readouterr()\n>       assert captured.out == '[[1. 1. 1. 1. 1.]\\n [1. 0. 0. 0. 1.]\\n [1. 0. 0. 0. 1.]\\n [1. 0. 0. 0. 1.]\\n [1. 1. 1. 1. 1.]]\\n'\nE       AssertionError: assert '' == '[[1. 1. 1. 1... 1. 1. 1.]]\\n'\nE         - [[1. 1. 1. 1. 1.]\nE         -  [1. 0. 0. 0. 1.]\nE         -  [1. 0. 0. 0. 1.]\nE         -  [1. 0. 0. 0. 1.]\nE         -  [1. 1. 1. 1. 1.]]\n\n.learn/exercises/016-array-border/test.py:15: AssertionError\n=========================== short test summary info ============================\nFAILED .learn/exercises/016-array-border/test.py::test_random - AssertionError: assert 'ones(' in 'import numpy as np\\n\\n\\n# vector_null = ...\nFAILED .learn/exercises/016-array-border/test.py::test_print - AssertionError: assert '' == '[[1. 1. 1. 1... 1. 1. 1.]]\\n'\n============================== 2 failed in 0.11s ===============================\n,\n\n   \n          Your code must to comply with the following tests: \n\n     x (fail) 0. You have to use the ones() method\n     x (fail) 1. The output should be the expected matrix \n\n","ending_at":1742486962838,"ai_response":"Para crear una matriz con todos los valores iguales a uno en NumPy, puedes utilizar el método `np.ones()`. Este método te permite especificar la forma de la matriz que deseas crear. \n\nAquí tienes un ejemplo básico de cómo usarlo:\n\n```python\nimport numpy as np\n\n# Crea una matriz de 5x5 con todos los valores iguales a 1\nmatriz = np.ones((5, 5))\nprint(matriz)\n```\n\nEn este ejemplo, `np.ones((5, 5))` crea una matriz de 5 filas y 5 columnas, donde todos los elementos son 1. \n\nIntenta implementar esto en tu código y luego podemos continuar con el siguiente paso, que es modificar los valores en el centro de la matriz."},{"starting_at":1742487288305,"student_message":"matrix[1:-1,1:-1] = \"new_value\" como aplico esto a mi codigo","context":"---\n      # File name: README.es.md. Content: \n      `<!-- hide -->\n# Welcome to Numpy exercise tutorial\n\nPor <a href=\"https://twitter.com/alesanchezr\">@alesanchezr</a> y <a href=\"https://github.com/4geeksacademy/numpy-tutorial-exercises/graphs/contributors\">otros contibuyentes</a> en <a href=\"http://4geeksacademy.com/\">4Geeks Academy.</a><a href=\"https://www.4geeksacademy.com\"><img height=\"280\" align=\"right\" src=\"https://github.com/4geeksacademy/numpy-tutorial-exercises/blob/master/.learn/assets/numpy-badge.png?raw=true\"></a>\n<!-- endhide -->\n\nNumPy (y Pandas) son las librerías #1 para Machine Learning, no hay manera que puedas realizar cualquier cosa sin ellas.\n\nEste tutorial interactivo te va a ayudar a familiarizarte con ello, a dominar las funcionalidades más usadas y a ayudarte a limpiar tu primer set de datos. \n\n- Documentación de NumPy.\n- Vectores.\n- Matrices.\n- Valores aleatorios, Media.\n\n> Nota: Todo el tutorial es completamente 👆 interactivo, ✅ con corrección automática y 📹 videos tutoriales.\n\nEstos ejercicios fueron construidos en colaboración. ¡Te necesitamos! Si consigues algún error o falta de ortografía, por favor ayúdanos y repórtalos.\n\n<!-- hide -->\n## Instalación en un clic (recomendado)\n\nPuedes empezar estos ejercicios en pocos segundos haciendo clic en: [Abrir en Codespaces](https://codespaces.new/?repo=4GeeksAcademy/numpy-tutorial-exercises) (recomendado) o [Abrir en Gitpod](https://gitpod.io#https://github.com/4GeeksAcademy/numpy-tutorial-exercises.git).\n\n> Una vez ya tengas abierto VSCode, los ejercicios de LearnPack deberían empezar automáticamente; si esto no sucede puedes intentar empezar los ejercicios escribiendo este comando en tu terminal: `$ learnpack start`\n\n\n## Instalación local\n\n1. Clona o descarga este repositorio.\n\n2. Asegúrate de tener [LearnPack](https://learnpack.co) instalado, una versión de node.js 14 o superior y una versión de Python 3 o superior. Este es el comando para instalar LearnPack:\n\n```bash\n$ npm i @learnpack/learnpack -g && learnpack plugins:install @learnpack/python\n```\n\n3. Empieza el tutorial/ejercicios corriendo estos comandos en el mismo nivel donde se encuentra tu archivo learn.json:\n\n```bash\n$ pip3 install pytest==6.2.5 mock pytest-testdox toml numpy==1.24.2 pandas\n$ learnpack start\n```\n\n> Nota: Estos ejercicios tienen calificación automática. Los tests son muy rígidos y estrictos, mi recomendación es que no prestes demasiada atención a los tests y los uses solo como una sugerencia o podrías frustrarte.\n\n<!-- endhide -->\n\n## Colaboradores\n \nGracias a estas personas maravillosas ([emoji key](https://github.com/kentcdodds/all-contributors#emoji-key)):\n\n1. [Alejandro Sanchez (alesanchezr)](https://github.com/alesanchezr), contribución: (programador) 💻, (idea) 🤔, (build-tests) ⚠️, (pull-request-review) 👀, (build-tutorial) ✅, (documentación) 📖\n\n2. [Paolo (plucodev)](https://github.com/plucodev), contribución: (bug reports) 🐛, (programador) 💻, (traducción) 🌎\n\n3. [Marco Gómez (marcogonzalo)](https://github.com/marcogonzalo), contribution: (bug reports) 🐛, (traducción) 🌎\n\nEste proyecto sigue la especificación [all-contributors](https://github.com/kentcdodds/all-contributors).\n\n¡Todas las contribuciones son bienvenidas!\n`\n      ---\n      \n---\n      # File name: README.md. Content: \n      `<!-- hide -->\n# Welcome to Numpy exercise tutorial\n\nBy <a href=\"https://twitter.com/alesanchezr\">@alesanchezr</a> and <a href=\"https://github.com/4geeksacademy/numpy-tutorial-exercises/graphs/contributors\">other contributors</a> at <a href=\"http://4geeksacademy.com/\">4Geeks Academy.</a><a href=\"https://www.4geeksacademy.com\"><img height=\"280\" align=\"right\" src=\"https://github.com/4geeksacademy/numpy-tutorial-exercises/blob/master/.learn/assets/numpy-badge.png?raw=true\"></a>\n<!-- endhide -->\n\nNumPy (and Pandas) are the #1 libraries for Machine Learning, there is no way you can do anything without them. \n\nThis interactive tutorial will help you become familiar with it, master the most used functionalities, and help you clean up your first datasets.\n\n- NumPy documentation.\n- Vectors.\n- Matrixes.\n- Random, Mean Values.\n\n> Note: The entire tutorial is 👆 interactive, ✅ auto-graded and with 📹 video tutorials.\n\nThese exercises were built in collaboration; we need you! If you find any bugs or misspellings, please contribute and report them.\n\n<!-- hide -->\n\n## One click installation (recommended):\n\nYou can open these exercises in just a few seconds by clicking: [Open in Codespaces](https://codespaces.new/?repo=4GeeksAcademy/numpy-tutorial-exercises) (recommended) or [Open in Gitpod](https://gitpod.io#https://github.com/4GeeksAcademy/numpy-tutorial-exercises.git).\n\n> Once you have VSCode open the LearnPack exercises should start automatically. If exercises don't run automatically you can try typing on your terminal: `$ learnpack start`\n\n\n\n## Local Installation\n\n1. Clone or download this repository.\n\n2. Make sure you have [LearnPack](https://learnpack.co) installed, node.js version 14+, and Python version 3+. This is the command to install LearnPack:\n\n```bash\n$ npm i @learnpack/learnpack -g && learnpack plugins:install @learnpack/python\n```\n\n3. Start the tutorial/exercises by running the following commands at the same level where your learn.json file is:\n\n```bash\n$ pip3 install pytest==6.2.5 mock pytest-testdox toml numpy==1.24.2 pandas\n$ learnpack start\n```\n\n> Note: The exercises have automatic grading, but it's very rigid and strict, my recommendation is to not take the tests too serious and use them only as a suggestion, or you may get frustrated.\n\n<!-- endhide -->\n\n\n## Contributors\n\nThanks to these wonderful people ([emoji key](https://github.com/kentcdodds/all-contributors#emoji-key)):\n\n1. [Alejandro Sanchez (alesanchezr)](https://github.com/alesanchezr), contribution: (coder) 💻, (idea) 🤔, (build-tests) ⚠️, (pull-request-review) 👀, (build-tutorial) ✅, (documentation) 📖\n\n2. [Paolo (plucodev)](https://github.com/plucodev), contribution: (bug reports) 🐛, (coder) 💻, (translation) 🌎\n\n3. [Ricardo Rodriguez (RickRodriguez8080)](https://github.com/RickRodriguez8080) contribution: (build-tutorial) ✅, (documentation) 📖\n\nThis project follows the [all-contributors](https://github.com/kentcdodds/all-contributors) specifications. \n\nContributions of any kind are welcome!\n`\n      ---\n      \n---\n      # File name: solution.hide.py. Content: \n      `{\"message\":\"File not found: + undefined\",\"status\":500,\"type\":null}`\n      ---\n      \n---\n      # File name: test.py. Content: \n      `import pytest\nimport os\nimport numpy\n\n@pytest.mark.it(\"You have to use the ones() method\")\ndef test_random():\n    f = open('app.py')\n    content = f.read()\n    assert \"ones(\" in content\n\n@pytest.mark.it('The output should be the expected matrix')\ndef test_print(capsys):\n    import app\n    captured = capsys.readouterr()\n    assert captured.out == '[[1. 1. 1. 1. 1.]\\n [1. 0. 0. 0. 1.]\\n [1. 0. 0. 0. 1.]\\n [1. 0. 0. 0. 1.]\\n [1. 1. 1. 1. 1.]]\\n'\n`\n      ---\n      \n      ---This is the current exercise instructions:\n      # `016` Array Border\n\n## 📝 Instrucciones:\n\n1. Crea una matriz con todos los valores iguales a uno (1).\n\n2. Agrega cero (0) a todos los valores que se encuentran en el centro de la matriz.\n\n3. Imprime la matriz en la consola.\n\n## 💻 Resultado Esperado\n\n```bash\n[[1. 1. 1. 1. 1.]\n [1. 0. 0. 0. 1.]\n [1. 0. 0. 0. 1.]\n [1. 0. 0. 0. 1.]\n [1. 1. 1. 1. 1.]]\n```\n\n## 💡 Pistas:\n\n+ El método `np.ones()` Crea una matriz con todos los valores igual a uno (1). Puedes aprender más sobre este método en este link: https://numpy.org/doc/stable/reference/generated/numpy.ones.html.\n\n+ Si quieres modificar todos los valores del centro (Es decir, todos menos los bordes), puedes hacerlo de esta manera: `matrix[1:-1,1:-1] = \"new_value\"`\n\n      ---\n      \n      <MANDATORY FOR AI: The user's set up the application in \"es\" language, give your feedback in \"es\" language, please.>\n\n      ","ending_at":1742487296376,"ai_response":"Para aplicar `matrix[1:-1, 1:-1] = \"new_value\"` en tu código, primero necesitas asegurarte de que ya tienes creada la matriz con unos utilizando `np.ones()`. Luego, puedes usar esa línea para modificar los valores en el centro de la matriz.\n\nAquí tienes un ejemplo de cómo hacerlo:\n\n```python\nimport numpy as np\n\n# 1. Crea una matriz de 5x5 con todos los valores iguales a 1\nmatriz = np.ones((5, 5))\n\n# 2. Modifica los valores del centro de la matriz a 0\nmatriz[1:-1, 1:-1] = 0  # Cambia \"new_value\" por 0\n\n# 3. Imprime la matriz en la consola\nprint(matriz)\n```\n\nEn este código:\n\n1. Creas una matriz de 5x5 con todos los valores iguales a 1.\n2. La línea `matriz[1:-1, 1:-1] = 0` cambia todos los valores en el centro de la matriz (es decir, todos menos los bordes) a 0.\n3. Finalmente, imprimes la matriz para ver el resultado.\n\nIntenta implementar esto en tu código y verifica si obtienes el resultado esperado. ¿Hay algo más en lo que necesites ayuda?"},{"starting_at":1742487442950,"student_message":"explicame por qué el [1:-1, 1:-1]","context":"---\n      # File name: README.es.md. Content: \n      `<!-- hide -->\n# Welcome to Numpy exercise tutorial\n\nPor <a href=\"https://twitter.com/alesanchezr\">@alesanchezr</a> y <a href=\"https://github.com/4geeksacademy/numpy-tutorial-exercises/graphs/contributors\">otros contibuyentes</a> en <a href=\"http://4geeksacademy.com/\">4Geeks Academy.</a><a href=\"https://www.4geeksacademy.com\"><img height=\"280\" align=\"right\" src=\"https://github.com/4geeksacademy/numpy-tutorial-exercises/blob/master/.learn/assets/numpy-badge.png?raw=true\"></a>\n<!-- endhide -->\n\nNumPy (y Pandas) son las librerías #1 para Machine Learning, no hay manera que puedas realizar cualquier cosa sin ellas.\n\nEste tutorial interactivo te va a ayudar a familiarizarte con ello, a dominar las funcionalidades más usadas y a ayudarte a limpiar tu primer set de datos. \n\n- Documentación de NumPy.\n- Vectores.\n- Matrices.\n- Valores aleatorios, Media.\n\n> Nota: Todo el tutorial es completamente 👆 interactivo, ✅ con corrección automática y 📹 videos tutoriales.\n\nEstos ejercicios fueron construidos en colaboración. ¡Te necesitamos! Si consigues algún error o falta de ortografía, por favor ayúdanos y repórtalos.\n\n<!-- hide -->\n## Instalación en un clic (recomendado)\n\nPuedes empezar estos ejercicios en pocos segundos haciendo clic en: [Abrir en Codespaces](https://codespaces.new/?repo=4GeeksAcademy/numpy-tutorial-exercises) (recomendado) o [Abrir en Gitpod](https://gitpod.io#https://github.com/4GeeksAcademy/numpy-tutorial-exercises.git).\n\n> Una vez ya tengas abierto VSCode, los ejercicios de LearnPack deberían empezar automáticamente; si esto no sucede puedes intentar empezar los ejercicios escribiendo este comando en tu terminal: `$ learnpack start`\n\n\n## Instalación local\n\n1. Clona o descarga este repositorio.\n\n2. Asegúrate de tener [LearnPack](https://learnpack.co) instalado, una versión de node.js 14 o superior y una versión de Python 3 o superior. Este es el comando para instalar LearnPack:\n\n```bash\n$ npm i @learnpack/learnpack -g && learnpack plugins:install @learnpack/python\n```\n\n3. Empieza el tutorial/ejercicios corriendo estos comandos en el mismo nivel donde se encuentra tu archivo learn.json:\n\n```bash\n$ pip3 install pytest==6.2.5 mock pytest-testdox toml numpy==1.24.2 pandas\n$ learnpack start\n```\n\n> Nota: Estos ejercicios tienen calificación automática. Los tests son muy rígidos y estrictos, mi recomendación es que no prestes demasiada atención a los tests y los uses solo como una sugerencia o podrías frustrarte.\n\n<!-- endhide -->\n\n## Colaboradores\n \nGracias a estas personas maravillosas ([emoji key](https://github.com/kentcdodds/all-contributors#emoji-key)):\n\n1. [Alejandro Sanchez (alesanchezr)](https://github.com/alesanchezr), contribución: (programador) 💻, (idea) 🤔, (build-tests) ⚠️, (pull-request-review) 👀, (build-tutorial) ✅, (documentación) 📖\n\n2. [Paolo (plucodev)](https://github.com/plucodev), contribución: (bug reports) 🐛, (programador) 💻, (traducción) 🌎\n\n3. [Marco Gómez (marcogonzalo)](https://github.com/marcogonzalo), contribution: (bug reports) 🐛, (traducción) 🌎\n\nEste proyecto sigue la especificación [all-contributors](https://github.com/kentcdodds/all-contributors).\n\n¡Todas las contribuciones son bienvenidas!\n`\n      ---\n      \n---\n      # File name: README.md. Content: \n      `<!-- hide -->\n# Welcome to Numpy exercise tutorial\n\nBy <a href=\"https://twitter.com/alesanchezr\">@alesanchezr</a> and <a href=\"https://github.com/4geeksacademy/numpy-tutorial-exercises/graphs/contributors\">other contributors</a> at <a href=\"http://4geeksacademy.com/\">4Geeks Academy.</a><a href=\"https://www.4geeksacademy.com\"><img height=\"280\" align=\"right\" src=\"https://github.com/4geeksacademy/numpy-tutorial-exercises/blob/master/.learn/assets/numpy-badge.png?raw=true\"></a>\n<!-- endhide -->\n\nNumPy (and Pandas) are the #1 libraries for Machine Learning, there is no way you can do anything without them. \n\nThis interactive tutorial will help you become familiar with it, master the most used functionalities, and help you clean up your first datasets.\n\n- NumPy documentation.\n- Vectors.\n- Matrixes.\n- Random, Mean Values.\n\n> Note: The entire tutorial is 👆 interactive, ✅ auto-graded and with 📹 video tutorials.\n\nThese exercises were built in collaboration; we need you! If you find any bugs or misspellings, please contribute and report them.\n\n<!-- hide -->\n\n## One click installation (recommended):\n\nYou can open these exercises in just a few seconds by clicking: [Open in Codespaces](https://codespaces.new/?repo=4GeeksAcademy/numpy-tutorial-exercises) (recommended) or [Open in Gitpod](https://gitpod.io#https://github.com/4GeeksAcademy/numpy-tutorial-exercises.git).\n\n> Once you have VSCode open the LearnPack exercises should start automatically. If exercises don't run automatically you can try typing on your terminal: `$ learnpack start`\n\n\n\n## Local Installation\n\n1. Clone or download this repository.\n\n2. Make sure you have [LearnPack](https://learnpack.co) installed, node.js version 14+, and Python version 3+. This is the command to install LearnPack:\n\n```bash\n$ npm i @learnpack/learnpack -g && learnpack plugins:install @learnpack/python\n```\n\n3. Start the tutorial/exercises by running the following commands at the same level where your learn.json file is:\n\n```bash\n$ pip3 install pytest==6.2.5 mock pytest-testdox toml numpy==1.24.2 pandas\n$ learnpack start\n```\n\n> Note: The exercises have automatic grading, but it's very rigid and strict, my recommendation is to not take the tests too serious and use them only as a suggestion, or you may get frustrated.\n\n<!-- endhide -->\n\n\n## Contributors\n\nThanks to these wonderful people ([emoji key](https://github.com/kentcdodds/all-contributors#emoji-key)):\n\n1. [Alejandro Sanchez (alesanchezr)](https://github.com/alesanchezr), contribution: (coder) 💻, (idea) 🤔, (build-tests) ⚠️, (pull-request-review) 👀, (build-tutorial) ✅, (documentation) 📖\n\n2. [Paolo (plucodev)](https://github.com/plucodev), contribution: (bug reports) 🐛, (coder) 💻, (translation) 🌎\n\n3. [Ricardo Rodriguez (RickRodriguez8080)](https://github.com/RickRodriguez8080) contribution: (build-tutorial) ✅, (documentation) 📖\n\nThis project follows the [all-contributors](https://github.com/kentcdodds/all-contributors) specifications. \n\nContributions of any kind are welcome!\n`\n      ---\n      \n---\n      # File name: solution.hide.py. Content: \n      `{\"message\":\"File not found: + undefined\",\"status\":500,\"type\":null}`\n      ---\n      \n---\n      # File name: test.py. Content: \n      `import pytest\nimport os\nimport numpy\n\n@pytest.mark.it(\"You have to use the ones() method\")\ndef test_random():\n    f = open('app.py')\n    content = f.read()\n    assert \"ones(\" in content\n\n@pytest.mark.it('The output should be the expected matrix')\ndef test_print(capsys):\n    import app\n    captured = capsys.readouterr()\n    assert captured.out == '[[1. 1. 1. 1. 1.]\\n [1. 0. 0. 0. 1.]\\n [1. 0. 0. 0. 1.]\\n [1. 0. 0. 0. 1.]\\n [1. 1. 1. 1. 1.]]\\n'\n`\n      ---\n      \n      ---This is the current exercise instructions:\n      # `016` Array Border\n\n## 📝 Instrucciones:\n\n1. Crea una matriz con todos los valores iguales a uno (1).\n\n2. Agrega cero (0) a todos los valores que se encuentran en el centro de la matriz.\n\n3. Imprime la matriz en la consola.\n\n## 💻 Resultado Esperado\n\n```bash\n[[1. 1. 1. 1. 1.]\n [1. 0. 0. 0. 1.]\n [1. 0. 0. 0. 1.]\n [1. 0. 0. 0. 1.]\n [1. 1. 1. 1. 1.]]\n```\n\n## 💡 Pistas:\n\n+ El método `np.ones()` Crea una matriz con todos los valores igual a uno (1). Puedes aprender más sobre este método en este link: https://numpy.org/doc/stable/reference/generated/numpy.ones.html.\n\n+ Si quieres modificar todos los valores del centro (Es decir, todos menos los bordes), puedes hacerlo de esta manera: `matrix[1:-1,1:-1] = \"new_value\"`\n\n      ---\n      \n      <MANDATORY FOR AI: The user's set up the application in \"es\" language, give your feedback in \"es\" language, please.>\n\n      ","ending_at":1742487453251,"ai_response":"La notación `[1:-1, 1:-1]` se utiliza para seleccionar un subconjunto de una matriz en NumPy. Vamos a desglosar lo que significa cada parte:\n\n1. **`1:-1`**: Esto es una \"slicing\" (corte) en Python. En este caso, significa que quieres seleccionar todas las filas o columnas desde el índice 1 hasta el índice -1.\n   - El primer número (`1`) indica que comienzas en la segunda fila o columna (ya que los índices comienzan en 0).\n   - El segundo número (`-1`) indica que terminas en el penúltimo elemento. En otras palabras, no incluyes el último elemento de la fila o columna.\n\n2. **`matrix[1:-1, 1:-1]`**: En este contexto, estás aplicando el corte a ambas dimensiones de la matriz:\n   - La primera parte (`1:-1`) se refiere a las filas.\n   - La segunda parte (`1:-1`) se refiere a las columnas.\n\nPor lo tanto, esta notación selecciona todos los elementos en la matriz que están en el \"centro\", excluyendo los bordes. En una matriz de 5x5, esto significa que seleccionas las filas 1, 2 y 3 y las columnas 1, 2 y 3, que corresponden a los elementos del medio de la matriz.\n\n### Ejemplo:\n\nSi tienes la siguiente matriz:\n\n```\n[[1, 1, 1, 1, 1],\n [1, 0, 0, 0, 1],\n [1, 0, 0, 0, 1],\n [1, 0, 0, 0, 1],\n [1, 1, 1, 1, 1]]\n```\n\nAl aplicar `matrix[1:-1, 1:-1]`, seleccionas:\n\n```\n[[0, 0, 0],\n [0, 0, 0],\n [0, 0, 0]]\n```\n\nEsto te permite modificar solo los valores en el centro de la matriz, que son los que deseas cambiar a 0 en este ejercicio. ¿Te queda más claro ahora?"}],"compilations":[{"stderr":"VHJhY2ViYWNrIChtb3N0IHJlY2VudCBjYWxsIGxhc3QpOgogIEZpbGUgIi93b3Jrc3BhY2VzL251bXB5LXR1dG9yaWFsLWV4ZXJjaXNlcy9hcHAucHkiLCBsaW5lIDQyLCBpbiA8bW9kdWxlPgogICAgYXJyID0gbnAub25lcygpClR5cGVFcnJvcjogb25lcygpIG1pc3NpbmcgMSByZXF1aXJlZCBwb3NpdGlvbmFsIGFyZ3VtZW50OiAnc2hhcGUnCg==","stdout":"","signal":null,"memoryUsage":262144,"cpuUsage":7142,"errorType":"run-time","starting_at":1742486771381,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgojIGFyciA9IG5wLmFycmF5KFsxLDIsMCwwLDQsMF0pCiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKQojIHByaW50KGluZGV4ZXMpCgojIGFyciA9IG5wLmV5ZSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tYXgoYXJyKSkKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tZWFuKGFycikpCgphcnIgPSBucC5vbmVzKCkKcHJpbnQoYXJyKQoKCg==","ended_at":1742486771536,"exit_code":1},{"stderr":"","stdout":"WzEuIDEuIDEuIDEuIDEuXQo=","signal":null,"memoryUsage":393216,"cpuUsage":5977,"starting_at":1742486810245,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgojIGFyciA9IG5wLmFycmF5KFsxLDIsMCwwLDQsMF0pCiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKQojIHByaW50KGluZGV4ZXMpCgojIGFyciA9IG5wLmV5ZSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tYXgoYXJyKSkKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tZWFuKGFycikpCgphcnIgPSBucC5vbmVzKDUpCnByaW50KGFycikKCgo=","ended_at":1742486810406,"exit_code":0},{"stderr":"VHJhY2ViYWNrIChtb3N0IHJlY2VudCBjYWxsIGxhc3QpOgogIEZpbGUgIi93b3Jrc3BhY2VzL251bXB5LXR1dG9yaWFsLWV4ZXJjaXNlcy9hcHAucHkiLCBsaW5lIDQyLCBpbiA8bW9kdWxlPgogICAgYXJyID0gbnAub25lcyg1LDUpCiAgRmlsZSAiL2hvbWUvdnNjb2RlLy5sb2NhbC9saWIvcHl0aG9uMy4xMC9zaXRlLXBhY2thZ2VzL251bXB5L2NvcmUvbnVtZXJpYy5weSIsIGxpbmUgMjA1LCBpbiBvbmVzCiAgICBhID0gZW1wdHkoc2hhcGUsIGR0eXBlLCBvcmRlcikKVHlwZUVycm9yOiBDYW5ub3QgaW50ZXJwcmV0ICc1JyBhcyBhIGRhdGEgdHlwZQo=","stdout":"","signal":null,"memoryUsage":524288,"cpuUsage":7353,"errorType":"run-time","starting_at":1742486829614,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgojIGFyciA9IG5wLmFycmF5KFsxLDIsMCwwLDQsMF0pCiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKQojIHByaW50KGluZGV4ZXMpCgojIGFyciA9IG5wLmV5ZSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tYXgoYXJyKSkKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tZWFuKGFycikpCgphcnIgPSBucC5vbmVzKDUsNSkKcHJpbnQoYXJyKQoKCg==","ended_at":1742486829787,"exit_code":1},{"stderr":"VHJhY2ViYWNrIChtb3N0IHJlY2VudCBjYWxsIGxhc3QpOgogIEZpbGUgIi93b3Jrc3BhY2VzL251bXB5LXR1dG9yaWFsLWV4ZXJjaXNlcy9hcHAucHkiLCBsaW5lIDQyLCBpbiA8bW9kdWxlPgogICAgYXJyID0gbnAucmVzaGFwZS5vbmVzKDUpCkF0dHJpYnV0ZUVycm9yOiAnZnVuY3Rpb24nIG9iamVjdCBoYXMgbm8gYXR0cmlidXRlICdvbmVzJwo=","stdout":"","signal":null,"memoryUsage":524288,"cpuUsage":6624,"errorType":"run-time","starting_at":1742486902629,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgojIGFyciA9IG5wLmFycmF5KFsxLDIsMCwwLDQsMF0pCiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKQojIHByaW50KGluZGV4ZXMpCgojIGFyciA9IG5wLmV5ZSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tYXgoYXJyKSkKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tZWFuKGFycikpCgphcnIgPSBucC5yZXNoYXBlLm9uZXMoNSkKcHJpbnQoYXJyKQoKCg==","ended_at":1742486902784,"exit_code":1},{"stderr":"VHJhY2ViYWNrIChtb3N0IHJlY2VudCBjYWxsIGxhc3QpOgogIEZpbGUgIi93b3Jrc3BhY2VzL251bXB5LXR1dG9yaWFsLWV4ZXJjaXNlcy9hcHAucHkiLCBsaW5lIDQyLCBpbiA8bW9kdWxlPgogICAgYXJyID0gbnAucmVzaGFwZS5vbmVzKDUsNSkKQXR0cmlidXRlRXJyb3I6ICdmdW5jdGlvbicgb2JqZWN0IGhhcyBubyBhdHRyaWJ1dGUgJ29uZXMnCg==","stdout":"","signal":null,"memoryUsage":262144,"cpuUsage":7448,"errorType":"run-time","starting_at":1742486917897,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgojIGFyciA9IG5wLmFycmF5KFsxLDIsMCwwLDQsMF0pCiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKQojIHByaW50KGluZGV4ZXMpCgojIGFyciA9IG5wLmV5ZSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tYXgoYXJyKSkKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tZWFuKGFycikpCgphcnIgPSBucC5yZXNoYXBlLm9uZXMoNSw1KQpwcmludChhcnIpCgoK","ended_at":1742486918052,"exit_code":1},{"stderr":"","stdout":"W1sxLiAxLiAxLiAxLiAxLl0KIFsxLiAxLiAxLiAxLiAxLl0KIFsxLiAxLiAxLiAxLiAxLl0KIFsxLiAxLiAxLiAxLiAxLl0KIFsxLiAxLiAxLiAxLiAxLl1dCg==","signal":null,"memoryUsage":393216,"cpuUsage":7290,"starting_at":1742487009030,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgojIGFyciA9IG5wLmFycmF5KFsxLDIsMCwwLDQsMF0pCiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKQojIHByaW50KGluZGV4ZXMpCgojIGFyciA9IG5wLmV5ZSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tYXgoYXJyKSkKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tZWFuKGFycikpCgphcnIgPSBucC5vbmVzKCg1LDUpKQpwcmludChhcnIpCgoK","ended_at":1742487009212,"exit_code":0},{"stderr":"","stdout":"W1sxLiAxLiAxLiAxLiAxLl0KIFsxLiAwLiAwLiAwLiAxLl0KIFsxLiAwLiAwLiAwLiAxLl0KIFsxLiAwLiAwLiAwLiAxLl0KIFsxLiAxLiAxLiAxLiAxLl1dCg==","signal":null,"memoryUsage":393216,"cpuUsage":6342,"starting_at":1742487408726,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgojIGFyciA9IG5wLmFycmF5KFsxLDIsMCwwLDQsMF0pCiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKQojIHByaW50KGluZGV4ZXMpCgojIGFyciA9IG5wLmV5ZSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tYXgoYXJyKSkKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tZWFuKGFycikpCgphcnIgPSBucC5vbmVzKCg1LDUpKQphcnJbMTotMSwgMTotMV0gPSAwCnByaW50KGFycikK","ended_at":1742487408883,"exit_code":0},{"stderr":"","stdout":"W1sxLiAxLiAxLiAxLiAxLl0KIFsxLiAwLiAwLiAwLiAxLl0KIFsxLiAwLiAwLiAwLiAxLl0KIFsxLiAxLiAxLiAxLiAxLl0KIFsxLiAxLiAxLiAxLiAxLl1dCg==","signal":null,"memoryUsage":655360,"cpuUsage":6774,"starting_at":1742487645718,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgojIGFyciA9IG5wLmFycmF5KFsxLDIsMCwwLDQsMF0pCiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKQojIHByaW50KGluZGV4ZXMpCgojIGFyciA9IG5wLmV5ZSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tYXgoYXJyKSkKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tZWFuKGFycikpCgphcnIgPSBucC5vbmVzKCg1LDUpKQphcnJbMTotMiwgMTotMV0gPSAwCnByaW50KGFycikK","ended_at":1742487645900,"exit_code":0},{"stderr":"","stdout":"W1sxLiAxLiAxLiAxLiAxLl0KIFsxLiAwLiAwLiAxLiAxLl0KIFsxLiAwLiAwLiAxLiAxLl0KIFsxLiAxLiAxLiAxLiAxLl0KIFsxLiAxLiAxLiAxLiAxLl1dCg==","signal":null,"memoryUsage":524288,"cpuUsage":7358,"starting_at":1742487654008,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgojIGFyciA9IG5wLmFycmF5KFsxLDIsMCwwLDQsMF0pCiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKQojIHByaW50KGluZGV4ZXMpCgojIGFyciA9IG5wLmV5ZSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tYXgoYXJyKSkKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tZWFuKGFycikpCgphcnIgPSBucC5vbmVzKCg1LDUpKQphcnJbMTotMiwgMTotMl0gPSAwCnByaW50KGFycikK","ended_at":1742487654164,"exit_code":0},{"stderr":"","stdout":"W1sxLiAxLiAxLiAxLiAxLl0KIFsxLiAxLiAwLiAxLiAxLl0KIFsxLiAxLiAwLiAxLiAxLl0KIFsxLiAxLiAxLiAxLiAxLl0KIFsxLiAxLiAxLiAxLiAxLl1dCg==","signal":null,"memoryUsage":393216,"cpuUsage":7078,"starting_at":1742487678433,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgojIGFyciA9IG5wLmFycmF5KFsxLDIsMCwwLDQsMF0pCiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKQojIHByaW50KGluZGV4ZXMpCgojIGFyciA9IG5wLmV5ZSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tYXgoYXJyKSkKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tZWFuKGFycikpCgphcnIgPSBucC5vbmVzKCg1LDUpKQphcnJbMTotMiwgMjotMl0gPSAwCnByaW50KGFycikK","ended_at":1742487678615,"exit_code":0},{"stderr":"","stdout":"W1sxLiAxLiAxLiAxLiAxLl0KIFsxLiAxLiAxLiAxLiAxLl0KIFsxLiAxLiAwLiAxLiAxLl0KIFsxLiAxLiAxLiAxLiAxLl0KIFsxLiAxLiAxLiAxLiAxLl1dCg==","signal":null,"memoryUsage":524288,"cpuUsage":5465,"starting_at":1742487687742,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgojIGFyciA9IG5wLmFycmF5KFsxLDIsMCwwLDQsMF0pCiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKQojIHByaW50KGluZGV4ZXMpCgojIGFyciA9IG5wLmV5ZSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tYXgoYXJyKSkKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tZWFuKGFycikpCgphcnIgPSBucC5vbmVzKCg1LDUpKQphcnJbMjotMiwgMjotMl0gPSAwCnByaW50KGFycikK","ended_at":1742487687970,"exit_code":0},{"stderr":"","stdout":"W1sxLiAxLiAxLiAxLiAxLl0KIFsxLiAwLiAxLiAxLiAxLl0KIFsxLiAxLiAxLiAxLiAxLl0KIFsxLiAxLiAxLiAxLiAxLl0KIFsxLiAxLiAxLiAxLiAxLl1dCg==","signal":null,"memoryUsage":393216,"cpuUsage":7185,"starting_at":1742487724209,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgojIGFyciA9IG5wLmFycmF5KFsxLDIsMCwwLDQsMF0pCiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKQojIHByaW50KGluZGV4ZXMpCgojIGFyciA9IG5wLmV5ZSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tYXgoYXJyKSkKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tZWFuKGFycikpCgphcnIgPSBucC5vbmVzKCg1LDUpKQphcnJbMTotMywgMTotM10gPSAwCnByaW50KGFycikK","ended_at":1742487724366,"exit_code":0},{"stderr":"","stdout":"W1sxLiAxLiAxLiAxLiAxLl0KIFsxLiAxLiAxLiAxLiAxLl0KIFsxLiAxLiAwLiAxLiAxLl0KIFsxLiAxLiAxLiAxLiAxLl0KIFsxLiAxLiAxLiAxLiAxLl1dCg==","signal":null,"memoryUsage":524288,"cpuUsage":5401,"starting_at":1742487894382,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgojIGFyciA9IG5wLmFycmF5KFsxLDIsMCwwLDQsMF0pCiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKQojIHByaW50KGluZGV4ZXMpCgojIGFyciA9IG5wLmV5ZSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tYXgoYXJyKSkKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tZWFuKGFycikpCgphcnIgPSBucC5vbmVzKCg1LDUpKQphcnJbMjotMiwgMjotMl0gPSAwCnByaW50KGFycikK","ended_at":1742487894535,"exit_code":0},{"stderr":"","stdout":"W1sxLiAxLiAxLiAxLiAxLl0KIFsxLiAwLiAwLiAwLiAxLl0KIFsxLiAwLiAwLiAwLiAxLl0KIFsxLiAwLiAwLiAwLiAxLl0KIFsxLiAxLiAxLiAxLiAxLl1dCg==","signal":null,"memoryUsage":393216,"cpuUsage":6227,"starting_at":1742487923814,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgojIGFyciA9IG5wLmFycmF5KFsxLDIsMCwwLDQsMF0pCiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKQojIHByaW50KGluZGV4ZXMpCgojIGFyciA9IG5wLmV5ZSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tYXgoYXJyKSkKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tZWFuKGFycikpCgphcnIgPSBucC5vbmVzKCg1LDUpKQphcnJbMTotMSwgMTotMV0gPSAwCnByaW50KGFycikK","ended_at":1742487923971,"exit_code":0},{"stderr":"","stdout":"W1sxLiAxLiAxLiAxLiAxLl0KIFsxLiAxLiAxLiAxLiAxLl0KIFsxLiAxLiAxLiAxLiAxLl0KIFsxLiAxLiAxLiAxLiAxLl0KIFsxLiAxLiAxLiAxLiAxLl1dCg==","signal":null,"memoryUsage":524288,"cpuUsage":6693,"starting_at":1742487938678,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgojIGFyciA9IG5wLmFycmF5KFsxLDIsMCwwLDQsMF0pCiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKQojIHByaW50KGluZGV4ZXMpCgojIGFyciA9IG5wLmV5ZSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tYXgoYXJyKSkKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tZWFuKGFycikpCgphcnIgPSBucC5vbmVzKCg1LDUpKQphcnJbMTotMSwgMToxXSA9IDAKcHJpbnQoYXJyKQo=","ended_at":1742487938831,"exit_code":0},{"stderr":"","stdout":"W1sxLiAxLiAxLiAxLiAxLl0KIFsxLiAwLiAwLiAwLiAxLl0KIFsxLiAwLiAwLiAwLiAxLl0KIFsxLiAwLiAwLiAwLiAxLl0KIFsxLiAxLiAxLiAxLiAxLl1dCg==","signal":null,"memoryUsage":393216,"cpuUsage":7048,"starting_at":1742487947436,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgojIGFyciA9IG5wLmFycmF5KFsxLDIsMCwwLDQsMF0pCiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKQojIHByaW50KGluZGV4ZXMpCgojIGFyciA9IG5wLmV5ZSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tYXgoYXJyKSkKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tZWFuKGFycikpCgphcnIgPSBucC5vbmVzKCg1LDUpKQphcnJbMTotMSwgMTotMV0gPSAwCnByaW50KGFycikK","ended_at":1742487947597,"exit_code":0}],"tests":[{"starting_at":1742486929768,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgojIGFyciA9IG5wLmFycmF5KFsxLDIsMCwwLDQsMF0pCiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKQojIHByaW50KGluZGV4ZXMpCgojIGFyciA9IG5wLmV5ZSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tYXgoYXJyKSkKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tZWFuKGFycikpCgoKCgo=","ended_at":1742486930189,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvbnVtcHktdHV0b3JpYWwtZXhlcmNpc2VzCnBsdWdpbnM6IHRlc3Rkb3gtMy4xLjAKY29sbGVjdGVkIDIgaXRlbXMKCi5sZWFybi9leGVyY2lzZXMvMDE2LWFycmF5LWJvcmRlci90ZXN0LnB5IBtbMzFtRhtbMG0bWzMxbUYbWzBtG1szMW0gICAgICAgICAgICAgICAgICAgICAgICAgICAgIFsxMDAlXRtbMG0KCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IEZBSUxVUkVTID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ChtbMzFtG1sxbV9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXyB0ZXN0X3JhbmRvbSBfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fG1swbQoKICAgIEBweXRlc3QubWFyay5pdCgiWW91IGhhdmUgdG8gdXNlIHRoZSBvbmVzKCkgbWV0aG9kIikKICAgIGRlZiB0ZXN0X3JhbmRvbSgpOgogICAgICAgIGYgPSBvcGVuKCdhcHAucHknKQogICAgICAgIGNvbnRlbnQgPSBmLnJlYWQoKQo+ICAgICAgIGFzc2VydCAib25lcygiIGluIGNvbnRlbnQKG1sxbRtbMzFtRSAgICAgICBBc3NlcnRpb25FcnJvcjogYXNzZXJ0ICdvbmVzKCcgaW4gJ2ltcG9ydCBudW1weSBhcyBucFxuXG5cbiMgdmVjdG9yX251bGwgPSBucC56ZXJvcygxMClcbiMgcHJpbnQodmVjdG9yX251bGwpXG5cbiMgYW1vdW50X29mX21lbW9yeSA9IHZlY3Rvcl9udWxsLnNpemUgKi4uLm5cbiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMClcbiMgcHJpbnQobnAubWF4KGFycikpXG5cbiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMClcbiMgcHJpbnQobnAubWVhbihhcnIpKVxuXG5cblxuXG4nG1swbQoKG1sxbRtbMzFtLmxlYXJuL2V4ZXJjaXNlcy8wMTYtYXJyYXktYm9yZGVyL3Rlc3QucHkbWzBtOjk6IEFzc2VydGlvbkVycm9yChtbMzFtG1sxbV9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18gdGVzdF9wcmludCBfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fG1swbQoKY2Fwc3lzID0gPF9weXRlc3QuY2FwdHVyZS5DYXB0dXJlRml4dHVyZSBvYmplY3QgYXQgMHg3NjhjOTE0MGJjMTA+CgogICAgQHB5dGVzdC5tYXJrLml0KCdUaGUgb3V0cHV0IHNob3VsZCBiZSB0aGUgZXhwZWN0ZWQgbWF0cml4JykKICAgIGRlZiB0ZXN0X3ByaW50KGNhcHN5cyk6CiAgICAgICAgaW1wb3J0IGFwcAogICAgICAgIGNhcHR1cmVkID0gY2Fwc3lzLnJlYWRvdXRlcnIoKQo+ICAgICAgIGFzc2VydCBjYXB0dXJlZC5vdXQgPT0gJ1tbMS4gMS4gMS4gMS4gMS5dXG4gWzEuIDAuIDAuIDAuIDEuXVxuIFsxLiAwLiAwLiAwLiAxLl1cbiBbMS4gMC4gMC4gMC4gMS5dXG4gWzEuIDEuIDEuIDEuIDEuXV1cbicKG1sxbRtbMzFtRSAgICAgICBBc3NlcnRpb25FcnJvcjogYXNzZXJ0ICcnID09ICdbWzEuIDEuIDEuIDEuLi4gMS4gMS4gMS5dXVxuJxtbMG0KG1sxbRtbMzFtRSAgICAgICAgIC0gW1sxLiAxLiAxLiAxLiAxLl0bWzBtChtbMW0bWzMxbUUgICAgICAgICAtICBbMS4gMC4gMC4gMC4gMS5dG1swbQobWzFtG1szMW1FICAgICAgICAgLSAgWzEuIDAuIDAuIDAuIDEuXRtbMG0KG1sxbRtbMzFtRSAgICAgICAgIC0gIFsxLiAwLiAwLiAwLiAxLl0bWzBtChtbMW0bWzMxbUUgICAgICAgICAtICBbMS4gMS4gMS4gMS4gMS5dXRtbMG0KChtbMW0bWzMxbS5sZWFybi9leGVyY2lzZXMvMDE2LWFycmF5LWJvcmRlci90ZXN0LnB5G1swbToxNTogQXNzZXJ0aW9uRXJyb3IKG1szNm0bWzFtPT09PT09PT09PT09PT09PT09PT09PT09PT09IHNob3J0IHRlc3Qgc3VtbWFyeSBpbmZvID09PT09PT09PT09PT09PT09PT09PT09PT09PT0bWzBtChtbMzFtRkFJTEVEG1swbSAubGVhcm4vZXhlcmNpc2VzLzAxNi1hcnJheS1ib3JkZXIvdGVzdC5weTo6G1sxbXRlc3RfcmFuZG9tG1swbSAtIEFzc2VydGlvbkVycm9yOiBhc3NlcnQgJ29uZXMoJyBpbiAnaW1wb3J0IG51bXB5IGFzIG5wXG5cblxuIyB2ZWN0b3JfbnVsbCA9IC4uLgobWzMxbUZBSUxFRBtbMG0gLmxlYXJuL2V4ZXJjaXNlcy8wMTYtYXJyYXktYm9yZGVyL3Rlc3QucHk6OhtbMW10ZXN0X3ByaW50G1swbSAtIEFzc2VydGlvbkVycm9yOiBhc3NlcnQgJycgPT0gJ1tbMS4gMS4gMS4gMS4uLiAxLiAxLiAxLl1dXG4nChtbMzFtPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IBtbMzFtG1sxbTIgZmFpbGVkG1swbRtbMzFtIGluIDAuMTRzG1swbRtbMzFtID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0bWzBtCg==","stderr":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvbnVtcHktdHV0b3JpYWwtZXhlcmNpc2VzCnBsdWdpbnM6IHRlc3Rkb3gtMy4xLjAKY29sbGVjdGVkIDIgaXRlbXMKCi5sZWFybi9leGVyY2lzZXMvMDE2LWFycmF5LWJvcmRlci90ZXN0LnB5IBtbMzFtRhtbMG0bWzMxbUYbWzBtG1szMW0gICAgICAgICAgICAgICAgICAgICAgICAgICAgIFsxMDAlXRtbMG0KCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IEZBSUxVUkVTID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ChtbMzFtG1sxbV9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXyB0ZXN0X3JhbmRvbSBfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fG1swbQoKICAgIEBweXRlc3QubWFyay5pdCgiWW91IGhhdmUgdG8gdXNlIHRoZSBvbmVzKCkgbWV0aG9kIikKICAgIGRlZiB0ZXN0X3JhbmRvbSgpOgogICAgICAgIGYgPSBvcGVuKCdhcHAucHknKQogICAgICAgIGNvbnRlbnQgPSBmLnJlYWQoKQo+ICAgICAgIGFzc2VydCAib25lcygiIGluIGNvbnRlbnQKG1sxbRtbMzFtRSAgICAgICBBc3NlcnRpb25FcnJvcjogYXNzZXJ0ICdvbmVzKCcgaW4gJ2ltcG9ydCBudW1weSBhcyBucFxuXG5cbiMgdmVjdG9yX251bGwgPSBucC56ZXJvcygxMClcbiMgcHJpbnQodmVjdG9yX251bGwpXG5cbiMgYW1vdW50X29mX21lbW9yeSA9IHZlY3Rvcl9udWxsLnNpemUgKi4uLm5cbiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMClcbiMgcHJpbnQobnAubWF4KGFycikpXG5cbiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMClcbiMgcHJpbnQobnAubWVhbihhcnIpKVxuXG5cblxuXG4nG1swbQoKG1sxbRtbMzFtLmxlYXJuL2V4ZXJjaXNlcy8wMTYtYXJyYXktYm9yZGVyL3Rlc3QucHkbWzBtOjk6IEFzc2VydGlvbkVycm9yChtbMzFtG1sxbV9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18gdGVzdF9wcmludCBfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fG1swbQoKY2Fwc3lzID0gPF9weXRlc3QuY2FwdHVyZS5DYXB0dXJlRml4dHVyZSBvYmplY3QgYXQgMHg3NjhjOTE0MGJjMTA+CgogICAgQHB5dGVzdC5tYXJrLml0KCdUaGUgb3V0cHV0IHNob3VsZCBiZSB0aGUgZXhwZWN0ZWQgbWF0cml4JykKICAgIGRlZiB0ZXN0X3ByaW50KGNhcHN5cyk6CiAgICAgICAgaW1wb3J0IGFwcAogICAgICAgIGNhcHR1cmVkID0gY2Fwc3lzLnJlYWRvdXRlcnIoKQo+ICAgICAgIGFzc2VydCBjYXB0dXJlZC5vdXQgPT0gJ1tbMS4gMS4gMS4gMS4gMS5dXG4gWzEuIDAuIDAuIDAuIDEuXVxuIFsxLiAwLiAwLiAwLiAxLl1cbiBbMS4gMC4gMC4gMC4gMS5dXG4gWzEuIDEuIDEuIDEuIDEuXV1cbicKG1sxbRtbMzFtRSAgICAgICBBc3NlcnRpb25FcnJvcjogYXNzZXJ0ICcnID09ICdbWzEuIDEuIDEuIDEuLi4gMS4gMS4gMS5dXVxuJxtbMG0KG1sxbRtbMzFtRSAgICAgICAgIC0gW1sxLiAxLiAxLiAxLiAxLl0bWzBtChtbMW0bWzMxbUUgICAgICAgICAtICBbMS4gMC4gMC4gMC4gMS5dG1swbQobWzFtG1szMW1FICAgICAgICAgLSAgWzEuIDAuIDAuIDAuIDEuXRtbMG0KG1sxbRtbMzFtRSAgICAgICAgIC0gIFsxLiAwLiAwLiAwLiAxLl0bWzBtChtbMW0bWzMxbUUgICAgICAgICAtICBbMS4gMS4gMS4gMS4gMS5dXRtbMG0KChtbMW0bWzMxbS5sZWFybi9leGVyY2lzZXMvMDE2LWFycmF5LWJvcmRlci90ZXN0LnB5G1swbToxNTogQXNzZXJ0aW9uRXJyb3IKG1szNm0bWzFtPT09PT09PT09PT09PT09PT09PT09PT09PT09IHNob3J0IHRlc3Qgc3VtbWFyeSBpbmZvID09PT09PT09PT09PT09PT09PT09PT09PT09PT0bWzBtChtbMzFtRkFJTEVEG1swbSAubGVhcm4vZXhlcmNpc2VzLzAxNi1hcnJheS1ib3JkZXIvdGVzdC5weTo6G1sxbXRlc3RfcmFuZG9tG1swbSAtIEFzc2VydGlvbkVycm9yOiBhc3NlcnQgJ29uZXMoJyBpbiAnaW1wb3J0IG51bXB5IGFzIG5wXG5cblxuIyB2ZWN0b3JfbnVsbCA9IC4uLgobWzMxbUZBSUxFRBtbMG0gLmxlYXJuL2V4ZXJjaXNlcy8wMTYtYXJyYXktYm9yZGVyL3Rlc3QucHk6OhtbMW10ZXN0X3ByaW50G1swbSAtIEFzc2VydGlvbkVycm9yOiBhc3NlcnQgJycgPT0gJ1tbMS4gMS4gMS4gMS4uLiAxLiAxLiAxLl1dXG4nChtbMzFtPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IBtbMzFtG1sxbTIgZmFpbGVkG1swbRtbMzFtIGluIDAuMTRzG1swbRtbMzFtID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0bWzBtCiwKCiAgIAogICAgICAgICAgG1szMW1Zb3VyIGNvZGUgbXVzdCB0byBjb21wbHkgd2l0aCB0aGUgZm9sbG93aW5nIHRlc3RzOhtbMzltIAoKICAgICAbWzMxbRtbMW14IChmYWlsKRtbMjJtG1szOW0gMC4gG1szN21Zb3UgaGF2ZSB0byB1c2UgdGhlIG9uZXMoKSBtZXRob2QbWzM5bQogICAgIBtbMzFtG1sxbXggKGZhaWwpG1syMm0bWzM5bSAxLiAbWzM3bVRoZSBvdXRwdXQgc2hvdWxkIGJlIHRoZSBleHBlY3RlZCBtYXRyaXgbWzM5bSAKCg==","exit_code":1},{"starting_at":1742486955729,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgojIGFyciA9IG5wLmFycmF5KFsxLDIsMCwwLDQsMF0pCiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKQojIHByaW50KGluZGV4ZXMpCgojIGFyciA9IG5wLmV5ZSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tYXgoYXJyKSkKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tZWFuKGFycikpCgoKCgo=","ended_at":1742486956115,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvbnVtcHktdHV0b3JpYWwtZXhlcmNpc2VzCnBsdWdpbnM6IHRlc3Rkb3gtMy4xLjAKY29sbGVjdGVkIDIgaXRlbXMKCi5sZWFybi9leGVyY2lzZXMvMDE2LWFycmF5LWJvcmRlci90ZXN0LnB5IBtbMzFtRhtbMG0bWzMxbUYbWzBtG1szMW0gICAgICAgICAgICAgICAgICAgICAgICAgICAgIFsxMDAlXRtbMG0KCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IEZBSUxVUkVTID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ChtbMzFtG1sxbV9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXyB0ZXN0X3JhbmRvbSBfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fG1swbQoKICAgIEBweXRlc3QubWFyay5pdCgiWW91IGhhdmUgdG8gdXNlIHRoZSBvbmVzKCkgbWV0aG9kIikKICAgIGRlZiB0ZXN0X3JhbmRvbSgpOgogICAgICAgIGYgPSBvcGVuKCdhcHAucHknKQogICAgICAgIGNvbnRlbnQgPSBmLnJlYWQoKQo+ICAgICAgIGFzc2VydCAib25lcygiIGluIGNvbnRlbnQKG1sxbRtbMzFtRSAgICAgICBBc3NlcnRpb25FcnJvcjogYXNzZXJ0ICdvbmVzKCcgaW4gJ2ltcG9ydCBudW1weSBhcyBucFxuXG5cbiMgdmVjdG9yX251bGwgPSBucC56ZXJvcygxMClcbiMgcHJpbnQodmVjdG9yX251bGwpXG5cbiMgYW1vdW50X29mX21lbW9yeSA9IHZlY3Rvcl9udWxsLnNpemUgKi4uLm5cbiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMClcbiMgcHJpbnQobnAubWF4KGFycikpXG5cbiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMClcbiMgcHJpbnQobnAubWVhbihhcnIpKVxuXG5cblxuXG4nG1swbQoKG1sxbRtbMzFtLmxlYXJuL2V4ZXJjaXNlcy8wMTYtYXJyYXktYm9yZGVyL3Rlc3QucHkbWzBtOjk6IEFzc2VydGlvbkVycm9yChtbMzFtG1sxbV9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18gdGVzdF9wcmludCBfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fG1swbQoKY2Fwc3lzID0gPF9weXRlc3QuY2FwdHVyZS5DYXB0dXJlRml4dHVyZSBvYmplY3QgYXQgMHg3ZWUxNWQzZjc3MzA+CgogICAgQHB5dGVzdC5tYXJrLml0KCdUaGUgb3V0cHV0IHNob3VsZCBiZSB0aGUgZXhwZWN0ZWQgbWF0cml4JykKICAgIGRlZiB0ZXN0X3ByaW50KGNhcHN5cyk6CiAgICAgICAgaW1wb3J0IGFwcAogICAgICAgIGNhcHR1cmVkID0gY2Fwc3lzLnJlYWRvdXRlcnIoKQo+ICAgICAgIGFzc2VydCBjYXB0dXJlZC5vdXQgPT0gJ1tbMS4gMS4gMS4gMS4gMS5dXG4gWzEuIDAuIDAuIDAuIDEuXVxuIFsxLiAwLiAwLiAwLiAxLl1cbiBbMS4gMC4gMC4gMC4gMS5dXG4gWzEuIDEuIDEuIDEuIDEuXV1cbicKG1sxbRtbMzFtRSAgICAgICBBc3NlcnRpb25FcnJvcjogYXNzZXJ0ICcnID09ICdbWzEuIDEuIDEuIDEuLi4gMS4gMS4gMS5dXVxuJxtbMG0KG1sxbRtbMzFtRSAgICAgICAgIC0gW1sxLiAxLiAxLiAxLiAxLl0bWzBtChtbMW0bWzMxbUUgICAgICAgICAtICBbMS4gMC4gMC4gMC4gMS5dG1swbQobWzFtG1szMW1FICAgICAgICAgLSAgWzEuIDAuIDAuIDAuIDEuXRtbMG0KG1sxbRtbMzFtRSAgICAgICAgIC0gIFsxLiAwLiAwLiAwLiAxLl0bWzBtChtbMW0bWzMxbUUgICAgICAgICAtICBbMS4gMS4gMS4gMS4gMS5dXRtbMG0KChtbMW0bWzMxbS5sZWFybi9leGVyY2lzZXMvMDE2LWFycmF5LWJvcmRlci90ZXN0LnB5G1swbToxNTogQXNzZXJ0aW9uRXJyb3IKG1szNm0bWzFtPT09PT09PT09PT09PT09PT09PT09PT09PT09IHNob3J0IHRlc3Qgc3VtbWFyeSBpbmZvID09PT09PT09PT09PT09PT09PT09PT09PT09PT0bWzBtChtbMzFtRkFJTEVEG1swbSAubGVhcm4vZXhlcmNpc2VzLzAxNi1hcnJheS1ib3JkZXIvdGVzdC5weTo6G1sxbXRlc3RfcmFuZG9tG1swbSAtIEFzc2VydGlvbkVycm9yOiBhc3NlcnQgJ29uZXMoJyBpbiAnaW1wb3J0IG51bXB5IGFzIG5wXG5cblxuIyB2ZWN0b3JfbnVsbCA9IC4uLgobWzMxbUZBSUxFRBtbMG0gLmxlYXJuL2V4ZXJjaXNlcy8wMTYtYXJyYXktYm9yZGVyL3Rlc3QucHk6OhtbMW10ZXN0X3ByaW50G1swbSAtIEFzc2VydGlvbkVycm9yOiBhc3NlcnQgJycgPT0gJ1tbMS4gMS4gMS4gMS4uLiAxLiAxLiAxLl1dXG4nChtbMzFtPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IBtbMzFtG1sxbTIgZmFpbGVkG1swbRtbMzFtIGluIDAuMTFzG1swbRtbMzFtID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0bWzBtCg==","stderr":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvbnVtcHktdHV0b3JpYWwtZXhlcmNpc2VzCnBsdWdpbnM6IHRlc3Rkb3gtMy4xLjAKY29sbGVjdGVkIDIgaXRlbXMKCi5sZWFybi9leGVyY2lzZXMvMDE2LWFycmF5LWJvcmRlci90ZXN0LnB5IBtbMzFtRhtbMG0bWzMxbUYbWzBtG1szMW0gICAgICAgICAgICAgICAgICAgICAgICAgICAgIFsxMDAlXRtbMG0KCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IEZBSUxVUkVTID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ChtbMzFtG1sxbV9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXyB0ZXN0X3JhbmRvbSBfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fG1swbQoKICAgIEBweXRlc3QubWFyay5pdCgiWW91IGhhdmUgdG8gdXNlIHRoZSBvbmVzKCkgbWV0aG9kIikKICAgIGRlZiB0ZXN0X3JhbmRvbSgpOgogICAgICAgIGYgPSBvcGVuKCdhcHAucHknKQogICAgICAgIGNvbnRlbnQgPSBmLnJlYWQoKQo+ICAgICAgIGFzc2VydCAib25lcygiIGluIGNvbnRlbnQKG1sxbRtbMzFtRSAgICAgICBBc3NlcnRpb25FcnJvcjogYXNzZXJ0ICdvbmVzKCcgaW4gJ2ltcG9ydCBudW1weSBhcyBucFxuXG5cbiMgdmVjdG9yX251bGwgPSBucC56ZXJvcygxMClcbiMgcHJpbnQodmVjdG9yX251bGwpXG5cbiMgYW1vdW50X29mX21lbW9yeSA9IHZlY3Rvcl9udWxsLnNpemUgKi4uLm5cbiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMClcbiMgcHJpbnQobnAubWF4KGFycikpXG5cbiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMClcbiMgcHJpbnQobnAubWVhbihhcnIpKVxuXG5cblxuXG4nG1swbQoKG1sxbRtbMzFtLmxlYXJuL2V4ZXJjaXNlcy8wMTYtYXJyYXktYm9yZGVyL3Rlc3QucHkbWzBtOjk6IEFzc2VydGlvbkVycm9yChtbMzFtG1sxbV9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18gdGVzdF9wcmludCBfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fG1swbQoKY2Fwc3lzID0gPF9weXRlc3QuY2FwdHVyZS5DYXB0dXJlRml4dHVyZSBvYmplY3QgYXQgMHg3ZWUxNWQzZjc3MzA+CgogICAgQHB5dGVzdC5tYXJrLml0KCdUaGUgb3V0cHV0IHNob3VsZCBiZSB0aGUgZXhwZWN0ZWQgbWF0cml4JykKICAgIGRlZiB0ZXN0X3ByaW50KGNhcHN5cyk6CiAgICAgICAgaW1wb3J0IGFwcAogICAgICAgIGNhcHR1cmVkID0gY2Fwc3lzLnJlYWRvdXRlcnIoKQo+ICAgICAgIGFzc2VydCBjYXB0dXJlZC5vdXQgPT0gJ1tbMS4gMS4gMS4gMS4gMS5dXG4gWzEuIDAuIDAuIDAuIDEuXVxuIFsxLiAwLiAwLiAwLiAxLl1cbiBbMS4gMC4gMC4gMC4gMS5dXG4gWzEuIDEuIDEuIDEuIDEuXV1cbicKG1sxbRtbMzFtRSAgICAgICBBc3NlcnRpb25FcnJvcjogYXNzZXJ0ICcnID09ICdbWzEuIDEuIDEuIDEuLi4gMS4gMS4gMS5dXVxuJxtbMG0KG1sxbRtbMzFtRSAgICAgICAgIC0gW1sxLiAxLiAxLiAxLiAxLl0bWzBtChtbMW0bWzMxbUUgICAgICAgICAtICBbMS4gMC4gMC4gMC4gMS5dG1swbQobWzFtG1szMW1FICAgICAgICAgLSAgWzEuIDAuIDAuIDAuIDEuXRtbMG0KG1sxbRtbMzFtRSAgICAgICAgIC0gIFsxLiAwLiAwLiAwLiAxLl0bWzBtChtbMW0bWzMxbUUgICAgICAgICAtICBbMS4gMS4gMS4gMS4gMS5dXRtbMG0KChtbMW0bWzMxbS5sZWFybi9leGVyY2lzZXMvMDE2LWFycmF5LWJvcmRlci90ZXN0LnB5G1swbToxNTogQXNzZXJ0aW9uRXJyb3IKG1szNm0bWzFtPT09PT09PT09PT09PT09PT09PT09PT09PT09IHNob3J0IHRlc3Qgc3VtbWFyeSBpbmZvID09PT09PT09PT09PT09PT09PT09PT09PT09PT0bWzBtChtbMzFtRkFJTEVEG1swbSAubGVhcm4vZXhlcmNpc2VzLzAxNi1hcnJheS1ib3JkZXIvdGVzdC5weTo6G1sxbXRlc3RfcmFuZG9tG1swbSAtIEFzc2VydGlvbkVycm9yOiBhc3NlcnQgJ29uZXMoJyBpbiAnaW1wb3J0IG51bXB5IGFzIG5wXG5cblxuIyB2ZWN0b3JfbnVsbCA9IC4uLgobWzMxbUZBSUxFRBtbMG0gLmxlYXJuL2V4ZXJjaXNlcy8wMTYtYXJyYXktYm9yZGVyL3Rlc3QucHk6OhtbMW10ZXN0X3ByaW50G1swbSAtIEFzc2VydGlvbkVycm9yOiBhc3NlcnQgJycgPT0gJ1tbMS4gMS4gMS4gMS4uLiAxLiAxLiAxLl1dXG4nChtbMzFtPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IBtbMzFtG1sxbTIgZmFpbGVkG1swbRtbMzFtIGluIDAuMTFzG1swbRtbMzFtID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0bWzBtCiwKCiAgIAogICAgICAgICAgG1szMW1Zb3VyIGNvZGUgbXVzdCB0byBjb21wbHkgd2l0aCB0aGUgZm9sbG93aW5nIHRlc3RzOhtbMzltIAoKICAgICAbWzMxbRtbMW14IChmYWlsKRtbMjJtG1szOW0gMC4gG1szN21Zb3UgaGF2ZSB0byB1c2UgdGhlIG9uZXMoKSBtZXRob2QbWzM5bQogICAgIBtbMzFtG1sxbXggKGZhaWwpG1syMm0bWzM5bSAxLiAbWzM3bVRoZSBvdXRwdXQgc2hvdWxkIGJlIHRoZSBleHBlY3RlZCBtYXRyaXgbWzM5bSAKCg==","exit_code":1},{"starting_at":1742487957853,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgojIGFyciA9IG5wLmFycmF5KFsxLDIsMCwwLDQsMF0pCiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKQojIHByaW50KGluZGV4ZXMpCgojIGFyciA9IG5wLmV5ZSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tYXgoYXJyKSkKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tZWFuKGFycikpCgphcnIgPSBucC5vbmVzKCg1LDUpKQphcnJbMTotMSwgMTotMV0gPSAwCnByaW50KGFycikK","ended_at":1742487958197,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvbnVtcHktdHV0b3JpYWwtZXhlcmNpc2VzCnBsdWdpbnM6IHRlc3Rkb3gtMy4xLjAKY29sbGVjdGVkIDIgaXRlbXMKCi5sZWFybi9leGVyY2lzZXMvMDE2LWFycmF5LWJvcmRlci90ZXN0LnB5IBtbMzJtLhtbMG0bWzMybS4bWzBtG1szMm0gICAgICAgICAgICAgICAgICAgICAgICAgICAgIFsxMDAlXRtbMG0KChtbMzJtPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IBtbMzJtG1sxbTIgcGFzc2VkG1swbRtbMzJtIGluIDAuMDhzG1swbRtbMzJtID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0bWzBtCg==","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1742486662719,"completed_at":1742487958197},{"slug":"017-add-border-to-array","position":17,"files":[{"path":".learn/exercises/017-add-border-to-array/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/017-add-border-to-array/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/017-add-border-to-array/solution.hide.py","name":"solution.hide.py","hidden":true},{"path":".learn/exercises/017-add-border-to-array/test.py","name":"test.py","hidden":true}],"ai_interactions":[],"compilations":[{"stderr":"","stdout":"W1sxLiAxLiAxLl0KIFsxLiAwLiAxLl0KIFsxLiAxLiAxLl1dCg==","signal":null,"memoryUsage":524288,"cpuUsage":5726,"starting_at":1742488027598,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgojIGFyciA9IG5wLmFycmF5KFsxLDIsMCwwLDQsMF0pCiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKQojIHByaW50KGluZGV4ZXMpCgojIGFyciA9IG5wLmV5ZSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tYXgoYXJyKSkKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tZWFuKGFycikpCgojIGFyciA9IG5wLm9uZXMoKDUsNSkpCiMgYXJyWzE6LTEsIDE6LTFdID0gMAojIHByaW50KGFycikKCmFyciA9IG5wLm9uZXMoKDMsMykpCmFyclsxOi0xLCAxOi0xXSA9IDAKcHJpbnQoYXJyKQo=","ended_at":1742488027751,"exit_code":0},{"stderr":"","stdout":"W1sxLiAxLiAxLl0KIFsxLiAxLiAxLl0KIFsxLiAxLiAxLl1dCg==","signal":null,"memoryUsage":393216,"cpuUsage":7019,"starting_at":1742488047309,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgojIGFyciA9IG5wLmFycmF5KFsxLDIsMCwwLDQsMF0pCiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKQojIHByaW50KGluZGV4ZXMpCgojIGFyciA9IG5wLmV5ZSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tYXgoYXJyKSkKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tZWFuKGFycikpCgojIGFyciA9IG5wLm9uZXMoKDUsNSkpCiMgYXJyWzE6LTEsIDE6LTFdID0gMAojIHByaW50KGFycikKCmFyciA9IG5wLm9uZXMoKDMsMykpCmFyclswOi0wLCAwOi0wXSA9IDAKcHJpbnQoYXJyKQo=","ended_at":1742488047510,"exit_code":0},{"stderr":"","stdout":"W1sxLiAxLiAxLl0KIFsxLiAxLiAxLl0KIFsxLiAxLiAxLl1dCg==","signal":null,"memoryUsage":524288,"cpuUsage":6604,"starting_at":1742488076713,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgojIGFyciA9IG5wLmFycmF5KFsxLDIsMCwwLDQsMF0pCiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKQojIHByaW50KGluZGV4ZXMpCgojIGFyciA9IG5wLmV5ZSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tYXgoYXJyKSkKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tZWFuKGFycikpCgojIGFyciA9IG5wLm9uZXMoKDUsNSkpCiMgYXJyWzE6LTEsIDE6LTFdID0gMAojIHByaW50KGFycikKCmFyciA9IG5wLm9uZXMoKDMsMykpCmFyclstMToxLCAtMToxXSA9IDAKcHJpbnQoYXJyKQo=","ended_at":1742488076869,"exit_code":0},{"stderr":"","stdout":"W1sxLiAxLiAxLl0KIFsxLiAxLiAxLl0KIFsxLiAxLiAxLl1dCg==","signal":null,"memoryUsage":524288,"cpuUsage":6716,"starting_at":1742488108718,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgojIGFyciA9IG5wLmFycmF5KFsxLDIsMCwwLDQsMF0pCiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKQojIHByaW50KGluZGV4ZXMpCgojIGFyciA9IG5wLmV5ZSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tYXgoYXJyKSkKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tZWFuKGFycikpCgojIGFyciA9IG5wLm9uZXMoKDUsNSkpCiMgYXJyWzE6LTEsIDE6LTFdID0gMAojIHByaW50KGFycikKCmFyciA9IG5wLm9uZXMoKDMsMykpCmFyclstMToxLCAtMToxXSA9IDEKcHJpbnQoYXJyKQo=","ended_at":1742488108875,"exit_code":0},{"stderr":"","stdout":"W1sxLiAxLiAxLl0KIFsxLiAwLiAxLl0KIFsxLiAxLiAxLl1dCg==","signal":null,"memoryUsage":262144,"cpuUsage":4590,"starting_at":1742488137967,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgojIGFyciA9IG5wLmFycmF5KFsxLDIsMCwwLDQsMF0pCiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKQojIHByaW50KGluZGV4ZXMpCgojIGFyciA9IG5wLmV5ZSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tYXgoYXJyKSkKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tZWFuKGFycikpCgojIGFyciA9IG5wLm9uZXMoKDUsNSkpCiMgYXJyWzE6LTEsIDE6LTFdID0gMAojIHByaW50KGFycikKCmFyciA9IG5wLm9uZXMoKDMsMykpCmFyclsxOi0xLCAxOi0xXSA9IDAKcHJpbnQoYXJyKQo=","ended_at":1742488138156,"exit_code":0},{"stderr":"","stdout":"W1swLiAwLiAwLiAwLiAwLl0KIFswLiAxLiAxLiAxLiAwLl0KIFswLiAxLiAxLiAxLiAwLl0KIFswLiAxLiAxLiAxLiAwLl0KIFswLiAwLiAwLiAwLiAwLl1dCg==","signal":null,"memoryUsage":524288,"cpuUsage":7413,"starting_at":1742488525073,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgojIGFyciA9IG5wLmFycmF5KFsxLDIsMCwwLDQsMF0pCiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKQojIHByaW50KGluZGV4ZXMpCgojIGFyciA9IG5wLmV5ZSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tYXgoYXJyKSkKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tZWFuKGFycikpCgojIGFyciA9IG5wLm9uZXMoKDUsNSkpCiMgYXJyWzE6LTEsIDE6LTFdID0gMAojIHByaW50KGFycikKCmFyciA9IG5wLm9uZXMoKDMsMykpCmFycl9yZWxsZW5vID0gbnAucGFkKGFyciwgcGFkX3dpZHRoPTEsIG1vZGU9ImNvbnN0YW50IikKcHJpbnQoYXJyX3JlbGxlbm8pCg==","ended_at":1742488525226,"exit_code":0}],"tests":[{"starting_at":1742488532076,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgojIGFyciA9IG5wLmFycmF5KFsxLDIsMCwwLDQsMF0pCiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKQojIHByaW50KGluZGV4ZXMpCgojIGFyciA9IG5wLmV5ZSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tYXgoYXJyKSkKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tZWFuKGFycikpCgojIGFyciA9IG5wLm9uZXMoKDUsNSkpCiMgYXJyWzE6LTEsIDE6LTFdID0gMAojIHByaW50KGFycikKCmFyciA9IG5wLm9uZXMoKDMsMykpCmFycl9yZWxsZW5vID0gbnAucGFkKGFyciwgcGFkX3dpZHRoPTEsIG1vZGU9ImNvbnN0YW50IikKcHJpbnQoYXJyX3JlbGxlbm8pCg==","ended_at":1742488532431,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvbnVtcHktdHV0b3JpYWwtZXhlcmNpc2VzCnBsdWdpbnM6IHRlc3Rkb3gtMy4xLjAKY29sbGVjdGVkIDIgaXRlbXMKCi5sZWFybi9leGVyY2lzZXMvMDE3LWFkZC1ib3JkZXItdG8tYXJyYXkvdGVzdC5weSAbWzMybS4bWzBtG1szMm0uG1swbRtbMzJtICAgICAgICAgICAgICAgICAgICAgIFsxMDAlXRtbMG0KChtbMzJtPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IBtbMzJtG1sxbTIgcGFzc2VkG1swbRtbMzJtIGluIDAuMDlzG1swbRtbMzJtID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0bWzBtCg==","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1742487974666,"completed_at":1742488532432},{"slug":"018-result-of-expressions","position":18,"files":[{"path":".learn/exercises/018-result-of-expressions/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/018-result-of-expressions/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/018-result-of-expressions/solution.hide.py","name":"solution.hide.py","hidden":true},{"path":".learn/exercises/018-result-of-expressions/test.py","name":"test.py","hidden":true}],"ai_interactions":[{"starting_at":1742488612550,"student_message":"np.nan que es","context":"---\n      # File name: README.es.md. Content: \n      `<!-- hide -->\n# Welcome to Numpy exercise tutorial\n\nPor <a href=\"https://twitter.com/alesanchezr\">@alesanchezr</a> y <a href=\"https://github.com/4geeksacademy/numpy-tutorial-exercises/graphs/contributors\">otros contibuyentes</a> en <a href=\"http://4geeksacademy.com/\">4Geeks Academy.</a><a href=\"https://www.4geeksacademy.com\"><img height=\"280\" align=\"right\" src=\"https://github.com/4geeksacademy/numpy-tutorial-exercises/blob/master/.learn/assets/numpy-badge.png?raw=true\"></a>\n<!-- endhide -->\n\nNumPy (y Pandas) son las librerías #1 para Machine Learning, no hay manera que puedas realizar cualquier cosa sin ellas.\n\nEste tutorial interactivo te va a ayudar a familiarizarte con ello, a dominar las funcionalidades más usadas y a ayudarte a limpiar tu primer set de datos. \n\n- Documentación de NumPy.\n- Vectores.\n- Matrices.\n- Valores aleatorios, Media.\n\n> Nota: Todo el tutorial es completamente 👆 interactivo, ✅ con corrección automática y 📹 videos tutoriales.\n\nEstos ejercicios fueron construidos en colaboración. ¡Te necesitamos! Si consigues algún error o falta de ortografía, por favor ayúdanos y repórtalos.\n\n<!-- hide -->\n## Instalación en un clic (recomendado)\n\nPuedes empezar estos ejercicios en pocos segundos haciendo clic en: [Abrir en Codespaces](https://codespaces.new/?repo=4GeeksAcademy/numpy-tutorial-exercises) (recomendado) o [Abrir en Gitpod](https://gitpod.io#https://github.com/4GeeksAcademy/numpy-tutorial-exercises.git).\n\n> Una vez ya tengas abierto VSCode, los ejercicios de LearnPack deberían empezar automáticamente; si esto no sucede puedes intentar empezar los ejercicios escribiendo este comando en tu terminal: `$ learnpack start`\n\n\n## Instalación local\n\n1. Clona o descarga este repositorio.\n\n2. Asegúrate de tener [LearnPack](https://learnpack.co) instalado, una versión de node.js 14 o superior y una versión de Python 3 o superior. Este es el comando para instalar LearnPack:\n\n```bash\n$ npm i @learnpack/learnpack -g && learnpack plugins:install @learnpack/python\n```\n\n3. Empieza el tutorial/ejercicios corriendo estos comandos en el mismo nivel donde se encuentra tu archivo learn.json:\n\n```bash\n$ pip3 install pytest==6.2.5 mock pytest-testdox toml numpy==1.24.2 pandas\n$ learnpack start\n```\n\n> Nota: Estos ejercicios tienen calificación automática. Los tests son muy rígidos y estrictos, mi recomendación es que no prestes demasiada atención a los tests y los uses solo como una sugerencia o podrías frustrarte.\n\n<!-- endhide -->\n\n## Colaboradores\n \nGracias a estas personas maravillosas ([emoji key](https://github.com/kentcdodds/all-contributors#emoji-key)):\n\n1. [Alejandro Sanchez (alesanchezr)](https://github.com/alesanchezr), contribución: (programador) 💻, (idea) 🤔, (build-tests) ⚠️, (pull-request-review) 👀, (build-tutorial) ✅, (documentación) 📖\n\n2. [Paolo (plucodev)](https://github.com/plucodev), contribución: (bug reports) 🐛, (programador) 💻, (traducción) 🌎\n\n3. [Marco Gómez (marcogonzalo)](https://github.com/marcogonzalo), contribution: (bug reports) 🐛, (traducción) 🌎\n\nEste proyecto sigue la especificación [all-contributors](https://github.com/kentcdodds/all-contributors).\n\n¡Todas las contribuciones son bienvenidas!\n`\n      ---\n      \n---\n      # File name: README.md. Content: \n      `<!-- hide -->\n# Welcome to Numpy exercise tutorial\n\nBy <a href=\"https://twitter.com/alesanchezr\">@alesanchezr</a> and <a href=\"https://github.com/4geeksacademy/numpy-tutorial-exercises/graphs/contributors\">other contributors</a> at <a href=\"http://4geeksacademy.com/\">4Geeks Academy.</a><a href=\"https://www.4geeksacademy.com\"><img height=\"280\" align=\"right\" src=\"https://github.com/4geeksacademy/numpy-tutorial-exercises/blob/master/.learn/assets/numpy-badge.png?raw=true\"></a>\n<!-- endhide -->\n\nNumPy (and Pandas) are the #1 libraries for Machine Learning, there is no way you can do anything without them. \n\nThis interactive tutorial will help you become familiar with it, master the most used functionalities, and help you clean up your first datasets.\n\n- NumPy documentation.\n- Vectors.\n- Matrixes.\n- Random, Mean Values.\n\n> Note: The entire tutorial is 👆 interactive, ✅ auto-graded and with 📹 video tutorials.\n\nThese exercises were built in collaboration; we need you! If you find any bugs or misspellings, please contribute and report them.\n\n<!-- hide -->\n\n## One click installation (recommended):\n\nYou can open these exercises in just a few seconds by clicking: [Open in Codespaces](https://codespaces.new/?repo=4GeeksAcademy/numpy-tutorial-exercises) (recommended) or [Open in Gitpod](https://gitpod.io#https://github.com/4GeeksAcademy/numpy-tutorial-exercises.git).\n\n> Once you have VSCode open the LearnPack exercises should start automatically. If exercises don't run automatically you can try typing on your terminal: `$ learnpack start`\n\n\n\n## Local Installation\n\n1. Clone or download this repository.\n\n2. Make sure you have [LearnPack](https://learnpack.co) installed, node.js version 14+, and Python version 3+. This is the command to install LearnPack:\n\n```bash\n$ npm i @learnpack/learnpack -g && learnpack plugins:install @learnpack/python\n```\n\n3. Start the tutorial/exercises by running the following commands at the same level where your learn.json file is:\n\n```bash\n$ pip3 install pytest==6.2.5 mock pytest-testdox toml numpy==1.24.2 pandas\n$ learnpack start\n```\n\n> Note: The exercises have automatic grading, but it's very rigid and strict, my recommendation is to not take the tests too serious and use them only as a suggestion, or you may get frustrated.\n\n<!-- endhide -->\n\n\n## Contributors\n\nThanks to these wonderful people ([emoji key](https://github.com/kentcdodds/all-contributors#emoji-key)):\n\n1. [Alejandro Sanchez (alesanchezr)](https://github.com/alesanchezr), contribution: (coder) 💻, (idea) 🤔, (build-tests) ⚠️, (pull-request-review) 👀, (build-tutorial) ✅, (documentation) 📖\n\n2. [Paolo (plucodev)](https://github.com/plucodev), contribution: (bug reports) 🐛, (coder) 💻, (translation) 🌎\n\n3. [Ricardo Rodriguez (RickRodriguez8080)](https://github.com/RickRodriguez8080) contribution: (build-tutorial) ✅, (documentation) 📖\n\nThis project follows the [all-contributors](https://github.com/kentcdodds/all-contributors) specifications. \n\nContributions of any kind are welcome!\n`\n      ---\n      \n---\n      # File name: solution.hide.py. Content: \n      `{\"message\":\"File not found: + undefined\",\"status\":500,\"type\":null}`\n      ---\n      \n---\n      # File name: test.py. Content: \n      `import pytest\nimport os\nimport numpy\n\n@pytest.mark.it('You should print the expected output')\ndef test_print(capsys):\n    import app\n    captured = capsys.readouterr()\n    assert captured.out == 'nan\\nFalse\\nFalse\\nnan\\nTrue\\nFalse\\n'\n`\n      ---\n      \n      ---This is the current exercise instructions:\n      # `018` Result of Expressions\n\n## 📝 Instrucciones:\n\n1. Chequea el valor de las siguientes expresiones:\n\n```python\n0 * np.nan\nnp.nan == np.nan\nnp.inf > np.nan\nnp.nan - np.nan\nnp.nan in set([np.nan])\n0.3 == 3 * 0.1\n```\n\n## 💡 Pista:\n\n+ Imprime el valor de las expresiones en la consola.\n      ---\n      \n      <MANDATORY FOR AI: The user's set up the application in \"es\" language, give your feedback in \"es\" language, please.>\n\n      \nSome tests didn't passed, these are the tests logs: ============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-7.3.1, pluggy-1.0.0\nrootdir: /workspaces/numpy-tutorial-exercises\nplugins: testdox-3.1.0\ncollected 1 item\n\n.learn/exercises/018-result-of-expressions/test.py F                     [100%]\n\n=================================== FAILURES ===================================\n__________________________________ test_print __________________________________\n\ncapsys = <_pytest.capture.CaptureFixture object at 0x7b4fd8d55b10>\n\n    @pytest.mark.it('You should print the expected output')\n    def test_print(capsys):\n        import app\n        captured = capsys.readouterr()\n>       assert captured.out == 'nan\\nFalse\\nFalse\\nnan\\nTrue\\nFalse\\n'\nE       AssertionError: assert '' == 'nan\\nFalse\\n...True\\nFalse\\n'\nE         - nan\nE         - False\nE         - False\nE         - nan\nE         - True\nE         - False\n\n.learn/exercises/018-result-of-expressions/test.py:9: AssertionError\n=========================== short test summary info ============================\nFAILED .learn/exercises/018-result-of-expressions/test.py::test_print - AssertionError: assert '' == 'nan\\nFalse\\n...True\\nFalse\\n'\n============================== 1 failed in 0.11s ===============================\n,\n\n   \n          Your code must to comply with the following tests: \n\n     x (fail) 0. You should print the expected output \n\n","ending_at":1742488618332,"ai_response":"`np.nan` es un valor especial en NumPy que representa \"Not a Number\" (No es un número). Se utiliza para indicar valores faltantes o indefinidos en cálculos numéricos. Por ejemplo, si intentas realizar una operación matemática que no tiene sentido, como dividir cero entre cero, el resultado sería `np.nan`.\n\nEs importante entender cómo se comporta `np.nan` en las comparaciones y operaciones. Por ejemplo, cualquier comparación que involucre `np.nan` (como `np.nan == np.nan`) devolverá `False`, ya que `np.nan` no es considerado igual a sí mismo.\n\n¿Te gustaría que revisemos cómo utilizar `np.nan` en las expresiones que tienes que evaluar?"},{"starting_at":1742488692168,"student_message":"si, me gusraria que revisaras","context":"---\n      # File name: README.es.md. Content: \n      `<!-- hide -->\n# Welcome to Numpy exercise tutorial\n\nPor <a href=\"https://twitter.com/alesanchezr\">@alesanchezr</a> y <a href=\"https://github.com/4geeksacademy/numpy-tutorial-exercises/graphs/contributors\">otros contibuyentes</a> en <a href=\"http://4geeksacademy.com/\">4Geeks Academy.</a><a href=\"https://www.4geeksacademy.com\"><img height=\"280\" align=\"right\" src=\"https://github.com/4geeksacademy/numpy-tutorial-exercises/blob/master/.learn/assets/numpy-badge.png?raw=true\"></a>\n<!-- endhide -->\n\nNumPy (y Pandas) son las librerías #1 para Machine Learning, no hay manera que puedas realizar cualquier cosa sin ellas.\n\nEste tutorial interactivo te va a ayudar a familiarizarte con ello, a dominar las funcionalidades más usadas y a ayudarte a limpiar tu primer set de datos. \n\n- Documentación de NumPy.\n- Vectores.\n- Matrices.\n- Valores aleatorios, Media.\n\n> Nota: Todo el tutorial es completamente 👆 interactivo, ✅ con corrección automática y 📹 videos tutoriales.\n\nEstos ejercicios fueron construidos en colaboración. ¡Te necesitamos! Si consigues algún error o falta de ortografía, por favor ayúdanos y repórtalos.\n\n<!-- hide -->\n## Instalación en un clic (recomendado)\n\nPuedes empezar estos ejercicios en pocos segundos haciendo clic en: [Abrir en Codespaces](https://codespaces.new/?repo=4GeeksAcademy/numpy-tutorial-exercises) (recomendado) o [Abrir en Gitpod](https://gitpod.io#https://github.com/4GeeksAcademy/numpy-tutorial-exercises.git).\n\n> Una vez ya tengas abierto VSCode, los ejercicios de LearnPack deberían empezar automáticamente; si esto no sucede puedes intentar empezar los ejercicios escribiendo este comando en tu terminal: `$ learnpack start`\n\n\n## Instalación local\n\n1. Clona o descarga este repositorio.\n\n2. Asegúrate de tener [LearnPack](https://learnpack.co) instalado, una versión de node.js 14 o superior y una versión de Python 3 o superior. Este es el comando para instalar LearnPack:\n\n```bash\n$ npm i @learnpack/learnpack -g && learnpack plugins:install @learnpack/python\n```\n\n3. Empieza el tutorial/ejercicios corriendo estos comandos en el mismo nivel donde se encuentra tu archivo learn.json:\n\n```bash\n$ pip3 install pytest==6.2.5 mock pytest-testdox toml numpy==1.24.2 pandas\n$ learnpack start\n```\n\n> Nota: Estos ejercicios tienen calificación automática. Los tests son muy rígidos y estrictos, mi recomendación es que no prestes demasiada atención a los tests y los uses solo como una sugerencia o podrías frustrarte.\n\n<!-- endhide -->\n\n## Colaboradores\n \nGracias a estas personas maravillosas ([emoji key](https://github.com/kentcdodds/all-contributors#emoji-key)):\n\n1. [Alejandro Sanchez (alesanchezr)](https://github.com/alesanchezr), contribución: (programador) 💻, (idea) 🤔, (build-tests) ⚠️, (pull-request-review) 👀, (build-tutorial) ✅, (documentación) 📖\n\n2. [Paolo (plucodev)](https://github.com/plucodev), contribución: (bug reports) 🐛, (programador) 💻, (traducción) 🌎\n\n3. [Marco Gómez (marcogonzalo)](https://github.com/marcogonzalo), contribution: (bug reports) 🐛, (traducción) 🌎\n\nEste proyecto sigue la especificación [all-contributors](https://github.com/kentcdodds/all-contributors).\n\n¡Todas las contribuciones son bienvenidas!\n`\n      ---\n      \n---\n      # File name: README.md. Content: \n      `<!-- hide -->\n# Welcome to Numpy exercise tutorial\n\nBy <a href=\"https://twitter.com/alesanchezr\">@alesanchezr</a> and <a href=\"https://github.com/4geeksacademy/numpy-tutorial-exercises/graphs/contributors\">other contributors</a> at <a href=\"http://4geeksacademy.com/\">4Geeks Academy.</a><a href=\"https://www.4geeksacademy.com\"><img height=\"280\" align=\"right\" src=\"https://github.com/4geeksacademy/numpy-tutorial-exercises/blob/master/.learn/assets/numpy-badge.png?raw=true\"></a>\n<!-- endhide -->\n\nNumPy (and Pandas) are the #1 libraries for Machine Learning, there is no way you can do anything without them. \n\nThis interactive tutorial will help you become familiar with it, master the most used functionalities, and help you clean up your first datasets.\n\n- NumPy documentation.\n- Vectors.\n- Matrixes.\n- Random, Mean Values.\n\n> Note: The entire tutorial is 👆 interactive, ✅ auto-graded and with 📹 video tutorials.\n\nThese exercises were built in collaboration; we need you! If you find any bugs or misspellings, please contribute and report them.\n\n<!-- hide -->\n\n## One click installation (recommended):\n\nYou can open these exercises in just a few seconds by clicking: [Open in Codespaces](https://codespaces.new/?repo=4GeeksAcademy/numpy-tutorial-exercises) (recommended) or [Open in Gitpod](https://gitpod.io#https://github.com/4GeeksAcademy/numpy-tutorial-exercises.git).\n\n> Once you have VSCode open the LearnPack exercises should start automatically. If exercises don't run automatically you can try typing on your terminal: `$ learnpack start`\n\n\n\n## Local Installation\n\n1. Clone or download this repository.\n\n2. Make sure you have [LearnPack](https://learnpack.co) installed, node.js version 14+, and Python version 3+. This is the command to install LearnPack:\n\n```bash\n$ npm i @learnpack/learnpack -g && learnpack plugins:install @learnpack/python\n```\n\n3. Start the tutorial/exercises by running the following commands at the same level where your learn.json file is:\n\n```bash\n$ pip3 install pytest==6.2.5 mock pytest-testdox toml numpy==1.24.2 pandas\n$ learnpack start\n```\n\n> Note: The exercises have automatic grading, but it's very rigid and strict, my recommendation is to not take the tests too serious and use them only as a suggestion, or you may get frustrated.\n\n<!-- endhide -->\n\n\n## Contributors\n\nThanks to these wonderful people ([emoji key](https://github.com/kentcdodds/all-contributors#emoji-key)):\n\n1. [Alejandro Sanchez (alesanchezr)](https://github.com/alesanchezr), contribution: (coder) 💻, (idea) 🤔, (build-tests) ⚠️, (pull-request-review) 👀, (build-tutorial) ✅, (documentation) 📖\n\n2. [Paolo (plucodev)](https://github.com/plucodev), contribution: (bug reports) 🐛, (coder) 💻, (translation) 🌎\n\n3. [Ricardo Rodriguez (RickRodriguez8080)](https://github.com/RickRodriguez8080) contribution: (build-tutorial) ✅, (documentation) 📖\n\nThis project follows the [all-contributors](https://github.com/kentcdodds/all-contributors) specifications. \n\nContributions of any kind are welcome!\n`\n      ---\n      \n---\n      # File name: solution.hide.py. Content: \n      `{\"message\":\"File not found: + undefined\",\"status\":500,\"type\":null}`\n      ---\n      \n---\n      # File name: test.py. Content: \n      `import pytest\nimport os\nimport numpy\n\n@pytest.mark.it('You should print the expected output')\ndef test_print(capsys):\n    import app\n    captured = capsys.readouterr()\n    assert captured.out == 'nan\\nFalse\\nFalse\\nnan\\nTrue\\nFalse\\n'\n`\n      ---\n      \n      ---This is the current exercise instructions:\n      # `018` Result of Expressions\n\n## 📝 Instrucciones:\n\n1. Chequea el valor de las siguientes expresiones:\n\n```python\n0 * np.nan\nnp.nan == np.nan\nnp.inf > np.nan\nnp.nan - np.nan\nnp.nan in set([np.nan])\n0.3 == 3 * 0.1\n```\n\n## 💡 Pista:\n\n+ Imprime el valor de las expresiones en la consola.\n      ---\n      \n      <MANDATORY FOR AI: The user's set up the application in \"es\" language, give your feedback in \"es\" language, please.>\n\n      ","ending_at":1742488697805,"ai_response":"Perfecto, vamos a revisar las expresiones que necesitas evaluar. Aquí están las expresiones que debes comprobar:\n\n```python\n0 * np.nan\nnp.nan == np.nan\nnp.inf > np.nan\nnp.nan - np.nan\nnp.nan in set([np.nan])\n0.3 == 3 * 0.1\n```\n\nTe sugiero que imprimas el resultado de cada expresión en la consola. ¿Te gustaría que te guíe sobre cómo hacerlo?"},{"starting_at":1742488726043,"student_message":"si guiame, por favor","context":"---\n      # File name: README.es.md. Content: \n      `<!-- hide -->\n# Welcome to Numpy exercise tutorial\n\nPor <a href=\"https://twitter.com/alesanchezr\">@alesanchezr</a> y <a href=\"https://github.com/4geeksacademy/numpy-tutorial-exercises/graphs/contributors\">otros contibuyentes</a> en <a href=\"http://4geeksacademy.com/\">4Geeks Academy.</a><a href=\"https://www.4geeksacademy.com\"><img height=\"280\" align=\"right\" src=\"https://github.com/4geeksacademy/numpy-tutorial-exercises/blob/master/.learn/assets/numpy-badge.png?raw=true\"></a>\n<!-- endhide -->\n\nNumPy (y Pandas) son las librerías #1 para Machine Learning, no hay manera que puedas realizar cualquier cosa sin ellas.\n\nEste tutorial interactivo te va a ayudar a familiarizarte con ello, a dominar las funcionalidades más usadas y a ayudarte a limpiar tu primer set de datos. \n\n- Documentación de NumPy.\n- Vectores.\n- Matrices.\n- Valores aleatorios, Media.\n\n> Nota: Todo el tutorial es completamente 👆 interactivo, ✅ con corrección automática y 📹 videos tutoriales.\n\nEstos ejercicios fueron construidos en colaboración. ¡Te necesitamos! Si consigues algún error o falta de ortografía, por favor ayúdanos y repórtalos.\n\n<!-- hide -->\n## Instalación en un clic (recomendado)\n\nPuedes empezar estos ejercicios en pocos segundos haciendo clic en: [Abrir en Codespaces](https://codespaces.new/?repo=4GeeksAcademy/numpy-tutorial-exercises) (recomendado) o [Abrir en Gitpod](https://gitpod.io#https://github.com/4GeeksAcademy/numpy-tutorial-exercises.git).\n\n> Una vez ya tengas abierto VSCode, los ejercicios de LearnPack deberían empezar automáticamente; si esto no sucede puedes intentar empezar los ejercicios escribiendo este comando en tu terminal: `$ learnpack start`\n\n\n## Instalación local\n\n1. Clona o descarga este repositorio.\n\n2. Asegúrate de tener [LearnPack](https://learnpack.co) instalado, una versión de node.js 14 o superior y una versión de Python 3 o superior. Este es el comando para instalar LearnPack:\n\n```bash\n$ npm i @learnpack/learnpack -g && learnpack plugins:install @learnpack/python\n```\n\n3. Empieza el tutorial/ejercicios corriendo estos comandos en el mismo nivel donde se encuentra tu archivo learn.json:\n\n```bash\n$ pip3 install pytest==6.2.5 mock pytest-testdox toml numpy==1.24.2 pandas\n$ learnpack start\n```\n\n> Nota: Estos ejercicios tienen calificación automática. Los tests son muy rígidos y estrictos, mi recomendación es que no prestes demasiada atención a los tests y los uses solo como una sugerencia o podrías frustrarte.\n\n<!-- endhide -->\n\n## Colaboradores\n \nGracias a estas personas maravillosas ([emoji key](https://github.com/kentcdodds/all-contributors#emoji-key)):\n\n1. [Alejandro Sanchez (alesanchezr)](https://github.com/alesanchezr), contribución: (programador) 💻, (idea) 🤔, (build-tests) ⚠️, (pull-request-review) 👀, (build-tutorial) ✅, (documentación) 📖\n\n2. [Paolo (plucodev)](https://github.com/plucodev), contribución: (bug reports) 🐛, (programador) 💻, (traducción) 🌎\n\n3. [Marco Gómez (marcogonzalo)](https://github.com/marcogonzalo), contribution: (bug reports) 🐛, (traducción) 🌎\n\nEste proyecto sigue la especificación [all-contributors](https://github.com/kentcdodds/all-contributors).\n\n¡Todas las contribuciones son bienvenidas!\n`\n      ---\n      \n---\n      # File name: README.md. Content: \n      `<!-- hide -->\n# Welcome to Numpy exercise tutorial\n\nBy <a href=\"https://twitter.com/alesanchezr\">@alesanchezr</a> and <a href=\"https://github.com/4geeksacademy/numpy-tutorial-exercises/graphs/contributors\">other contributors</a> at <a href=\"http://4geeksacademy.com/\">4Geeks Academy.</a><a href=\"https://www.4geeksacademy.com\"><img height=\"280\" align=\"right\" src=\"https://github.com/4geeksacademy/numpy-tutorial-exercises/blob/master/.learn/assets/numpy-badge.png?raw=true\"></a>\n<!-- endhide -->\n\nNumPy (and Pandas) are the #1 libraries for Machine Learning, there is no way you can do anything without them. \n\nThis interactive tutorial will help you become familiar with it, master the most used functionalities, and help you clean up your first datasets.\n\n- NumPy documentation.\n- Vectors.\n- Matrixes.\n- Random, Mean Values.\n\n> Note: The entire tutorial is 👆 interactive, ✅ auto-graded and with 📹 video tutorials.\n\nThese exercises were built in collaboration; we need you! If you find any bugs or misspellings, please contribute and report them.\n\n<!-- hide -->\n\n## One click installation (recommended):\n\nYou can open these exercises in just a few seconds by clicking: [Open in Codespaces](https://codespaces.new/?repo=4GeeksAcademy/numpy-tutorial-exercises) (recommended) or [Open in Gitpod](https://gitpod.io#https://github.com/4GeeksAcademy/numpy-tutorial-exercises.git).\n\n> Once you have VSCode open the LearnPack exercises should start automatically. If exercises don't run automatically you can try typing on your terminal: `$ learnpack start`\n\n\n\n## Local Installation\n\n1. Clone or download this repository.\n\n2. Make sure you have [LearnPack](https://learnpack.co) installed, node.js version 14+, and Python version 3+. This is the command to install LearnPack:\n\n```bash\n$ npm i @learnpack/learnpack -g && learnpack plugins:install @learnpack/python\n```\n\n3. Start the tutorial/exercises by running the following commands at the same level where your learn.json file is:\n\n```bash\n$ pip3 install pytest==6.2.5 mock pytest-testdox toml numpy==1.24.2 pandas\n$ learnpack start\n```\n\n> Note: The exercises have automatic grading, but it's very rigid and strict, my recommendation is to not take the tests too serious and use them only as a suggestion, or you may get frustrated.\n\n<!-- endhide -->\n\n\n## Contributors\n\nThanks to these wonderful people ([emoji key](https://github.com/kentcdodds/all-contributors#emoji-key)):\n\n1. [Alejandro Sanchez (alesanchezr)](https://github.com/alesanchezr), contribution: (coder) 💻, (idea) 🤔, (build-tests) ⚠️, (pull-request-review) 👀, (build-tutorial) ✅, (documentation) 📖\n\n2. [Paolo (plucodev)](https://github.com/plucodev), contribution: (bug reports) 🐛, (coder) 💻, (translation) 🌎\n\n3. [Ricardo Rodriguez (RickRodriguez8080)](https://github.com/RickRodriguez8080) contribution: (build-tutorial) ✅, (documentation) 📖\n\nThis project follows the [all-contributors](https://github.com/kentcdodds/all-contributors) specifications. \n\nContributions of any kind are welcome!\n`\n      ---\n      \n---\n      # File name: solution.hide.py. Content: \n      `{\"message\":\"File not found: + undefined\",\"status\":500,\"type\":null}`\n      ---\n      \n---\n      # File name: test.py. Content: \n      `import pytest\nimport os\nimport numpy\n\n@pytest.mark.it('You should print the expected output')\ndef test_print(capsys):\n    import app\n    captured = capsys.readouterr()\n    assert captured.out == 'nan\\nFalse\\nFalse\\nnan\\nTrue\\nFalse\\n'\n`\n      ---\n      \n      ---This is the current exercise instructions:\n      # `018` Result of Expressions\n\n## 📝 Instrucciones:\n\n1. Chequea el valor de las siguientes expresiones:\n\n```python\n0 * np.nan\nnp.nan == np.nan\nnp.inf > np.nan\nnp.nan - np.nan\nnp.nan in set([np.nan])\n0.3 == 3 * 0.1\n```\n\n## 💡 Pista:\n\n+ Imprime el valor de las expresiones en la consola.\n      ---\n      \n      <MANDATORY FOR AI: The user's set up the application in \"es\" language, give your feedback in \"es\" language, please.>\n\n      ","ending_at":1742488738730,"ai_response":"Claro, vamos a imprimir el resultado de cada expresión en la consola. Para hacerlo, puedes usar la función `print()` de Python. Aquí tienes un ejemplo de cómo podrías estructurar tu código:\n\n```python\nimport numpy as np\n\n# Evaluar las expresiones y imprimir los resultados\nprint(0 * np.nan)          # Resultado de la primera expresión\nprint(np.nan == np.nan)    # Resultado de la segunda expresión\nprint(np.inf > np.nan)     # Resultado de la tercera expresión\nprint(np.nan - np.nan)     # Resultado de la cuarta expresión\nprint(np.nan in set([np.nan]))  # Resultado de la quinta expresión\nprint(0.3 == 3 * 0.1)      # Resultado de la sexta expresión\n```\n\nAsegúrate de tener importada la librería `numpy` al inicio de tu código. Luego, ejecuta el código y verifica los resultados que se imprimen en la consola. ¿Te gustaría que revisemos algún resultado en particular después de que lo ejecutes?"}],"compilations":[{"stderr":"","stdout":"bmFuCkZhbHNlCkZhbHNlCm5hbgpUcnVlCkZhbHNlCg==","signal":null,"memoryUsage":524288,"cpuUsage":7169,"starting_at":1742488908321,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgojIGFyciA9IG5wLmFycmF5KFsxLDIsMCwwLDQsMF0pCiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKQojIHByaW50KGluZGV4ZXMpCgojIGFyciA9IG5wLmV5ZSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tYXgoYXJyKSkKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tZWFuKGFycikpCgojIGFyciA9IG5wLm9uZXMoKDUsNSkpCiMgYXJyWzE6LTEsIDE6LTFdID0gMAojIHByaW50KGFycikKCiMgYXJyID0gbnAub25lcygoMywzKSkKIyBhcnJfcmVsbGVubyA9IG5wLnBhZChhcnIsIHBhZF93aWR0aD0xLCBtb2RlPSJjb25zdGFudCIpCiMgcHJpbnQoYXJyX3JlbGxlbm8pCgpwcmludCgwICogbnAubmFuKQpwcmludChucC5uYW4gPT0gbnAubmFuKQpwcmludChucC5pbmYgPiBucC5uYW4pCnByaW50KG5wLm5hbiAtIG5wLm5hbikKcHJpbnQobnAubmFuIGluIHNldChbbnAubmFuXSkpCnByaW50KDAuMyA9PSAzICogMC4xKQoK","ended_at":1742488908490,"exit_code":0}],"tests":[{"starting_at":1742488610699,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgojIGFyciA9IG5wLmFycmF5KFsxLDIsMCwwLDQsMF0pCiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKQojIHByaW50KGluZGV4ZXMpCgojIGFyciA9IG5wLmV5ZSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tYXgoYXJyKSkKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tZWFuKGFycikpCgojIGFyciA9IG5wLm9uZXMoKDUsNSkpCiMgYXJyWzE6LTEsIDE6LTFdID0gMAojIHByaW50KGFycikKCiMgYXJyID0gbnAub25lcygoMywzKSkKIyBhcnJfcmVsbGVubyA9IG5wLnBhZChhcnIsIHBhZF93aWR0aD0xLCBtb2RlPSJjb25zdGFudCIpCiMgcHJpbnQoYXJyX3JlbGxlbm8pCgoKCg==","ended_at":1742488611074,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvbnVtcHktdHV0b3JpYWwtZXhlcmNpc2VzCnBsdWdpbnM6IHRlc3Rkb3gtMy4xLjAKY29sbGVjdGVkIDEgaXRlbQoKLmxlYXJuL2V4ZXJjaXNlcy8wMTgtcmVzdWx0LW9mLWV4cHJlc3Npb25zL3Rlc3QucHkgG1szMW1GG1swbRtbMzFtICAgICAgICAgICAgICAgICAgICAgWzEwMCVdG1swbQoKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gRkFJTFVSRVMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KG1szMW0bWzFtX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXyB0ZXN0X3ByaW50IF9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18bWzBtCgpjYXBzeXMgPSA8X3B5dGVzdC5jYXB0dXJlLkNhcHR1cmVGaXh0dXJlIG9iamVjdCBhdCAweDdiNGZkOGQ1NWIxMD4KCiAgICBAcHl0ZXN0Lm1hcmsuaXQoJ1lvdSBzaG91bGQgcHJpbnQgdGhlIGV4cGVjdGVkIG91dHB1dCcpCiAgICBkZWYgdGVzdF9wcmludChjYXBzeXMpOgogICAgICAgIGltcG9ydCBhcHAKICAgICAgICBjYXB0dXJlZCA9IGNhcHN5cy5yZWFkb3V0ZXJyKCkKPiAgICAgICBhc3NlcnQgY2FwdHVyZWQub3V0ID09ICduYW5cbkZhbHNlXG5GYWxzZVxubmFuXG5UcnVlXG5GYWxzZVxuJwobWzFtG1szMW1FICAgICAgIEFzc2VydGlvbkVycm9yOiBhc3NlcnQgJycgPT0gJ25hblxuRmFsc2Vcbi4uLlRydWVcbkZhbHNlXG4nG1swbQobWzFtG1szMW1FICAgICAgICAgLSBuYW4bWzBtChtbMW0bWzMxbUUgICAgICAgICAtIEZhbHNlG1swbQobWzFtG1szMW1FICAgICAgICAgLSBGYWxzZRtbMG0KG1sxbRtbMzFtRSAgICAgICAgIC0gbmFuG1swbQobWzFtG1szMW1FICAgICAgICAgLSBUcnVlG1swbQobWzFtG1szMW1FICAgICAgICAgLSBGYWxzZRtbMG0KChtbMW0bWzMxbS5sZWFybi9leGVyY2lzZXMvMDE4LXJlc3VsdC1vZi1leHByZXNzaW9ucy90ZXN0LnB5G1swbTo5OiBBc3NlcnRpb25FcnJvcgobWzM2bRtbMW09PT09PT09PT09PT09PT09PT09PT09PT09PT0gc2hvcnQgdGVzdCBzdW1tYXJ5IGluZm8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PRtbMG0KG1szMW1GQUlMRUQbWzBtIC5sZWFybi9leGVyY2lzZXMvMDE4LXJlc3VsdC1vZi1leHByZXNzaW9ucy90ZXN0LnB5OjobWzFtdGVzdF9wcmludBtbMG0gLSBBc3NlcnRpb25FcnJvcjogYXNzZXJ0ICcnID09ICduYW5cbkZhbHNlXG4uLi5UcnVlXG5GYWxzZVxuJwobWzMxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAbWzMxbRtbMW0xIGZhaWxlZBtbMG0bWzMxbSBpbiAwLjExcxtbMG0bWzMxbSA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQo=","stderr":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvbnVtcHktdHV0b3JpYWwtZXhlcmNpc2VzCnBsdWdpbnM6IHRlc3Rkb3gtMy4xLjAKY29sbGVjdGVkIDEgaXRlbQoKLmxlYXJuL2V4ZXJjaXNlcy8wMTgtcmVzdWx0LW9mLWV4cHJlc3Npb25zL3Rlc3QucHkgG1szMW1GG1swbRtbMzFtICAgICAgICAgICAgICAgICAgICAgWzEwMCVdG1swbQoKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gRkFJTFVSRVMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KG1szMW0bWzFtX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXyB0ZXN0X3ByaW50IF9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18bWzBtCgpjYXBzeXMgPSA8X3B5dGVzdC5jYXB0dXJlLkNhcHR1cmVGaXh0dXJlIG9iamVjdCBhdCAweDdiNGZkOGQ1NWIxMD4KCiAgICBAcHl0ZXN0Lm1hcmsuaXQoJ1lvdSBzaG91bGQgcHJpbnQgdGhlIGV4cGVjdGVkIG91dHB1dCcpCiAgICBkZWYgdGVzdF9wcmludChjYXBzeXMpOgogICAgICAgIGltcG9ydCBhcHAKICAgICAgICBjYXB0dXJlZCA9IGNhcHN5cy5yZWFkb3V0ZXJyKCkKPiAgICAgICBhc3NlcnQgY2FwdHVyZWQub3V0ID09ICduYW5cbkZhbHNlXG5GYWxzZVxubmFuXG5UcnVlXG5GYWxzZVxuJwobWzFtG1szMW1FICAgICAgIEFzc2VydGlvbkVycm9yOiBhc3NlcnQgJycgPT0gJ25hblxuRmFsc2Vcbi4uLlRydWVcbkZhbHNlXG4nG1swbQobWzFtG1szMW1FICAgICAgICAgLSBuYW4bWzBtChtbMW0bWzMxbUUgICAgICAgICAtIEZhbHNlG1swbQobWzFtG1szMW1FICAgICAgICAgLSBGYWxzZRtbMG0KG1sxbRtbMzFtRSAgICAgICAgIC0gbmFuG1swbQobWzFtG1szMW1FICAgICAgICAgLSBUcnVlG1swbQobWzFtG1szMW1FICAgICAgICAgLSBGYWxzZRtbMG0KChtbMW0bWzMxbS5sZWFybi9leGVyY2lzZXMvMDE4LXJlc3VsdC1vZi1leHByZXNzaW9ucy90ZXN0LnB5G1swbTo5OiBBc3NlcnRpb25FcnJvcgobWzM2bRtbMW09PT09PT09PT09PT09PT09PT09PT09PT09PT0gc2hvcnQgdGVzdCBzdW1tYXJ5IGluZm8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PRtbMG0KG1szMW1GQUlMRUQbWzBtIC5sZWFybi9leGVyY2lzZXMvMDE4LXJlc3VsdC1vZi1leHByZXNzaW9ucy90ZXN0LnB5OjobWzFtdGVzdF9wcmludBtbMG0gLSBBc3NlcnRpb25FcnJvcjogYXNzZXJ0ICcnID09ICduYW5cbkZhbHNlXG4uLi5UcnVlXG5GYWxzZVxuJwobWzMxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAbWzMxbRtbMW0xIGZhaWxlZBtbMG0bWzMxbSBpbiAwLjExcxtbMG0bWzMxbSA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQosCgogICAKICAgICAgICAgIBtbMzFtWW91ciBjb2RlIG11c3QgdG8gY29tcGx5IHdpdGggdGhlIGZvbGxvd2luZyB0ZXN0czobWzM5bSAKCiAgICAgG1szMW0bWzFteCAoZmFpbCkbWzIybRtbMzltIDAuIBtbMzdtWW91IHNob3VsZCBwcmludCB0aGUgZXhwZWN0ZWQgb3V0cHV0G1szOW0gCgo=","exit_code":1},{"starting_at":1742488651131,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgojIGFyciA9IG5wLmFycmF5KFsxLDIsMCwwLDQsMF0pCiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKQojIHByaW50KGluZGV4ZXMpCgojIGFyciA9IG5wLmV5ZSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tYXgoYXJyKSkKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tZWFuKGFycikpCgojIGFyciA9IG5wLm9uZXMoKDUsNSkpCiMgYXJyWzE6LTEsIDE6LTFdID0gMAojIHByaW50KGFycikKCiMgYXJyID0gbnAub25lcygoMywzKSkKIyBhcnJfcmVsbGVubyA9IG5wLnBhZChhcnIsIHBhZF93aWR0aD0xLCBtb2RlPSJjb25zdGFudCIpCiMgcHJpbnQoYXJyX3JlbGxlbm8pCgoKCg==","ended_at":1742488651555,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvbnVtcHktdHV0b3JpYWwtZXhlcmNpc2VzCnBsdWdpbnM6IHRlc3Rkb3gtMy4xLjAKY29sbGVjdGVkIDEgaXRlbQoKLmxlYXJuL2V4ZXJjaXNlcy8wMTgtcmVzdWx0LW9mLWV4cHJlc3Npb25zL3Rlc3QucHkgG1szMW1GG1swbRtbMzFtICAgICAgICAgICAgICAgICAgICAgWzEwMCVdG1swbQoKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gRkFJTFVSRVMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KG1szMW0bWzFtX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXyB0ZXN0X3ByaW50IF9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18bWzBtCgpjYXBzeXMgPSA8X3B5dGVzdC5jYXB0dXJlLkNhcHR1cmVGaXh0dXJlIG9iamVjdCBhdCAweDdiZTQxMWY2NWIxMD4KCiAgICBAcHl0ZXN0Lm1hcmsuaXQoJ1lvdSBzaG91bGQgcHJpbnQgdGhlIGV4cGVjdGVkIG91dHB1dCcpCiAgICBkZWYgdGVzdF9wcmludChjYXBzeXMpOgogICAgICAgIGltcG9ydCBhcHAKICAgICAgICBjYXB0dXJlZCA9IGNhcHN5cy5yZWFkb3V0ZXJyKCkKPiAgICAgICBhc3NlcnQgY2FwdHVyZWQub3V0ID09ICduYW5cbkZhbHNlXG5GYWxzZVxubmFuXG5UcnVlXG5GYWxzZVxuJwobWzFtG1szMW1FICAgICAgIEFzc2VydGlvbkVycm9yOiBhc3NlcnQgJycgPT0gJ25hblxuRmFsc2Vcbi4uLlRydWVcbkZhbHNlXG4nG1swbQobWzFtG1szMW1FICAgICAgICAgLSBuYW4bWzBtChtbMW0bWzMxbUUgICAgICAgICAtIEZhbHNlG1swbQobWzFtG1szMW1FICAgICAgICAgLSBGYWxzZRtbMG0KG1sxbRtbMzFtRSAgICAgICAgIC0gbmFuG1swbQobWzFtG1szMW1FICAgICAgICAgLSBUcnVlG1swbQobWzFtG1szMW1FICAgICAgICAgLSBGYWxzZRtbMG0KChtbMW0bWzMxbS5sZWFybi9leGVyY2lzZXMvMDE4LXJlc3VsdC1vZi1leHByZXNzaW9ucy90ZXN0LnB5G1swbTo5OiBBc3NlcnRpb25FcnJvcgobWzM2bRtbMW09PT09PT09PT09PT09PT09PT09PT09PT09PT0gc2hvcnQgdGVzdCBzdW1tYXJ5IGluZm8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PRtbMG0KG1szMW1GQUlMRUQbWzBtIC5sZWFybi9leGVyY2lzZXMvMDE4LXJlc3VsdC1vZi1leHByZXNzaW9ucy90ZXN0LnB5OjobWzFtdGVzdF9wcmludBtbMG0gLSBBc3NlcnRpb25FcnJvcjogYXNzZXJ0ICcnID09ICduYW5cbkZhbHNlXG4uLi5UcnVlXG5GYWxzZVxuJwobWzMxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAbWzMxbRtbMW0xIGZhaWxlZBtbMG0bWzMxbSBpbiAwLjExcxtbMG0bWzMxbSA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQo=","stderr":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvbnVtcHktdHV0b3JpYWwtZXhlcmNpc2VzCnBsdWdpbnM6IHRlc3Rkb3gtMy4xLjAKY29sbGVjdGVkIDEgaXRlbQoKLmxlYXJuL2V4ZXJjaXNlcy8wMTgtcmVzdWx0LW9mLWV4cHJlc3Npb25zL3Rlc3QucHkgG1szMW1GG1swbRtbMzFtICAgICAgICAgICAgICAgICAgICAgWzEwMCVdG1swbQoKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gRkFJTFVSRVMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KG1szMW0bWzFtX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXyB0ZXN0X3ByaW50IF9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18bWzBtCgpjYXBzeXMgPSA8X3B5dGVzdC5jYXB0dXJlLkNhcHR1cmVGaXh0dXJlIG9iamVjdCBhdCAweDdiZTQxMWY2NWIxMD4KCiAgICBAcHl0ZXN0Lm1hcmsuaXQoJ1lvdSBzaG91bGQgcHJpbnQgdGhlIGV4cGVjdGVkIG91dHB1dCcpCiAgICBkZWYgdGVzdF9wcmludChjYXBzeXMpOgogICAgICAgIGltcG9ydCBhcHAKICAgICAgICBjYXB0dXJlZCA9IGNhcHN5cy5yZWFkb3V0ZXJyKCkKPiAgICAgICBhc3NlcnQgY2FwdHVyZWQub3V0ID09ICduYW5cbkZhbHNlXG5GYWxzZVxubmFuXG5UcnVlXG5GYWxzZVxuJwobWzFtG1szMW1FICAgICAgIEFzc2VydGlvbkVycm9yOiBhc3NlcnQgJycgPT0gJ25hblxuRmFsc2Vcbi4uLlRydWVcbkZhbHNlXG4nG1swbQobWzFtG1szMW1FICAgICAgICAgLSBuYW4bWzBtChtbMW0bWzMxbUUgICAgICAgICAtIEZhbHNlG1swbQobWzFtG1szMW1FICAgICAgICAgLSBGYWxzZRtbMG0KG1sxbRtbMzFtRSAgICAgICAgIC0gbmFuG1swbQobWzFtG1szMW1FICAgICAgICAgLSBUcnVlG1swbQobWzFtG1szMW1FICAgICAgICAgLSBGYWxzZRtbMG0KChtbMW0bWzMxbS5sZWFybi9leGVyY2lzZXMvMDE4LXJlc3VsdC1vZi1leHByZXNzaW9ucy90ZXN0LnB5G1swbTo5OiBBc3NlcnRpb25FcnJvcgobWzM2bRtbMW09PT09PT09PT09PT09PT09PT09PT09PT09PT0gc2hvcnQgdGVzdCBzdW1tYXJ5IGluZm8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PRtbMG0KG1szMW1GQUlMRUQbWzBtIC5sZWFybi9leGVyY2lzZXMvMDE4LXJlc3VsdC1vZi1leHByZXNzaW9ucy90ZXN0LnB5OjobWzFtdGVzdF9wcmludBtbMG0gLSBBc3NlcnRpb25FcnJvcjogYXNzZXJ0ICcnID09ICduYW5cbkZhbHNlXG4uLi5UcnVlXG5GYWxzZVxuJwobWzMxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAbWzMxbRtbMW0xIGZhaWxlZBtbMG0bWzMxbSBpbiAwLjExcxtbMG0bWzMxbSA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQosCgogICAKICAgICAgICAgIBtbMzFtWW91ciBjb2RlIG11c3QgdG8gY29tcGx5IHdpdGggdGhlIGZvbGxvd2luZyB0ZXN0czobWzM5bSAKCiAgICAgG1szMW0bWzFteCAoZmFpbCkbWzIybRtbMzltIDAuIBtbMzdtWW91IHNob3VsZCBwcmludCB0aGUgZXhwZWN0ZWQgb3V0cHV0G1szOW0gCgo=","exit_code":1},{"starting_at":1742488915131,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgojIGFyciA9IG5wLmFycmF5KFsxLDIsMCwwLDQsMF0pCiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKQojIHByaW50KGluZGV4ZXMpCgojIGFyciA9IG5wLmV5ZSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tYXgoYXJyKSkKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tZWFuKGFycikpCgojIGFyciA9IG5wLm9uZXMoKDUsNSkpCiMgYXJyWzE6LTEsIDE6LTFdID0gMAojIHByaW50KGFycikKCiMgYXJyID0gbnAub25lcygoMywzKSkKIyBhcnJfcmVsbGVubyA9IG5wLnBhZChhcnIsIHBhZF93aWR0aD0xLCBtb2RlPSJjb25zdGFudCIpCiMgcHJpbnQoYXJyX3JlbGxlbm8pCgpwcmludCgwICogbnAubmFuKQpwcmludChucC5uYW4gPT0gbnAubmFuKQpwcmludChucC5pbmYgPiBucC5uYW4pCnByaW50KG5wLm5hbiAtIG5wLm5hbikKcHJpbnQobnAubmFuIGluIHNldChbbnAubmFuXSkpCnByaW50KDAuMyA9PSAzICogMC4xKQoK","ended_at":1742488915531,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvbnVtcHktdHV0b3JpYWwtZXhlcmNpc2VzCnBsdWdpbnM6IHRlc3Rkb3gtMy4xLjAKY29sbGVjdGVkIDEgaXRlbQoKLmxlYXJuL2V4ZXJjaXNlcy8wMTgtcmVzdWx0LW9mLWV4cHJlc3Npb25zL3Rlc3QucHkgG1szMm0uG1swbRtbMzJtICAgICAgICAgICAgICAgICAgICAgWzEwMCVdG1swbQoKG1szMm09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gG1szMm0bWzFtMSBwYXNzZWQbWzBtG1szMm0gaW4gMC4wOXMbWzBtG1szMm0gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PRtbMG0K","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1742488534344,"completed_at":1742488915532},{"slug":"019-diagonal","position":19,"files":[{"path":".learn/exercises/019-diagonal/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/019-diagonal/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/019-diagonal/solution.hide.py","name":"solution.hide.py","hidden":true},{"path":".learn/exercises/019-diagonal/test.py","name":"test.py","hidden":true}],"ai_interactions":[],"compilations":[{"stderr":"","stdout":"W1swIDEgMl0KIFszIDQgNV0KIFs2IDcgOF1dCg==","signal":null,"memoryUsage":393216,"cpuUsage":6552,"starting_at":1742489666264,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgojIGFyciA9IG5wLmFycmF5KFsxLDIsMCwwLDQsMF0pCiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKQojIHByaW50KGluZGV4ZXMpCgojIGFyciA9IG5wLmV5ZSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tYXgoYXJyKSkKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tZWFuKGFycikpCgojIGFyciA9IG5wLm9uZXMoKDUsNSkpCiMgYXJyWzE6LTEsIDE6LTFdID0gMAojIHByaW50KGFycikKCiMgYXJyID0gbnAub25lcygoMywzKSkKIyBhcnJfcmVsbGVubyA9IG5wLnBhZChhcnIsIHBhZF93aWR0aD0xLCBtb2RlPSJjb25zdGFudCIpCiMgcHJpbnQoYXJyX3JlbGxlbm8pCgojIHByaW50KDAgKiBucC5uYW4pCiMgcHJpbnQobnAubmFuID09IG5wLm5hbikKIyBwcmludChucC5pbmYgPiBucC5uYW4pCiMgcHJpbnQobnAubmFuIC0gbnAubmFuKQojIHByaW50KG5wLm5hbiBpbiBzZXQoW25wLm5hbl0pKQojIHByaW50KDAuMyA9PSAzICogMC4xKQoKbWF0cml4ID0gbnAuYXJhbmdlKDkpLnJlc2hhcGUoMywzKQpwcmludChtYXRyaXgpCg==","ended_at":1742489666420,"exit_code":0},{"stderr":"","stdout":"WzAgNCA4XQo=","signal":null,"memoryUsage":524288,"cpuUsage":6719,"starting_at":1742489723407,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgojIGFyciA9IG5wLmFycmF5KFsxLDIsMCwwLDQsMF0pCiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKQojIHByaW50KGluZGV4ZXMpCgojIGFyciA9IG5wLmV5ZSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tYXgoYXJyKSkKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tZWFuKGFycikpCgojIGFyciA9IG5wLm9uZXMoKDUsNSkpCiMgYXJyWzE6LTEsIDE6LTFdID0gMAojIHByaW50KGFycikKCiMgYXJyID0gbnAub25lcygoMywzKSkKIyBhcnJfcmVsbGVubyA9IG5wLnBhZChhcnIsIHBhZF93aWR0aD0xLCBtb2RlPSJjb25zdGFudCIpCiMgcHJpbnQoYXJyX3JlbGxlbm8pCgojIHByaW50KDAgKiBucC5uYW4pCiMgcHJpbnQobnAubmFuID09IG5wLm5hbikKIyBwcmludChucC5pbmYgPiBucC5uYW4pCiMgcHJpbnQobnAubmFuIC0gbnAubmFuKQojIHByaW50KG5wLm5hbiBpbiBzZXQoW25wLm5hbl0pKQojIHByaW50KDAuMyA9PSAzICogMC4xKQoKbWF0cml4ID0gbnAuYXJhbmdlKDkpLnJlc2hhcGUoMywzKQpwcmludChucC5kaWFnKG1hdHJpeCkpCg==","ended_at":1742489723560,"exit_code":0},{"stderr":"","stdout":"WzAgNCA4XQo=","signal":null,"memoryUsage":524288,"cpuUsage":6795,"starting_at":1742489726350,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgojIGFyciA9IG5wLmFycmF5KFsxLDIsMCwwLDQsMF0pCiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKQojIHByaW50KGluZGV4ZXMpCgojIGFyciA9IG5wLmV5ZSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tYXgoYXJyKSkKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tZWFuKGFycikpCgojIGFyciA9IG5wLm9uZXMoKDUsNSkpCiMgYXJyWzE6LTEsIDE6LTFdID0gMAojIHByaW50KGFycikKCiMgYXJyID0gbnAub25lcygoMywzKSkKIyBhcnJfcmVsbGVubyA9IG5wLnBhZChhcnIsIHBhZF93aWR0aD0xLCBtb2RlPSJjb25zdGFudCIpCiMgcHJpbnQoYXJyX3JlbGxlbm8pCgojIHByaW50KDAgKiBucC5uYW4pCiMgcHJpbnQobnAubmFuID09IG5wLm5hbikKIyBwcmludChucC5pbmYgPiBucC5uYW4pCiMgcHJpbnQobnAubmFuIC0gbnAubmFuKQojIHByaW50KG5wLm5hbiBpbiBzZXQoW25wLm5hbl0pKQojIHByaW50KDAuMyA9PSAzICogMC4xKQoKbWF0cml4ID0gbnAuYXJhbmdlKDkpLnJlc2hhcGUoMywzKQpwcmludChucC5kaWFnKG1hdHJpeCkpCg==","ended_at":1742489726504,"exit_code":0}],"tests":[{"starting_at":1742489740418,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgojIGFyciA9IG5wLmFycmF5KFsxLDIsMCwwLDQsMF0pCiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKQojIHByaW50KGluZGV4ZXMpCgojIGFyciA9IG5wLmV5ZSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tYXgoYXJyKSkKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tZWFuKGFycikpCgojIGFyciA9IG5wLm9uZXMoKDUsNSkpCiMgYXJyWzE6LTEsIDE6LTFdID0gMAojIHByaW50KGFycikKCiMgYXJyID0gbnAub25lcygoMywzKSkKIyBhcnJfcmVsbGVubyA9IG5wLnBhZChhcnIsIHBhZF93aWR0aD0xLCBtb2RlPSJjb25zdGFudCIpCiMgcHJpbnQoYXJyX3JlbGxlbm8pCgojIHByaW50KDAgKiBucC5uYW4pCiMgcHJpbnQobnAubmFuID09IG5wLm5hbikKIyBwcmludChucC5pbmYgPiBucC5uYW4pCiMgcHJpbnQobnAubmFuIC0gbnAubmFuKQojIHByaW50KG5wLm5hbiBpbiBzZXQoW25wLm5hbl0pKQojIHByaW50KDAuMyA9PSAzICogMC4xKQoKbWF0cml4ID0gbnAuYXJhbmdlKDkpLnJlc2hhcGUoMywzKQpwcmludChucC5kaWFnKG1hdHJpeCkpCg==","ended_at":1742489740763,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvbnVtcHktdHV0b3JpYWwtZXhlcmNpc2VzCnBsdWdpbnM6IHRlc3Rkb3gtMy4xLjAKY29sbGVjdGVkIDIgaXRlbXMKCi5sZWFybi9leGVyY2lzZXMvMDE5LWRpYWdvbmFsL3Rlc3QucHkgG1szMm0uG1swbRtbMzJtLhtbMG0bWzMybSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFsxMDAlXRtbMG0KChtbMzJtPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IBtbMzJtG1sxbTIgcGFzc2VkG1swbRtbMzJtIGluIDAuMDhzG1swbRtbMzJtID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0bWzBtCg==","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1742488918321,"completed_at":1742489740763},{"slug":"020-checkerboard-pattern","position":20,"files":[{"path":".learn/exercises/020-checkerboard-pattern/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/020-checkerboard-pattern/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/020-checkerboard-pattern/solution.hide.py","name":"solution.hide.py","hidden":true},{"path":".learn/exercises/020-checkerboard-pattern/test.py","name":"test.py","hidden":true}],"ai_interactions":[{"starting_at":1742489964694,"student_message":"array[::2] como aplico esto a mi codigo\n","context":"---\n      # File name: README.es.md. Content: \n      `<!-- hide -->\n# Welcome to Numpy exercise tutorial\n\nPor <a href=\"https://twitter.com/alesanchezr\">@alesanchezr</a> y <a href=\"https://github.com/4geeksacademy/numpy-tutorial-exercises/graphs/contributors\">otros contibuyentes</a> en <a href=\"http://4geeksacademy.com/\">4Geeks Academy.</a><a href=\"https://www.4geeksacademy.com\"><img height=\"280\" align=\"right\" src=\"https://github.com/4geeksacademy/numpy-tutorial-exercises/blob/master/.learn/assets/numpy-badge.png?raw=true\"></a>\n<!-- endhide -->\n\nNumPy (y Pandas) son las librerías #1 para Machine Learning, no hay manera que puedas realizar cualquier cosa sin ellas.\n\nEste tutorial interactivo te va a ayudar a familiarizarte con ello, a dominar las funcionalidades más usadas y a ayudarte a limpiar tu primer set de datos. \n\n- Documentación de NumPy.\n- Vectores.\n- Matrices.\n- Valores aleatorios, Media.\n\n> Nota: Todo el tutorial es completamente 👆 interactivo, ✅ con corrección automática y 📹 videos tutoriales.\n\nEstos ejercicios fueron construidos en colaboración. ¡Te necesitamos! Si consigues algún error o falta de ortografía, por favor ayúdanos y repórtalos.\n\n<!-- hide -->\n## Instalación en un clic (recomendado)\n\nPuedes empezar estos ejercicios en pocos segundos haciendo clic en: [Abrir en Codespaces](https://codespaces.new/?repo=4GeeksAcademy/numpy-tutorial-exercises) (recomendado) o [Abrir en Gitpod](https://gitpod.io#https://github.com/4GeeksAcademy/numpy-tutorial-exercises.git).\n\n> Una vez ya tengas abierto VSCode, los ejercicios de LearnPack deberían empezar automáticamente; si esto no sucede puedes intentar empezar los ejercicios escribiendo este comando en tu terminal: `$ learnpack start`\n\n\n## Instalación local\n\n1. Clona o descarga este repositorio.\n\n2. Asegúrate de tener [LearnPack](https://learnpack.co) instalado, una versión de node.js 14 o superior y una versión de Python 3 o superior. Este es el comando para instalar LearnPack:\n\n```bash\n$ npm i @learnpack/learnpack -g && learnpack plugins:install @learnpack/python\n```\n\n3. Empieza el tutorial/ejercicios corriendo estos comandos en el mismo nivel donde se encuentra tu archivo learn.json:\n\n```bash\n$ pip3 install pytest==6.2.5 mock pytest-testdox toml numpy==1.24.2 pandas\n$ learnpack start\n```\n\n> Nota: Estos ejercicios tienen calificación automática. Los tests son muy rígidos y estrictos, mi recomendación es que no prestes demasiada atención a los tests y los uses solo como una sugerencia o podrías frustrarte.\n\n<!-- endhide -->\n\n## Colaboradores\n \nGracias a estas personas maravillosas ([emoji key](https://github.com/kentcdodds/all-contributors#emoji-key)):\n\n1. [Alejandro Sanchez (alesanchezr)](https://github.com/alesanchezr), contribución: (programador) 💻, (idea) 🤔, (build-tests) ⚠️, (pull-request-review) 👀, (build-tutorial) ✅, (documentación) 📖\n\n2. [Paolo (plucodev)](https://github.com/plucodev), contribución: (bug reports) 🐛, (programador) 💻, (traducción) 🌎\n\n3. [Marco Gómez (marcogonzalo)](https://github.com/marcogonzalo), contribution: (bug reports) 🐛, (traducción) 🌎\n\nEste proyecto sigue la especificación [all-contributors](https://github.com/kentcdodds/all-contributors).\n\n¡Todas las contribuciones son bienvenidas!\n`\n      ---\n      \n---\n      # File name: README.md. Content: \n      `<!-- hide -->\n# Welcome to Numpy exercise tutorial\n\nBy <a href=\"https://twitter.com/alesanchezr\">@alesanchezr</a> and <a href=\"https://github.com/4geeksacademy/numpy-tutorial-exercises/graphs/contributors\">other contributors</a> at <a href=\"http://4geeksacademy.com/\">4Geeks Academy.</a><a href=\"https://www.4geeksacademy.com\"><img height=\"280\" align=\"right\" src=\"https://github.com/4geeksacademy/numpy-tutorial-exercises/blob/master/.learn/assets/numpy-badge.png?raw=true\"></a>\n<!-- endhide -->\n\nNumPy (and Pandas) are the #1 libraries for Machine Learning, there is no way you can do anything without them. \n\nThis interactive tutorial will help you become familiar with it, master the most used functionalities, and help you clean up your first datasets.\n\n- NumPy documentation.\n- Vectors.\n- Matrixes.\n- Random, Mean Values.\n\n> Note: The entire tutorial is 👆 interactive, ✅ auto-graded and with 📹 video tutorials.\n\nThese exercises were built in collaboration; we need you! If you find any bugs or misspellings, please contribute and report them.\n\n<!-- hide -->\n\n## One click installation (recommended):\n\nYou can open these exercises in just a few seconds by clicking: [Open in Codespaces](https://codespaces.new/?repo=4GeeksAcademy/numpy-tutorial-exercises) (recommended) or [Open in Gitpod](https://gitpod.io#https://github.com/4GeeksAcademy/numpy-tutorial-exercises.git).\n\n> Once you have VSCode open the LearnPack exercises should start automatically. If exercises don't run automatically you can try typing on your terminal: `$ learnpack start`\n\n\n\n## Local Installation\n\n1. Clone or download this repository.\n\n2. Make sure you have [LearnPack](https://learnpack.co) installed, node.js version 14+, and Python version 3+. This is the command to install LearnPack:\n\n```bash\n$ npm i @learnpack/learnpack -g && learnpack plugins:install @learnpack/python\n```\n\n3. Start the tutorial/exercises by running the following commands at the same level where your learn.json file is:\n\n```bash\n$ pip3 install pytest==6.2.5 mock pytest-testdox toml numpy==1.24.2 pandas\n$ learnpack start\n```\n\n> Note: The exercises have automatic grading, but it's very rigid and strict, my recommendation is to not take the tests too serious and use them only as a suggestion, or you may get frustrated.\n\n<!-- endhide -->\n\n\n## Contributors\n\nThanks to these wonderful people ([emoji key](https://github.com/kentcdodds/all-contributors#emoji-key)):\n\n1. [Alejandro Sanchez (alesanchezr)](https://github.com/alesanchezr), contribution: (coder) 💻, (idea) 🤔, (build-tests) ⚠️, (pull-request-review) 👀, (build-tutorial) ✅, (documentation) 📖\n\n2. [Paolo (plucodev)](https://github.com/plucodev), contribution: (bug reports) 🐛, (coder) 💻, (translation) 🌎\n\n3. [Ricardo Rodriguez (RickRodriguez8080)](https://github.com/RickRodriguez8080) contribution: (build-tutorial) ✅, (documentation) 📖\n\nThis project follows the [all-contributors](https://github.com/kentcdodds/all-contributors) specifications. \n\nContributions of any kind are welcome!\n`\n      ---\n      \n---\n      # File name: solution.hide.py. Content: \n      `{\"message\":\"File not found: + undefined\",\"status\":500,\"type\":null}`\n      ---\n      \n---\n      # File name: test.py. Content: \n      `import pytest\nimport os\nimport numpy\n\n@pytest.mark.it('The output should be a checkerboard-like numpy matrix')\ndef test_print(capsys):\n    import app\n    captured = capsys.readouterr()\n    assert captured.out == \\\n\"\"\"[[0. 1. 0. 1. 0. 1. 0. 1.]\n [1. 0. 1. 0. 1. 0. 1. 0.]\n [0. 1. 0. 1. 0. 1. 0. 1.]\n [1. 0. 1. 0. 1. 0. 1. 0.]\n [0. 1. 0. 1. 0. 1. 0. 1.]\n [1. 0. 1. 0. 1. 0. 1. 0.]\n [0. 1. 0. 1. 0. 1. 0. 1.]\n [1. 0. 1. 0. 1. 0. 1. 0.]]\n\"\"\"\n`\n      ---\n      \n      ---This is the current exercise instructions:\n      # `020` Checkerboard Pattern\n\n## 📝 Instrucciones:\n\n1. Crea una matriz de 8 x 8 y asigna los valores de modo que se vea como un tablero de damas.\n\n2. Imprime la matriz resultante en la consola.\n\n## 💻 Resultado Esperado:\n\n```bash\n[[0. 1. 0. 1. 0. 1. 0. 1.]\n [1. 0. 1. 0. 1. 0. 1. 0.]\n [0. 1. 0. 1. 0. 1. 0. 1.]\n [1. 0. 1. 0. 1. 0. 1. 0.]\n [0. 1. 0. 1. 0. 1. 0. 1.]\n [1. 0. 1. 0. 1. 0. 1. 0.]\n [0. 1. 0. 1. 0. 1. 0. 1.]\n [1. 0. 1. 0. 1. 0. 1. 0.]]\n```\n\n## 💡 Pista:\n\n+ Debes modificar los valores de la matriz usando los índices del array: `array[::2]`.\n\n      ---\n      \n      <MANDATORY FOR AI: The user's set up the application in \"es\" language, give your feedback in \"es\" language, please.>\n\n      \nSome tests didn't passed, these are the tests logs: ============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-7.3.1, pluggy-1.0.0\nrootdir: /workspaces/numpy-tutorial-exercises\nplugins: testdox-3.1.0\ncollected 1 item\n\n.learn/exercises/020-checkerboard-pattern/test.py F                      [100%]\n\n=================================== FAILURES ===================================\n__________________________________ test_print __________________________________\n\ncapsys = <_pytest.capture.CaptureFixture object at 0x7b5976da1ae0>\n\n    @pytest.mark.it('The output should be a checkerboard-like numpy matrix')\n    def test_print(capsys):\n        import app\n        captured = capsys.readouterr()\n>       assert captured.out == \\\n    \"\"\"[[0. 1. 0. 1. 0. 1. 0. 1.]\n     [1. 0. 1. 0. 1. 0. 1. 0.]\n     [0. 1. 0. 1. 0. 1. 0. 1.]\n     [1. 0. 1. 0. 1. 0. 1. 0.]\n     [0. 1. 0. 1. 0. 1. 0. 1.]\n     [1. 0. 1. 0. 1. 0. 1. 0.]\n     [0. 1. 0. 1. 0. 1. 0. 1.]\n     [1. 0. 1. 0. 1. 0. 1. 0.]]\n    \"\"\"\nE       AssertionError: assert '[[0. 0. 0. 0... 0. 0. 0.]]\\n' == '[[0. 1. 0. 1... 0. 1. 0.]]\\n'\nE         - [[0. 1. 0. 1. 0. 1. 0. 1.]\nE         -  [1. 0. 1. 0. 1. 0. 1. 0.]\nE         -  [0. 1. 0. 1. 0. 1. 0. 1.]\nE         -  [1. 0. 1. 0. 1. 0. 1. 0.]\nE         -  [0. 1. 0. 1. 0. 1. 0. 1.]\nE         -  [1. 0. 1. 0. 1. 0. 1. 0.]\nE         -  [0. 1. 0. 1. 0. 1. 0. 1.]...\nE         \nE         ...Full output truncated (9 lines hidden), use '-vv' to show\n\n.learn/exercises/020-checkerboard-pattern/test.py:9: AssertionError\n=========================== short test summary info ============================\nFAILED .learn/exercises/020-checkerboard-pattern/test.py::test_print - AssertionError: assert '[[0. 0. 0. 0... 0. 0. 0.]]\\n' == '[[0. 1. 0. 1... 0...\n============================== 1 failed in 0.13s ===============================\n,\n\n   \n          Your code must to comply with the following tests: \n\n     x (fail) 0. The output should be a checkerboard-like numpy matrix \n\n","ending_at":1742489975868,"ai_response":"Para aplicar `array[::2]` en tu código, necesitas entender cómo funciona esta notación. `array[::2]` selecciona cada segundo elemento de la matriz. En el contexto de crear un patrón de tablero de damas, puedes usar esto para modificar las filas de tu matriz.\n\nAquí tienes un paso a paso sobre cómo podrías implementar esto:\n\n1. **Crea la matriz**: Primero, debes crear una matriz de ceros de 8x8 utilizando NumPy.\n2. **Modifica las filas**: Luego, puedes usar `array[::2]` para seleccionar las filas pares y asignarles los valores que forman el patrón del tablero de damas.\n\nAquí tienes un ejemplo de cómo podrías hacerlo:\n\n```python\nimport numpy as np\n\n# Paso 1: Crear una matriz de ceros de 8x8\nmatriz = np.zeros((8, 8))\n\n# Paso 2: Modificar las filas\nmatriz[::2, 1::2] = 1  # Asigna 1 a las posiciones impares de las filas pares\nmatriz[1::2, ::2] = 1  # Asigna 1 a las posiciones pares de las filas impares\n\n# Imprimir la matriz\nprint(matriz)\n```\n\nEn este código:\n- `matriz[::2, 1::2]` selecciona las filas 0, 2, 4 y 6, y dentro de esas filas, selecciona las columnas 1, 3, 5 y 7 para asignarles el valor 1.\n- `matriz[1::2, ::2]` selecciona las filas 1, 3, 5 y 7, y dentro de esas filas, selecciona las columnas 0, 2, 4 y 6 para asignarles el valor 1.\n\nIntenta implementar esto en tu código y luego ejecuta tu prueba. Si tienes algún problema, comparte tu código y los errores que obtienes, y te ayudaré a solucionar cualquier inconveniente."}],"compilations":[{"stderr":"","stdout":"W1swLiAwLiAwLl0KIFswLiAwLiAwLl0KIFswLiAwLiAwLl1dCg==","signal":null,"memoryUsage":393216,"cpuUsage":5225,"starting_at":1742489880686,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgojIGFyciA9IG5wLmFycmF5KFsxLDIsMCwwLDQsMF0pCiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKQojIHByaW50KGluZGV4ZXMpCgojIGFyciA9IG5wLmV5ZSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tYXgoYXJyKSkKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tZWFuKGFycikpCgojIGFyciA9IG5wLm9uZXMoKDUsNSkpCiMgYXJyWzE6LTEsIDE6LTFdID0gMAojIHByaW50KGFycikKCiMgYXJyID0gbnAub25lcygoMywzKSkKIyBhcnJfcmVsbGVubyA9IG5wLnBhZChhcnIsIHBhZF93aWR0aD0xLCBtb2RlPSJjb25zdGFudCIpCiMgcHJpbnQoYXJyX3JlbGxlbm8pCgojIHByaW50KDAgKiBucC5uYW4pCiMgcHJpbnQobnAubmFuID09IG5wLm5hbikKIyBwcmludChucC5pbmYgPiBucC5uYW4pCiMgcHJpbnQobnAubmFuIC0gbnAubmFuKQojIHByaW50KG5wLm5hbiBpbiBzZXQoW25wLm5hbl0pKQojIHByaW50KDAuMyA9PSAzICogMC4xKQoKIyBtYXRyaXggPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgzLDMpCiMgcHJpbnQobnAuZGlhZyhtYXRyaXgpKQoKYXJyYXkgPSBucC56ZXJvcygoMywzKSkKcHJpbnQoYXJyYXkpCg==","ended_at":1742489880841,"exit_code":0},{"stderr":"","stdout":"W1swLiAwLiAwLiAwLiAwLiAwLiAwLiAwLl0KIFswLiAwLiAwLiAwLiAwLiAwLiAwLiAwLl0KIFswLiAwLiAwLiAwLiAwLiAwLiAwLiAwLl0KIFswLiAwLiAwLiAwLiAwLiAwLiAwLiAwLl0KIFswLiAwLiAwLiAwLiAwLiAwLiAwLiAwLl0KIFswLiAwLiAwLiAwLiAwLiAwLiAwLiAwLl0KIFswLiAwLiAwLiAwLiAwLiAwLiAwLiAwLl0KIFswLiAwLiAwLiAwLiAwLiAwLiAwLiAwLl1dCg==","signal":null,"memoryUsage":393216,"cpuUsage":7292,"starting_at":1742489891537,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgojIGFyciA9IG5wLmFycmF5KFsxLDIsMCwwLDQsMF0pCiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKQojIHByaW50KGluZGV4ZXMpCgojIGFyciA9IG5wLmV5ZSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tYXgoYXJyKSkKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tZWFuKGFycikpCgojIGFyciA9IG5wLm9uZXMoKDUsNSkpCiMgYXJyWzE6LTEsIDE6LTFdID0gMAojIHByaW50KGFycikKCiMgYXJyID0gbnAub25lcygoMywzKSkKIyBhcnJfcmVsbGVubyA9IG5wLnBhZChhcnIsIHBhZF93aWR0aD0xLCBtb2RlPSJjb25zdGFudCIpCiMgcHJpbnQoYXJyX3JlbGxlbm8pCgojIHByaW50KDAgKiBucC5uYW4pCiMgcHJpbnQobnAubmFuID09IG5wLm5hbikKIyBwcmludChucC5pbmYgPiBucC5uYW4pCiMgcHJpbnQobnAubmFuIC0gbnAubmFuKQojIHByaW50KG5wLm5hbiBpbiBzZXQoW25wLm5hbl0pKQojIHByaW50KDAuMyA9PSAzICogMC4xKQoKIyBtYXRyaXggPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgzLDMpCiMgcHJpbnQobnAuZGlhZyhtYXRyaXgpKQoKYXJyYXkgPSBucC56ZXJvcygoOCw4KSkKcHJpbnQoYXJyYXkpCg==","ended_at":1742489891690,"exit_code":0},{"stderr":"","stdout":"W1swLiAxLiAwLiAxLiAwLiAxLiAwLiAxLl0KIFswLiAwLiAwLiAwLiAwLiAwLiAwLiAwLl0KIFswLiAxLiAwLiAxLiAwLiAxLiAwLiAxLl0KIFswLiAwLiAwLiAwLiAwLiAwLiAwLiAwLl0KIFswLiAxLiAwLiAxLiAwLiAxLiAwLiAxLl0KIFswLiAwLiAwLiAwLiAwLiAwLiAwLiAwLl0KIFswLiAxLiAwLiAxLiAwLiAxLiAwLiAxLl0KIFswLiAwLiAwLiAwLiAwLiAwLiAwLiAwLl1dCg==","signal":null,"memoryUsage":393216,"cpuUsage":4328,"starting_at":1742490158059,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgojIGFyciA9IG5wLmFycmF5KFsxLDIsMCwwLDQsMF0pCiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKQojIHByaW50KGluZGV4ZXMpCgojIGFyciA9IG5wLmV5ZSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tYXgoYXJyKSkKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tZWFuKGFycikpCgojIGFyciA9IG5wLm9uZXMoKDUsNSkpCiMgYXJyWzE6LTEsIDE6LTFdID0gMAojIHByaW50KGFycikKCiMgYXJyID0gbnAub25lcygoMywzKSkKIyBhcnJfcmVsbGVubyA9IG5wLnBhZChhcnIsIHBhZF93aWR0aD0xLCBtb2RlPSJjb25zdGFudCIpCiMgcHJpbnQoYXJyX3JlbGxlbm8pCgojIHByaW50KDAgKiBucC5uYW4pCiMgcHJpbnQobnAubmFuID09IG5wLm5hbikKIyBwcmludChucC5pbmYgPiBucC5uYW4pCiMgcHJpbnQobnAubmFuIC0gbnAubmFuKQojIHByaW50KG5wLm5hbiBpbiBzZXQoW25wLm5hbl0pKQojIHByaW50KDAuMyA9PSAzICogMC4xKQoKIyBtYXRyaXggPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgzLDMpCiMgcHJpbnQobnAuZGlhZyhtYXRyaXgpKQoKYXJyYXkgPSBucC56ZXJvcygoOCw4KSkKYXJyYXlbOjoyLCAxOjoyXSA9IDEKCnByaW50KGFycmF5KQo=","ended_at":1742490158268,"exit_code":0},{"stderr":"","stdout":"W1swLiAxLiAwLiAxLiAwLiAxLiAwLiAxLl0KIFsxLiAwLiAxLiAwLiAxLiAwLiAxLiAwLl0KIFswLiAxLiAwLiAxLiAwLiAxLiAwLiAxLl0KIFsxLiAwLiAxLiAwLiAxLiAwLiAxLiAwLl0KIFswLiAxLiAwLiAxLiAwLiAxLiAwLiAxLl0KIFsxLiAwLiAxLiAwLiAxLiAwLiAxLiAwLl0KIFswLiAxLiAwLiAxLiAwLiAxLiAwLiAxLl0KIFsxLiAwLiAxLiAwLiAxLiAwLiAxLiAwLl1dCg==","signal":null,"memoryUsage":393216,"cpuUsage":8323,"starting_at":1742490278699,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgojIGFyciA9IG5wLmFycmF5KFsxLDIsMCwwLDQsMF0pCiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKQojIHByaW50KGluZGV4ZXMpCgojIGFyciA9IG5wLmV5ZSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tYXgoYXJyKSkKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tZWFuKGFycikpCgojIGFyciA9IG5wLm9uZXMoKDUsNSkpCiMgYXJyWzE6LTEsIDE6LTFdID0gMAojIHByaW50KGFycikKCiMgYXJyID0gbnAub25lcygoMywzKSkKIyBhcnJfcmVsbGVubyA9IG5wLnBhZChhcnIsIHBhZF93aWR0aD0xLCBtb2RlPSJjb25zdGFudCIpCiMgcHJpbnQoYXJyX3JlbGxlbm8pCgojIHByaW50KDAgKiBucC5uYW4pCiMgcHJpbnQobnAubmFuID09IG5wLm5hbikKIyBwcmludChucC5pbmYgPiBucC5uYW4pCiMgcHJpbnQobnAubmFuIC0gbnAubmFuKQojIHByaW50KG5wLm5hbiBpbiBzZXQoW25wLm5hbl0pKQojIHByaW50KDAuMyA9PSAzICogMC4xKQoKIyBtYXRyaXggPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgzLDMpCiMgcHJpbnQobnAuZGlhZyhtYXRyaXgpKQoKYXJyYXkgPSBucC56ZXJvcygoOCw4KSkKYXJyYXlbOjoyLCAxOjoyXSA9IDEKYXJyYXlbMTo6MiwgOjoyXSA9IDEKCnByaW50KGFycmF5KQo=","ended_at":1742490278863,"exit_code":0}],"tests":[{"starting_at":1742489962082,"source_code":"aW1wb3J0IG51bXB5IGFzIG5wCgoKIyB2ZWN0b3JfbnVsbCA9IG5wLnplcm9zKDEwKQojIHByaW50KHZlY3Rvcl9udWxsKQoKIyBhbW91bnRfb2ZfbWVtb3J5ID0gdmVjdG9yX251bGwuc2l6ZSAqIHZlY3Rvcl9udWxsLml0ZW1zaXplCiMgcHJpbnQoYW1vdW50X29mX21lbW9yeSkKCiMgbnAuaW5mbyhucC5hZGQoMiwzKSkKCiMgdmVjdG9yX251bGxbNF0gPSAxCiMgcHJpbnQodmVjdG9yX251bGwpCgojIHZlY3RvciA9IG5wLmFyYW5nZSgxMCw1MCkKIyBwcmludCh2ZWN0b3IpCgojIHZlY3RvciA9IG5wLmFycmF5KFswLDEsMiwzLDQsNSw2LDcsOCw5XSkKCiMgaW52ZXJ0ZWRfdmVjdG9yID0gdmVjdG9yWzo6LTFdCiMgcHJpbnQoaW52ZXJ0ZWRfdmVjdG9yKQoKIyB2ZWN0b3IgPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgoMywzKSkKIyBwcmludCh2ZWN0b3IpCgojIGFyciA9IG5wLmFycmF5KFsxLDIsMCwwLDQsMF0pCiMgaW5kZXhlcyA9IG5wLm5vbnplcm8oYXJyKQojIHByaW50KGluZGV4ZXMpCgojIGFyciA9IG5wLmV5ZSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgzKQojIHByaW50KGFycikKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tYXgoYXJyKSkKCiMgYXJyID0gbnAucmFuZG9tLnJhbmRvbSgxMCkKIyBwcmludChucC5tZWFuKGFycikpCgojIGFyciA9IG5wLm9uZXMoKDUsNSkpCiMgYXJyWzE6LTEsIDE6LTFdID0gMAojIHByaW50KGFycikKCiMgYXJyID0gbnAub25lcygoMywzKSkKIyBhcnJfcmVsbGVubyA9IG5wLnBhZChhcnIsIHBhZF93aWR0aD0xLCBtb2RlPSJjb25zdGFudCIpCiMgcHJpbnQoYXJyX3JlbGxlbm8pCgojIHByaW50KDAgKiBucC5uYW4pCiMgcHJpbnQobnAubmFuID09IG5wLm5hbikKIyBwcmludChucC5pbmYgPiBucC5uYW4pCiMgcHJpbnQobnAubmFuIC0gbnAubmFuKQojIHByaW50KG5wLm5hbiBpbiBzZXQoW25wLm5hbl0pKQojIHByaW50KDAuMyA9PSAzICogMC4xKQoKIyBtYXRyaXggPSBucC5hcmFuZ2UoOSkucmVzaGFwZSgzLDMpCiMgcHJpbnQobnAuZGlhZyhtYXRyaXgpKQoKYXJyYXkgPSBucC56ZXJvcygoOCw4KSkKcHJpbnQoYXJyYXkpCg==","ended_at":1742489962476,"stdout":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvbnVtcHktdHV0b3JpYWwtZXhlcmNpc2VzCnBsdWdpbnM6IHRlc3Rkb3gtMy4xLjAKY29sbGVjdGVkIDEgaXRlbQoKLmxlYXJuL2V4ZXJjaXNlcy8wMjAtY2hlY2tlcmJvYXJkLXBhdHRlcm4vdGVzdC5weSAbWzMxbUYbWzBtG1szMW0gICAgICAgICAgICAgICAgICAgICAgWzEwMCVdG1swbQoKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gRkFJTFVSRVMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KG1szMW0bWzFtX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXyB0ZXN0X3ByaW50IF9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18bWzBtCgpjYXBzeXMgPSA8X3B5dGVzdC5jYXB0dXJlLkNhcHR1cmVGaXh0dXJlIG9iamVjdCBhdCAweDdiNTk3NmRhMWFlMD4KCiAgICBAcHl0ZXN0Lm1hcmsuaXQoJ1RoZSBvdXRwdXQgc2hvdWxkIGJlIGEgY2hlY2tlcmJvYXJkLWxpa2UgbnVtcHkgbWF0cml4JykKICAgIGRlZiB0ZXN0X3ByaW50KGNhcHN5cyk6CiAgICAgICAgaW1wb3J0IGFwcAogICAgICAgIGNhcHR1cmVkID0gY2Fwc3lzLnJlYWRvdXRlcnIoKQo+ICAgICAgIGFzc2VydCBjYXB0dXJlZC5vdXQgPT0gXAogICAgIiIiW1swLiAxLiAwLiAxLiAwLiAxLiAwLiAxLl0KICAgICBbMS4gMC4gMS4gMC4gMS4gMC4gMS4gMC5dCiAgICAgWzAuIDEuIDAuIDEuIDAuIDEuIDAuIDEuXQogICAgIFsxLiAwLiAxLiAwLiAxLiAwLiAxLiAwLl0KICAgICBbMC4gMS4gMC4gMS4gMC4gMS4gMC4gMS5dCiAgICAgWzEuIDAuIDEuIDAuIDEuIDAuIDEuIDAuXQogICAgIFswLiAxLiAwLiAxLiAwLiAxLiAwLiAxLl0KICAgICBbMS4gMC4gMS4gMC4gMS4gMC4gMS4gMC5dXQogICAgIiIiChtbMW0bWzMxbUUgICAgICAgQXNzZXJ0aW9uRXJyb3I6IGFzc2VydCAnW1swLiAwLiAwLiAwLi4uIDAuIDAuIDAuXV1cbicgPT0gJ1tbMC4gMS4gMC4gMS4uLiAwLiAxLiAwLl1dXG4nG1swbQobWzFtG1szMW1FICAgICAgICAgLSBbWzAuIDEuIDAuIDEuIDAuIDEuIDAuIDEuXRtbMG0KG1sxbRtbMzFtRSAgICAgICAgIC0gIFsxLiAwLiAxLiAwLiAxLiAwLiAxLiAwLl0bWzBtChtbMW0bWzMxbUUgICAgICAgICAtICBbMC4gMS4gMC4gMS4gMC4gMS4gMC4gMS5dG1swbQobWzFtG1szMW1FICAgICAgICAgLSAgWzEuIDAuIDEuIDAuIDEuIDAuIDEuIDAuXRtbMG0KG1sxbRtbMzFtRSAgICAgICAgIC0gIFswLiAxLiAwLiAxLiAwLiAxLiAwLiAxLl0bWzBtChtbMW0bWzMxbUUgICAgICAgICAtICBbMS4gMC4gMS4gMC4gMS4gMC4gMS4gMC5dG1swbQobWzFtG1szMW1FICAgICAgICAgLSAgWzAuIDEuIDAuIDEuIDAuIDEuIDAuIDEuXS4uLhtbMG0KG1sxbRtbMzFtRSAgICAgICAgIBtbMG0KG1sxbRtbMzFtRSAgICAgICAgIC4uLkZ1bGwgb3V0cHV0IHRydW5jYXRlZCAoOSBsaW5lcyBoaWRkZW4pLCB1c2UgJy12dicgdG8gc2hvdxtbMG0KChtbMW0bWzMxbS5sZWFybi9leGVyY2lzZXMvMDIwLWNoZWNrZXJib2FyZC1wYXR0ZXJuL3Rlc3QucHkbWzBtOjk6IEFzc2VydGlvbkVycm9yChtbMzZtG1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PSBzaG9ydCB0ZXN0IHN1bW1hcnkgaW5mbyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQobWzMxbUZBSUxFRBtbMG0gLmxlYXJuL2V4ZXJjaXNlcy8wMjAtY2hlY2tlcmJvYXJkLXBhdHRlcm4vdGVzdC5weTo6G1sxbXRlc3RfcHJpbnQbWzBtIC0gQXNzZXJ0aW9uRXJyb3I6IGFzc2VydCAnW1swLiAwLiAwLiAwLi4uIDAuIDAuIDAuXV1cbicgPT0gJ1tbMC4gMS4gMC4gMS4uLiAwLi4uChtbMzFtPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IBtbMzFtG1sxbTEgZmFpbGVkG1swbRtbMzFtIGluIDAuMTNzG1swbRtbMzFtID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0bWzBtCg==","stderr":"G1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IHRlc3Qgc2Vzc2lvbiBzdGFydHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQpwbGF0Zm9ybSBsaW51eCAtLSBQeXRob24gMy4xMC4xMiwgcHl0ZXN0LTcuMy4xLCBwbHVnZ3ktMS4wLjAKcm9vdGRpcjogL3dvcmtzcGFjZXMvbnVtcHktdHV0b3JpYWwtZXhlcmNpc2VzCnBsdWdpbnM6IHRlc3Rkb3gtMy4xLjAKY29sbGVjdGVkIDEgaXRlbQoKLmxlYXJuL2V4ZXJjaXNlcy8wMjAtY2hlY2tlcmJvYXJkLXBhdHRlcm4vdGVzdC5weSAbWzMxbUYbWzBtG1szMW0gICAgICAgICAgICAgICAgICAgICAgWzEwMCVdG1swbQoKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gRkFJTFVSRVMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KG1szMW0bWzFtX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXyB0ZXN0X3ByaW50IF9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18bWzBtCgpjYXBzeXMgPSA8X3B5dGVzdC5jYXB0dXJlLkNhcHR1cmVGaXh0dXJlIG9iamVjdCBhdCAweDdiNTk3NmRhMWFlMD4KCiAgICBAcHl0ZXN0Lm1hcmsuaXQoJ1RoZSBvdXRwdXQgc2hvdWxkIGJlIGEgY2hlY2tlcmJvYXJkLWxpa2UgbnVtcHkgbWF0cml4JykKICAgIGRlZiB0ZXN0X3ByaW50KGNhcHN5cyk6CiAgICAgICAgaW1wb3J0IGFwcAogICAgICAgIGNhcHR1cmVkID0gY2Fwc3lzLnJlYWRvdXRlcnIoKQo+ICAgICAgIGFzc2VydCBjYXB0dXJlZC5vdXQgPT0gXAogICAgIiIiW1swLiAxLiAwLiAxLiAwLiAxLiAwLiAxLl0KICAgICBbMS4gMC4gMS4gMC4gMS4gMC4gMS4gMC5dCiAgICAgWzAuIDEuIDAuIDEuIDAuIDEuIDAuIDEuXQogICAgIFsxLiAwLiAxLiAwLiAxLiAwLiAxLiAwLl0KICAgICBbMC4gMS4gMC4gMS4gMC4gMS4gMC4gMS5dCiAgICAgWzEuIDAuIDEuIDAuIDEuIDAuIDEuIDAuXQogICAgIFswLiAxLiAwLiAxLiAwLiAxLiAwLiAxLl0KICAgICBbMS4gMC4gMS4gMC4gMS4gMC4gMS4gMC5dXQogICAgIiIiChtbMW0bWzMxbUUgICAgICAgQXNzZXJ0aW9uRXJyb3I6IGFzc2VydCAnW1swLiAwLiAwLiAwLi4uIDAuIDAuIDAuXV1cbicgPT0gJ1tbMC4gMS4gMC4gMS4uLiAwLiAxLiAwLl1dXG4nG1swbQobWzFtG1szMW1FICAgICAgICAgLSBbWzAuIDEuIDAuIDEuIDAuIDEuIDAuIDEuXRtbMG0KG1sxbRtbMzFtRSAgICAgICAgIC0gIFsxLiAwLiAxLiAwLiAxLiAwLiAxLiAwLl0bWzBtChtbMW0bWzMxbUUgICAgICAgICAtICBbMC4gMS4gMC4gMS4gMC4gMS4gMC4gMS5dG1swbQobWzFtG1szMW1FICAgICAgICAgLSAgWzEuIDAuIDEuIDAuIDEuIDAuIDEuIDAuXRtbMG0KG1sxbRtbMzFtRSAgICAgICAgIC0gIFswLiAxLiAwLiAxLiAwLiAxLiAwLiAxLl0bWzBtChtbMW0bWzMxbUUgICAgICAgICAtICBbMS4gMC4gMS4gMC4gMS4gMC4gMS4gMC5dG1swbQobWzFtG1szMW1FICAgICAgICAgLSAgWzAuIDEuIDAuIDEuIDAuIDEuIDAuIDEuXS4uLhtbMG0KG1sxbRtbMzFtRSAgICAgICAgIBtbMG0KG1sxbRtbMzFtRSAgICAgICAgIC4uLkZ1bGwgb3V0cHV0IHRydW5jYXRlZCAoOSBsaW5lcyBoaWRkZW4pLCB1c2UgJy12dicgdG8gc2hvdxtbMG0KChtbMW0bWzMxbS5sZWFybi9leGVyY2lzZXMvMDIwLWNoZWNrZXJib2FyZC1wYXR0ZXJuL3Rlc3QucHkbWzBtOjk6IEFzc2VydGlvbkVycm9yChtbMzZtG1sxbT09PT09PT09PT09PT09PT09PT09PT09PT09PSBzaG9ydCB0ZXN0IHN1bW1hcnkgaW5mbyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09G1swbQobWzMxbUZBSUxFRBtbMG0gLmxlYXJuL2V4ZXJjaXNlcy8wMjAtY2hlY2tlcmJvYXJkLXBhdHRlcm4vdGVzdC5weTo6G1sxbXRlc3RfcHJpbnQbWzBtIC0gQXNzZXJ0aW9uRXJyb3I6IGFzc2VydCAnW1swLiAwLiAwLiAwLi4uIDAuIDAuIDAuXV1cbicgPT0gJ1tbMC4gMS4gMC4gMS4uLiAwLi4uChtbMzFtPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IBtbMzFtG1sxbTEgZmFpbGVkG1swbRtbMzFtIGluIDAuMTNzG1swbRtbMzFtID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0bWzBtCiwKCiAgIAogICAgICAgICAgG1szMW1Zb3VyIGNvZGUgbXVzdCB0byBjb21wbHkgd2l0aCB0aGUgZm9sbG93aW5nIHRlc3RzOhtbMzltIAoKICAgICAbWzMxbRtbMW14IChmYWlsKRtbMjJtG1szOW0gMC4gG1szN21UaGUgb3V0cHV0IHNob3VsZCBiZSBhIGNoZWNrZXJib2FyZC1saWtlIG51bXB5IG1hdHJpeBtbMzltIAoK","exit_code":1}],"is_testeable":true,"opened_at":1742489747415}],"workout_session":[{"started_at":1742480517285,"ended_at":1742483667279},{"started_at":1742485786586}],"user_id":11914,"last_interaction_at":1742490278863}